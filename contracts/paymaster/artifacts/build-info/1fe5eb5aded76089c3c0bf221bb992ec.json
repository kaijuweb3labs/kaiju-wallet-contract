{
	"id": "1fe5eb5aded76089c3c0bf221bb992ec",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/paymaster/KaijuVerifyingPaymaster.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n/// @author: kaiju3d.com\n\npragma solidity ^0.8.12;\n\n\nimport \"@account-abstraction/contracts/core/BasePaymaster.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n\n/**\n * A paymaster that uses external service to decide whether to pay for the UserOp.\n * The paymaster trusts an external signer to sign the transaction.\n * The calling user must pass the UserOp to that external signer first, which performs\n * whatever off-chain verification before signing the UserOp.\n * Note that this signature is NOT a replacement for the account-specific signature:\n * - the paymaster checks a signature to agree to PAY for GAS.\n * - the account checks a signature to prove identity and account ownership.\n */\n\ncontract KaijuVerifyingPaymaster is BasePaymaster {\n\n    using ECDSA for bytes32;\n    using UserOperationLib for UserOperation;\n\n    address public immutable verifyingSigner;\n\n    uint256 private constant VALID_TIMESTAMP_OFFSET = 20;\n\n    uint256 private constant SIGNATURE_OFFSET = 84;\n\n    constructor(IEntryPoint _entryPoint, address _verifyingSigner) BasePaymaster(_entryPoint) {\n        verifyingSigner = _verifyingSigner;\n    }\n\n    mapping(address => uint256) public senderNonce;\n\n    /**\n     * @dev Copy directly the userOp from calldata up to (but not including) the paymasterAndData. This encoding depends on the ABI encoding of calldata, but is much lighter to copy than referencing each field separately.\n     * @param userOp | User Operation\n     */\n\n    function pack(UserOperation calldata userOp) internal pure returns (bytes memory ret) {\n\n        bytes calldata pnd = userOp.paymasterAndData;\n\n        assembly {\n            let ofs := userOp\n            let len := sub(sub(pnd.offset, ofs), 32)\n            ret := mload(0x40)\n            mstore(0x40, add(ret, add(len, 32)))\n            mstore(ret, len)\n            calldatacopy(add(ret, 32), ofs, len)\n        }\n    }\n\n    /**\n     * @dev The hash we're going to sign off-chain (and validate on-chain). Method is called by \n     *      Off-chain Service - to sign the request.\n     *      On-chain Service - from the validatePaymasterUserOp, to validate the signature.\n     * @param userOp | User Operation\n     * @param validUntil | Validate Period\n     * @param validAfter | Validate Period\n     * \n     * Note:    that this signature covers all fields of the UserOperation, except the \"paymasterAndData\",\n     *          which will carry the signature itself.\n     */\n\n    function getHash(UserOperation calldata userOp, uint48 validUntil, uint48 validAfter)\n    public view returns (bytes32) {\n\n        return keccak256(abi.encode(\n                pack(userOp),\n                block.chainid,\n                address(this),\n                senderNonce[userOp.getSender()],\n                validUntil,\n                validAfter\n            ));\n    }\n\n    /**\n     * @dev verify our external signer signed this request. The \"paymasterAndData\" is expected to be the paymaster and a signature over the entire request params\n     * @param userOp | User Operation\n     * @param requiredPreFund | To be Developed\n     * @return context | \n     * @return validationData | Validated Data for the Paymaster\n     * \n     * Note :   ECDSA library supports both 64 and 65-byte long signatures. Only \"require\" it here so that the revert reason on invalid signature will be of \"VerifyingPaymaster\", and not \"ECDSA\".\n     *          Don't revert on signature failure: return SIG_VALIDATION_FAILED\n     *          No need for other on-chain validation: entire UserOp should have been checked by the external service prior to signing it.\n     */\n\n    function _validatePaymasterUserOp(UserOperation calldata userOp, bytes32 /*userOpHash*/, uint256 requiredPreFund)\n    internal override returns (bytes memory context, uint256 validationData) {\n        (requiredPreFund);\n\n        (uint48 validUntil, uint48 validAfter, bytes calldata signature) = parsePaymasterAndData(userOp.paymasterAndData);\n\n        require(signature.length == 64 || signature.length == 65, \"VerifyingPaymaster: invalid signature length in paymasterAndData\");\n        bytes32 hash = ECDSA.toEthSignedMessageHash(getHash(userOp, validUntil, validAfter));\n        senderNonce[userOp.getSender()]++;\n\n        if (verifyingSigner != ECDSA.recover(hash, signature)) {\n            return (\"\",_packValidationData(true,validUntil,validAfter));\n        }\n        return (\"\",_packValidationData(false,validUntil,validAfter));\n    }\n\n    /**\n     * @dev parse paymaster and data\n     * @param paymasterAndData | paymaster and data\n     */\n\n    function parsePaymasterAndData(bytes calldata paymasterAndData) public pure returns(uint48 validUntil, uint48 validAfter, bytes calldata signature) {\n        (validUntil, validAfter) = abi.decode(paymasterAndData[VALID_TIMESTAMP_OFFSET:SIGNATURE_OFFSET],(uint48, uint48));\n        signature = paymasterAndData[SIGNATURE_OFFSET:];\n    }\n}"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"
			},
			"@account-abstraction/contracts/core/BasePaymaster.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n\n/* solhint-disable reason-string */\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../interfaces/IPaymaster.sol\";\nimport \"../interfaces/IEntryPoint.sol\";\nimport \"./Helpers.sol\";\n\n/**\n * Helper class for creating a paymaster.\n * provides helper methods for staking.\n * validates that the postOp is called only by the entryPoint\n */\nabstract contract BasePaymaster is IPaymaster, Ownable {\n\n    IEntryPoint immutable public entryPoint;\n\n    constructor(IEntryPoint _entryPoint) {\n        entryPoint = _entryPoint;\n    }\n\n    /// @inheritdoc IPaymaster\n    function validatePaymasterUserOp(UserOperation calldata userOp, bytes32 userOpHash, uint256 maxCost)\n    external override returns (bytes memory context, uint256 validationData) {\n         _requireFromEntryPoint();\n        return _validatePaymasterUserOp(userOp, userOpHash, maxCost);\n    }\n\n    function _validatePaymasterUserOp(UserOperation calldata userOp, bytes32 userOpHash, uint256 maxCost)\n    internal virtual returns (bytes memory context, uint256 validationData);\n\n    /// @inheritdoc IPaymaster\n    function postOp(PostOpMode mode, bytes calldata context, uint256 actualGasCost) external override {\n        _requireFromEntryPoint();\n        _postOp(mode, context, actualGasCost);\n    }\n\n    /**\n     * post-operation handler.\n     * (verified to be called only through the entryPoint)\n     * @dev if subclass returns a non-empty context from validatePaymasterUserOp, it must also implement this method.\n     * @param mode enum with the following options:\n     *      opSucceeded - user operation succeeded.\n     *      opReverted  - user op reverted. still has to pay for gas.\n     *      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n     *                       Now this is the 2nd call, after user's op was deliberately reverted.\n     * @param context - the context value returned by validatePaymasterUserOp\n     * @param actualGasCost - actual gas used so far (without this postOp call).\n     */\n    function _postOp(PostOpMode mode, bytes calldata context, uint256 actualGasCost) internal virtual {\n\n        (mode,context,actualGasCost); // unused params\n        // subclass must override this method if validatePaymasterUserOp returns a context\n        revert(\"must override\");\n    }\n\n    /**\n     * add a deposit for this paymaster, used for paying for transaction fees\n     */\n    function deposit() public payable {\n        entryPoint.depositTo{value : msg.value}(address(this));\n    }\n\n    /**\n     * withdraw value from the deposit\n     * @param withdrawAddress target to send to\n     * @param amount to withdraw\n     */\n    function withdrawTo(address payable withdrawAddress, uint256 amount) public onlyOwner {\n        entryPoint.withdrawTo(withdrawAddress, amount);\n    }\n    /**\n     * add stake for this paymaster.\n     * This method can also carry eth value to add to the current stake.\n     * @param unstakeDelaySec - the unstake delay for this paymaster. Can only be increased.\n     */\n    function addStake(uint32 unstakeDelaySec) external payable onlyOwner {\n        entryPoint.addStake{value : msg.value}(unstakeDelaySec);\n    }\n\n    /**\n     * return current paymaster's deposit on the entryPoint.\n     */\n    function getDeposit() public view returns (uint256) {\n        return entryPoint.balanceOf(address(this));\n    }\n\n    /**\n     * unlock the stake, in order to withdraw it.\n     * The paymaster can't serve requests once unlocked, until it calls addStake again\n     */\n    function unlockStake() external onlyOwner {\n        entryPoint.unlockStake();\n    }\n\n    /**\n     * withdraw the entire paymaster's stake.\n     * stake must be unlocked first (and then wait for the unstakeDelay to be over)\n     * @param withdrawAddress the address to send withdrawn value.\n     */\n    function withdrawStake(address payable withdrawAddress) external onlyOwner {\n        entryPoint.withdrawStake(withdrawAddress);\n    }\n\n    /// validate the call is made from a valid entrypoint\n    function _requireFromEntryPoint() internal virtual {\n        require(msg.sender == address(entryPoint), \"Sender not EntryPoint\");\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@account-abstraction/contracts/core/Helpers.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/* solhint-disable no-inline-assembly */\n\n/**\n * returned data from validateUserOp.\n * validateUserOp returns a uint256, with is created by `_packedValidationData` and parsed by `_parseValidationData`\n * @param aggregator - address(0) - the account validated the signature by itself.\n *              address(1) - the account failed to validate the signature.\n *              otherwise - this is an address of a signature aggregator that must be used to validate the signature.\n * @param validAfter - this UserOp is valid only after this timestamp.\n * @param validaUntil - this UserOp is valid only up to this timestamp.\n */\n    struct ValidationData {\n        address aggregator;\n        uint48 validAfter;\n        uint48 validUntil;\n    }\n\n//extract sigFailed, validAfter, validUntil.\n// also convert zero validUntil to type(uint48).max\n    function _parseValidationData(uint validationData) pure returns (ValidationData memory data) {\n        address aggregator = address(uint160(validationData));\n        uint48 validUntil = uint48(validationData >> 160);\n        if (validUntil == 0) {\n            validUntil = type(uint48).max;\n        }\n        uint48 validAfter = uint48(validationData >> (48 + 160));\n        return ValidationData(aggregator, validAfter, validUntil);\n    }\n\n// intersect account and paymaster ranges.\n    function _intersectTimeRange(uint256 validationData, uint256 paymasterValidationData) pure returns (ValidationData memory) {\n        ValidationData memory accountValidationData = _parseValidationData(validationData);\n        ValidationData memory pmValidationData = _parseValidationData(paymasterValidationData);\n        address aggregator = accountValidationData.aggregator;\n        if (aggregator == address(0)) {\n            aggregator = pmValidationData.aggregator;\n        }\n        uint48 validAfter = accountValidationData.validAfter;\n        uint48 validUntil = accountValidationData.validUntil;\n        uint48 pmValidAfter = pmValidationData.validAfter;\n        uint48 pmValidUntil = pmValidationData.validUntil;\n\n        if (validAfter < pmValidAfter) validAfter = pmValidAfter;\n        if (validUntil > pmValidUntil) validUntil = pmValidUntil;\n        return ValidationData(aggregator, validAfter, validUntil);\n    }\n\n/**\n * helper to pack the return value for validateUserOp\n * @param data - the ValidationData to pack\n */\n    function _packValidationData(ValidationData memory data) pure returns (uint256) {\n        return uint160(data.aggregator) | (uint256(data.validUntil) << 160) | (uint256(data.validAfter) << (160 + 48));\n    }\n\n/**\n * helper to pack the return value for validateUserOp, when not using an aggregator\n * @param sigFailed - true for signature failure, false for success\n * @param validUntil last timestamp this UserOperation is valid (or zero for infinite)\n * @param validAfter first timestamp this UserOperation is valid\n */\n    function _packValidationData(bool sigFailed, uint48 validUntil, uint48 validAfter) pure returns (uint256) {\n        return (sigFailed ? 1 : 0) | (uint256(validUntil) << 160) | (uint256(validAfter) << (160 + 48));\n    }\n\n/**\n * keccak function over calldata.\n * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\n */\n    function calldataKeccak(bytes calldata data) pure returns (bytes32 ret) {\n        assembly {\n            let mem := mload(0x40)\n            let len := data.length\n            calldatacopy(mem, data.offset, len)\n            ret := keccak256(mem, len)\n        }\n    }\n\n"
			},
			"@account-abstraction/contracts/interfaces/IEntryPoint.sol": {
				"content": "/**\n ** Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\n ** Only one instance required on each chain.\n **/\n// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n/* solhint-disable reason-string */\n\nimport \"./UserOperation.sol\";\nimport \"./IStakeManager.sol\";\nimport \"./IAggregator.sol\";\nimport \"./INonceManager.sol\";\n\ninterface IEntryPoint is IStakeManager, INonceManager {\n\n    /***\n     * An event emitted after each successful request\n     * @param userOpHash - unique identifier for the request (hash its entire content, except signature).\n     * @param sender - the account that generates this request.\n     * @param paymaster - if non-null, the paymaster that pays for this request.\n     * @param nonce - the nonce value from the request.\n     * @param success - true if the sender transaction succeeded, false if reverted.\n     * @param actualGasCost - actual amount paid (by account or paymaster) for this UserOperation.\n     * @param actualGasUsed - total gas used by this UserOperation (including preVerification, creation, validation and execution).\n     */\n    event UserOperationEvent(bytes32 indexed userOpHash, address indexed sender, address indexed paymaster, uint256 nonce, bool success, uint256 actualGasCost, uint256 actualGasUsed);\n\n    /**\n     * account \"sender\" was deployed.\n     * @param userOpHash the userOp that deployed this account. UserOperationEvent will follow.\n     * @param sender the account that is deployed\n     * @param factory the factory used to deploy this account (in the initCode)\n     * @param paymaster the paymaster used by this UserOp\n     */\n    event AccountDeployed(bytes32 indexed userOpHash, address indexed sender, address factory, address paymaster);\n\n    /**\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length\n     * @param userOpHash the request unique identifier.\n     * @param sender the sender of this request\n     * @param nonce the nonce used in the request\n     * @param revertReason - the return bytes from the (reverted) call to \"callData\".\n     */\n    event UserOperationRevertReason(bytes32 indexed userOpHash, address indexed sender, uint256 nonce, bytes revertReason);\n\n    /**\n     * an event emitted by handleOps(), before starting the execution loop.\n     * any event emitted before this event, is part of the validation.\n     */\n    event BeforeExecution();\n\n    /**\n     * signature aggregator used by the following UserOperationEvents within this bundle.\n     */\n    event SignatureAggregatorChanged(address indexed aggregator);\n\n    /**\n     * a custom revert error of handleOps, to identify the offending op.\n     *  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n     *  @param opIndex - index into the array of ops to the failed one (in simulateValidation, this is always zero)\n     *  @param reason - revert reason\n     *      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n     *      so a failure can be attributed to the correct entity.\n     *   Should be caught in off-chain handleOps simulation and not happen on-chain.\n     *   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n     */\n    error FailedOp(uint256 opIndex, string reason);\n\n    /**\n     * error case when a signature aggregator fails to verify the aggregated signature it had created.\n     */\n    error SignatureValidationFailed(address aggregator);\n\n    /**\n     * Successful result from simulateValidation.\n     * @param returnInfo gas and time-range returned values\n     * @param senderInfo stake information about the sender\n     * @param factoryInfo stake information about the factory (if any)\n     * @param paymasterInfo stake information about the paymaster (if any)\n     */\n    error ValidationResult(ReturnInfo returnInfo,\n        StakeInfo senderInfo, StakeInfo factoryInfo, StakeInfo paymasterInfo);\n\n    /**\n     * Successful result from simulateValidation, if the account returns a signature aggregator\n     * @param returnInfo gas and time-range returned values\n     * @param senderInfo stake information about the sender\n     * @param factoryInfo stake information about the factory (if any)\n     * @param paymasterInfo stake information about the paymaster (if any)\n     * @param aggregatorInfo signature aggregation info (if the account requires signature aggregator)\n     *      bundler MUST use it to verify the signature, or reject the UserOperation\n     */\n    error ValidationResultWithAggregation(ReturnInfo returnInfo,\n        StakeInfo senderInfo, StakeInfo factoryInfo, StakeInfo paymasterInfo,\n        AggregatorStakeInfo aggregatorInfo);\n\n    /**\n     * return value of getSenderAddress\n     */\n    error SenderAddressResult(address sender);\n\n    /**\n     * return value of simulateHandleOp\n     */\n    error ExecutionResult(uint256 preOpGas, uint256 paid, uint48 validAfter, uint48 validUntil, bool targetSuccess, bytes targetResult);\n\n    //UserOps handled, per aggregator\n    struct UserOpsPerAggregator {\n        UserOperation[] userOps;\n\n        // aggregator address\n        IAggregator aggregator;\n        // aggregated signature\n        bytes signature;\n    }\n\n    /**\n     * Execute a batch of UserOperation.\n     * no signature aggregator is used.\n     * if any account requires an aggregator (that is, it returned an aggregator when\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\n     * @param ops the operations to execute\n     * @param beneficiary the address to receive the fees\n     */\n    function handleOps(UserOperation[] calldata ops, address payable beneficiary) external;\n\n    /**\n     * Execute a batch of UserOperation with Aggregators\n     * @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\n     * @param beneficiary the address to receive the fees\n     */\n    function handleAggregatedOps(\n        UserOpsPerAggregator[] calldata opsPerAggregator,\n        address payable beneficiary\n    ) external;\n\n    /**\n     * generate a request Id - unique identifier for this request.\n     * the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\n     */\n    function getUserOpHash(UserOperation calldata userOp) external view returns (bytes32);\n\n    /**\n     * Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\n     * @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\n     * @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\n     * @param userOp the user operation to validate.\n     */\n    function simulateValidation(UserOperation calldata userOp) external;\n\n    /**\n     * gas and return values during simulation\n     * @param preOpGas the gas used for validation (including preValidationGas)\n     * @param prefund the required prefund for this operation\n     * @param sigFailed validateUserOp's (or paymaster's) signature check failed\n     * @param validAfter - first timestamp this UserOp is valid (merging account and paymaster time-range)\n     * @param validUntil - last timestamp this UserOp is valid (merging account and paymaster time-range)\n     * @param paymasterContext returned by validatePaymasterUserOp (to be passed into postOp)\n     */\n    struct ReturnInfo {\n        uint256 preOpGas;\n        uint256 prefund;\n        bool sigFailed;\n        uint48 validAfter;\n        uint48 validUntil;\n        bytes paymasterContext;\n    }\n\n    /**\n     * returned aggregated signature info.\n     * the aggregator returned by the account, and its current stake.\n     */\n    struct AggregatorStakeInfo {\n        address aggregator;\n        StakeInfo stakeInfo;\n    }\n\n    /**\n     * Get counterfactual sender address.\n     *  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n     * this method always revert, and returns the address in SenderAddressResult error\n     * @param initCode the constructor code to be passed into the UserOperation.\n     */\n    function getSenderAddress(bytes memory initCode) external;\n\n\n    /**\n     * simulate full execution of a UserOperation (including both validation and target execution)\n     * this method will always revert with \"ExecutionResult\".\n     * it performs full validation of the UserOperation, but ignores signature error.\n     * an optional target address is called after the userop succeeds, and its value is returned\n     * (before the entire call is reverted)\n     * Note that in order to collect the the success/failure of the target call, it must be executed\n     * with trace enabled to track the emitted events.\n     * @param op the UserOperation to simulate\n     * @param target if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult\n     *        are set to the return from that call.\n     * @param targetCallData callData to pass to target address\n     */\n    function simulateHandleOp(UserOperation calldata op, address target, bytes calldata targetCallData) external;\n}\n\n"
			},
			"@account-abstraction/contracts/interfaces/IPaymaster.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\nimport \"./UserOperation.sol\";\n\n/**\n * the interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n * a paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\n */\ninterface IPaymaster {\n\n    enum PostOpMode {\n        opSucceeded, // user op succeeded\n        opReverted, // user op reverted. still has to pay for gas.\n        postOpReverted //user op succeeded, but caused postOp to revert. Now it's a 2nd call, after user's op was deliberately reverted.\n    }\n\n    /**\n     * payment validation: check if paymaster agrees to pay.\n     * Must verify sender is the entryPoint.\n     * Revert to reject this request.\n     * Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted)\n     * The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n     * @param userOp the user operation\n     * @param userOpHash hash of the user's request data.\n     * @param maxCost the maximum cost of this transaction (based on maximum gas and gas price from userOp)\n     * @return context value to send to a postOp\n     *      zero length to signify postOp is not required.\n     * @return validationData signature and time-range of this operation, encoded the same as the return value of validateUserOperation\n     *      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n     *         otherwise, an address of an \"authorizer\" contract.\n     *      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n     *      <6-byte> validAfter - first timestamp this operation is valid\n     *      Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function validatePaymasterUserOp(UserOperation calldata userOp, bytes32 userOpHash, uint256 maxCost)\n    external returns (bytes memory context, uint256 validationData);\n\n    /**\n     * post-operation handler.\n     * Must verify sender is the entryPoint\n     * @param mode enum with the following options:\n     *      opSucceeded - user operation succeeded.\n     *      opReverted  - user op reverted. still has to pay for gas.\n     *      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n     *                       Now this is the 2nd call, after user's op was deliberately reverted.\n     * @param context - the context value returned by validatePaymasterUserOp\n     * @param actualGasCost - actual gas used so far (without this postOp call).\n     */\n    function postOp(PostOpMode mode, bytes calldata context, uint256 actualGasCost) external;\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@account-abstraction/contracts/interfaces/UserOperation.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/* solhint-disable no-inline-assembly */\n\nimport {calldataKeccak} from \"../core/Helpers.sol\";\n\n/**\n * User Operation struct\n * @param sender the sender account of this request.\n     * @param nonce unique value the sender uses to verify it is not a replay.\n     * @param initCode if set, the account contract will be created by this constructor/\n     * @param callData the method call to execute on this account.\n     * @param callGasLimit the gas limit passed to the callData method call.\n     * @param verificationGasLimit gas used for validateUserOp and validatePaymasterUserOp.\n     * @param preVerificationGas gas not calculated by the handleOps method, but added to the gas paid. Covers batch overhead.\n     * @param maxFeePerGas same as EIP-1559 gas parameter.\n     * @param maxPriorityFeePerGas same as EIP-1559 gas parameter.\n     * @param paymasterAndData if set, this field holds the paymaster address and paymaster-specific data. the paymaster will pay for the transaction instead of the sender.\n     * @param signature sender-verified signature over the entire request, the EntryPoint address and the chain ID.\n     */\n    struct UserOperation {\n\n        address sender;\n        uint256 nonce;\n        bytes initCode;\n        bytes callData;\n        uint256 callGasLimit;\n        uint256 verificationGasLimit;\n        uint256 preVerificationGas;\n        uint256 maxFeePerGas;\n        uint256 maxPriorityFeePerGas;\n        bytes paymasterAndData;\n        bytes signature;\n    }\n\n/**\n * Utility functions helpful when working with UserOperation structs.\n */\nlibrary UserOperationLib {\n\n    function getSender(UserOperation calldata userOp) internal pure returns (address) {\n        address data;\n        //read sender from userOp, which is first userOp member (saves 800 gas...)\n        assembly {data := calldataload(userOp)}\n        return address(uint160(data));\n    }\n\n    //relayer/block builder might submit the TX with higher priorityFee, but the user should not\n    // pay above what he signed for.\n    function gasPrice(UserOperation calldata userOp) internal view returns (uint256) {\n    unchecked {\n        uint256 maxFeePerGas = userOp.maxFeePerGas;\n        uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\n        if (maxFeePerGas == maxPriorityFeePerGas) {\n            //legacy mode (for networks that don't support basefee opcode)\n            return maxFeePerGas;\n        }\n        return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\n    }\n    }\n\n    function pack(UserOperation calldata userOp) internal pure returns (bytes memory ret) {\n        address sender = getSender(userOp);\n        uint256 nonce = userOp.nonce;\n        bytes32 hashInitCode = calldataKeccak(userOp.initCode);\n        bytes32 hashCallData = calldataKeccak(userOp.callData);\n        uint256 callGasLimit = userOp.callGasLimit;\n        uint256 verificationGasLimit = userOp.verificationGasLimit;\n        uint256 preVerificationGas = userOp.preVerificationGas;\n        uint256 maxFeePerGas = userOp.maxFeePerGas;\n        uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\n        bytes32 hashPaymasterAndData = calldataKeccak(userOp.paymasterAndData);\n\n        return abi.encode(\n            sender, nonce,\n            hashInitCode, hashCallData,\n            callGasLimit, verificationGasLimit, preVerificationGas,\n            maxFeePerGas, maxPriorityFeePerGas,\n            hashPaymasterAndData\n        );\n    }\n\n    function hash(UserOperation calldata userOp) internal pure returns (bytes32) {\n        return keccak256(pack(userOp));\n    }\n\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n}\n"
			},
			"@account-abstraction/contracts/interfaces/INonceManager.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\ninterface INonceManager {\n\n    /**\n     * Return the next nonce for this sender.\n     * Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n     * But UserOp with different keys can come with arbitrary order.\n     *\n     * @param sender the account address\n     * @param key the high 192 bit of the nonce\n     * @return nonce a full nonce to pass for next UserOp with this sender.\n     */\n    function getNonce(address sender, uint192 key)\n    external view returns (uint256 nonce);\n\n    /**\n     * Manually increment the nonce of the sender.\n     * This method is exposed just for completeness..\n     * Account does NOT need to call it, neither during validation, nor elsewhere,\n     * as the EntryPoint will update the nonce regardless.\n     * Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n     * UserOperations will not pay extra for the first transaction with a given key.\n     */\n    function incrementNonce(uint192 key) external;\n}\n"
			},
			"@account-abstraction/contracts/interfaces/IAggregator.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\nimport \"./UserOperation.sol\";\n\n/**\n * Aggregated Signatures validator.\n */\ninterface IAggregator {\n\n    /**\n     * validate aggregated signature.\n     * revert if the aggregated signature does not match the given list of operations.\n     */\n    function validateSignatures(UserOperation[] calldata userOps, bytes calldata signature) external view;\n\n    /**\n     * validate signature of a single userOp\n     * This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n     * First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n     * @param userOp the userOperation received from the user.\n     * @return sigForUserOp the value to put into the signature field of the userOp when calling handleOps.\n     *    (usually empty, unless account and aggregator support some kind of \"multisig\"\n     */\n    function validateUserOpSignature(UserOperation calldata userOp)\n    external view returns (bytes memory sigForUserOp);\n\n    /**\n     * aggregate multiple signatures into a single value.\n     * This method is called off-chain to calculate the signature to pass with handleOps()\n     * bundler MAY use optimized custom code perform this aggregation\n     * @param userOps array of UserOperations to collect the signatures from.\n     * @return aggregatedSignature the aggregated signature\n     */\n    function aggregateSignatures(UserOperation[] calldata userOps) external view returns (bytes memory aggregatedSignature);\n}\n"
			},
			"@account-abstraction/contracts/interfaces/IStakeManager.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.12;\n\n/**\n * manage deposits and stakes.\n * deposit is just a balance used to pay for UserOperations (either by a paymaster or an account)\n * stake is value locked for at least \"unstakeDelay\" by the staked entity.\n */\ninterface IStakeManager {\n\n    event Deposited(\n        address indexed account,\n        uint256 totalDeposit\n    );\n\n    event Withdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    /// Emitted when stake or unstake delay are modified\n    event StakeLocked(\n        address indexed account,\n        uint256 totalStaked,\n        uint256 unstakeDelaySec\n    );\n\n    /// Emitted once a stake is scheduled for withdrawal\n    event StakeUnlocked(\n        address indexed account,\n        uint256 withdrawTime\n    );\n\n    event StakeWithdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    /**\n     * @param deposit the entity's deposit\n     * @param staked true if this entity is staked.\n     * @param stake actual amount of ether staked for this entity.\n     * @param unstakeDelaySec minimum delay to withdraw the stake.\n     * @param withdrawTime - first block timestamp where 'withdrawStake' will be callable, or zero if already locked\n     * @dev sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\n     *    and the rest fit into a 2nd cell.\n     *    112 bit allows for 10^15 eth\n     *    48 bit for full timestamp\n     *    32 bit allows 150 years for unstake delay\n     */\n    struct DepositInfo {\n        uint112 deposit;\n        bool staked;\n        uint112 stake;\n        uint32 unstakeDelaySec;\n        uint48 withdrawTime;\n    }\n\n    //API struct used by getStakeInfo and simulateValidation\n    struct StakeInfo {\n        uint256 stake;\n        uint256 unstakeDelaySec;\n    }\n\n    /// @return info - full deposit information of given account\n    function getDepositInfo(address account) external view returns (DepositInfo memory info);\n\n    /// @return the deposit (for gas payment) of the account\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * add to the deposit of the given account\n     */\n    function depositTo(address account) external payable;\n\n    /**\n     * add to the account's stake - amount and delay\n     * any pending unstake is first cancelled.\n     * @param _unstakeDelaySec the new lock duration before the deposit can be withdrawn.\n     */\n    function addStake(uint32 _unstakeDelaySec) external payable;\n\n    /**\n     * attempt to unlock the stake.\n     * the value can be withdrawn (using withdrawStake) after the unstake delay.\n     */\n    function unlockStake() external;\n\n    /**\n     * withdraw from the (unlocked) stake.\n     * must first call unlockStake and wait for the unstakeDelay to pass\n     * @param withdrawAddress the address to send withdrawn value.\n     */\n    function withdrawStake(address payable withdrawAddress) external;\n\n    /**\n     * withdraw from the deposit.\n     * @param withdrawAddress the address to send withdrawn value.\n     * @param withdrawAmount the amount to withdraw.\n     */\n    function withdrawTo(address payable withdrawAddress, uint256 withdrawAmount) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@account-abstraction/contracts/core/BasePaymaster.sol": {
				"BasePaymaster": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "unstakeDelaySec",
									"type": "uint32"
								}
							],
							"name": "addStake",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "entryPoint",
							"outputs": [
								{
									"internalType": "contract IEntryPoint",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum IPaymaster.PostOpMode",
									"name": "mode",
									"type": "uint8"
								},
								{
									"internalType": "bytes",
									"name": "context",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "actualGasCost",
									"type": "uint256"
								}
							],
							"name": "postOp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlockStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "callGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "verificationGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPriorityFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct UserOperation",
									"name": "userOp",
									"type": "tuple"
								},
								{
									"internalType": "bytes32",
									"name": "userOpHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "maxCost",
									"type": "uint256"
								}
							],
							"name": "validatePaymasterUserOp",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "context",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "validationData",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "withdrawAddress",
									"type": "address"
								}
							],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "withdrawAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addStake(uint32)": {
								"params": {
									"unstakeDelaySec": "- the unstake delay for this paymaster. Can only be increased."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"postOp(uint8,bytes,uint256)": {
								"params": {
									"actualGasCost": "- actual gas used so far (without this postOp call).",
									"context": "- the context value returned by validatePaymasterUserOp",
									"mode": "enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
								"params": {
									"maxCost": "the maximum cost of this transaction (based on maximum gas and gas price from userOp)",
									"userOp": "the user operation",
									"userOpHash": "hash of the user's request data."
								},
								"returns": {
									"context": "value to send to a postOp      zero length to signify postOp is not required.",
									"validationData": "signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \"authorizer\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly."
								}
							},
							"withdrawStake(address)": {
								"params": {
									"withdrawAddress": "the address to send withdrawn value."
								}
							},
							"withdrawTo(address,uint256)": {
								"params": {
									"amount": "to withdraw",
									"withdrawAddress": "target to send to"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addStake(uint32)": "0396cb60",
							"deposit()": "d0e30db0",
							"entryPoint()": "b0d691fe",
							"getDeposit()": "c399ec88",
							"owner()": "8da5cb5b",
							"postOp(uint8,bytes,uint256)": "a9a23409",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unlockStake()": "bb9fe6bf",
							"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "f465c77e",
							"withdrawStake(address)": "c23a5cea",
							"withdrawTo(address,uint256)": "205c2878"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- the unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"userOp\":\"the user operation\",\"userOpHash\":\"hash of the user's request data.\"},\"returns\":{\"context\":\"value to send to a postOp      zero length to signify postOp is not required.\",\"validationData\":\"signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"to withdraw\",\"withdrawAddress\":\"target to send to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"add a deposit for this paymaster, used for paying for transaction fees\"},\"getDeposit()\":{\"notice\":\"return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"unlockStake()\":{\"notice\":\"unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw value from the deposit\"}},\"notice\":\"Helper class for creating a paymaster. provides helper methods for staking. validates that the postOp is called only by the entryPoint\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/core/BasePaymaster.sol\":\"BasePaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0x27f658d545b5f26c2e09a7ac4fba72f9975433839d10225a520e557540b84443\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://426f0c6565ae612d34ae184fb1582e6fc360abf79450975c1c2dd439184094a0\",\"dweb:/ipfs/QmZMeMosC1P6Z5BQyT6iGFQrY6ui5ART65ycVWmXFnDpoq\"]},\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x36858ba8685024974f533530420688da3454d29996ebc42e410673a1ed2ec456\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://616cbcf51778b1961b7f20a547bec7efae6d1d565df0f651926241ed8bde9ad8\",\"dweb:/ipfs/QmaVsgffUUmeUJYgStvRr8cNZ1LBbrc3FYNLW4JT1dVLia\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1059,
								"contract": "@account-abstraction/contracts/core/BasePaymaster.sol:BasePaymaster",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addStake(uint32)": {
								"notice": "add stake for this paymaster. This method can also carry eth value to add to the current stake."
							},
							"deposit()": {
								"notice": "add a deposit for this paymaster, used for paying for transaction fees"
							},
							"getDeposit()": {
								"notice": "return current paymaster's deposit on the entryPoint."
							},
							"postOp(uint8,bytes,uint256)": {
								"notice": "post-operation handler. Must verify sender is the entryPoint"
							},
							"unlockStake()": {
								"notice": "unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again"
							},
							"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
								"notice": "payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."
							},
							"withdrawStake(address)": {
								"notice": "withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)"
							},
							"withdrawTo(address,uint256)": {
								"notice": "withdraw value from the deposit"
							}
						},
						"notice": "Helper class for creating a paymaster. provides helper methods for staking. validates that the postOp is called only by the entryPoint",
						"version": 1
					}
				}
			},
			"@account-abstraction/contracts/interfaces/IAggregator.sol": {
				"IAggregator": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "callGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "verificationGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPriorityFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct UserOperation[]",
									"name": "userOps",
									"type": "tuple[]"
								}
							],
							"name": "aggregateSignatures",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "aggregatedSignature",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "callGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "verificationGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPriorityFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct UserOperation[]",
									"name": "userOps",
									"type": "tuple[]"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "validateSignatures",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "callGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "verificationGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPriorityFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct UserOperation",
									"name": "userOp",
									"type": "tuple"
								}
							],
							"name": "validateUserOpSignature",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "sigForUserOp",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])": {
								"params": {
									"userOps": "array of UserOperations to collect the signatures from."
								},
								"returns": {
									"aggregatedSignature": "the aggregated signature"
								}
							},
							"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
								"params": {
									"userOp": "the userOperation received from the user."
								},
								"returns": {
									"sigForUserOp": "the value to put into the signature field of the userOp when calling handleOps.    (usually empty, unless account and aggregator support some kind of \"multisig\""
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])": "275e2d79",
							"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)": "e3563a4f",
							"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": "64c530cd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatedSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"params\":{\"userOps\":\"array of UserOperations to collect the signatures from.\"},\"returns\":{\"aggregatedSignature\":\"the aggregated signature\"}},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"userOp\":\"the userOperation received from the user.\"},\"returns\":{\"sigForUserOp\":\"the value to put into the signature field of the userOp when calling handleOps.    (usually empty, unless account and aggregator support some kind of \\\"multisig\\\"\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"notice\":\"aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code perform this aggregation\"},\"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)\":{\"notice\":\"validate aggregated signature. revert if the aggregated signature does not match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"validate signature of a single userOp This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\"}},\"notice\":\"Aggregated Signatures validator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IAggregator.sol\":\"IAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])": {
								"notice": "aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code perform this aggregation"
							},
							"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)": {
								"notice": "validate aggregated signature. revert if the aggregated signature does not match the given list of operations."
							},
							"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
								"notice": "validate signature of a single userOp This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps."
							}
						},
						"notice": "Aggregated Signatures validator.",
						"version": 1
					}
				}
			},
			"@account-abstraction/contracts/interfaces/IEntryPoint.sol": {
				"IEntryPoint": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "preOpGas",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paid",
									"type": "uint256"
								},
								{
									"internalType": "uint48",
									"name": "validAfter",
									"type": "uint48"
								},
								{
									"internalType": "uint48",
									"name": "validUntil",
									"type": "uint48"
								},
								{
									"internalType": "bool",
									"name": "targetSuccess",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "targetResult",
									"type": "bytes"
								}
							],
							"name": "ExecutionResult",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "opIndex",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "FailedOp",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "SenderAddressResult",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "aggregator",
									"type": "address"
								}
							],
							"name": "SignatureValidationFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "preOpGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "prefund",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "sigFailed",
											"type": "bool"
										},
										{
											"internalType": "uint48",
											"name": "validAfter",
											"type": "uint48"
										},
										{
											"internalType": "uint48",
											"name": "validUntil",
											"type": "uint48"
										},
										{
											"internalType": "bytes",
											"name": "paymasterContext",
											"type": "bytes"
										}
									],
									"internalType": "struct IEntryPoint.ReturnInfo",
									"name": "returnInfo",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "stake",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unstakeDelaySec",
											"type": "uint256"
										}
									],
									"internalType": "struct IStakeManager.StakeInfo",
									"name": "senderInfo",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "stake",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unstakeDelaySec",
											"type": "uint256"
										}
									],
									"internalType": "struct IStakeManager.StakeInfo",
									"name": "factoryInfo",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "stake",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unstakeDelaySec",
											"type": "uint256"
										}
									],
									"internalType": "struct IStakeManager.StakeInfo",
									"name": "paymasterInfo",
									"type": "tuple"
								}
							],
							"name": "ValidationResult",
							"type": "error"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "preOpGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "prefund",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "sigFailed",
											"type": "bool"
										},
										{
											"internalType": "uint48",
											"name": "validAfter",
											"type": "uint48"
										},
										{
											"internalType": "uint48",
											"name": "validUntil",
											"type": "uint48"
										},
										{
											"internalType": "bytes",
											"name": "paymasterContext",
											"type": "bytes"
										}
									],
									"internalType": "struct IEntryPoint.ReturnInfo",
									"name": "returnInfo",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "stake",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unstakeDelaySec",
											"type": "uint256"
										}
									],
									"internalType": "struct IStakeManager.StakeInfo",
									"name": "senderInfo",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "stake",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unstakeDelaySec",
											"type": "uint256"
										}
									],
									"internalType": "struct IStakeManager.StakeInfo",
									"name": "factoryInfo",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "stake",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unstakeDelaySec",
											"type": "uint256"
										}
									],
									"internalType": "struct IStakeManager.StakeInfo",
									"name": "paymasterInfo",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "aggregator",
											"type": "address"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "stake",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "unstakeDelaySec",
													"type": "uint256"
												}
											],
											"internalType": "struct IStakeManager.StakeInfo",
											"name": "stakeInfo",
											"type": "tuple"
										}
									],
									"internalType": "struct IEntryPoint.AggregatorStakeInfo",
									"name": "aggregatorInfo",
									"type": "tuple"
								}
							],
							"name": "ValidationResultWithAggregation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "userOpHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "factory",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "paymaster",
									"type": "address"
								}
							],
							"name": "AccountDeployed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "BeforeExecution",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDeposit",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "aggregator",
									"type": "address"
								}
							],
							"name": "SignatureAggregatorChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalStaked",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unstakeDelaySec",
									"type": "uint256"
								}
							],
							"name": "StakeLocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "withdrawTime",
									"type": "uint256"
								}
							],
							"name": "StakeUnlocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "withdrawAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StakeWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "userOpHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "paymaster",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "actualGasCost",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "actualGasUsed",
									"type": "uint256"
								}
							],
							"name": "UserOperationEvent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "userOpHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "revertReason",
									"type": "bytes"
								}
							],
							"name": "UserOperationRevertReason",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "withdrawAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_unstakeDelaySec",
									"type": "uint32"
								}
							],
							"name": "addStake",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "depositTo",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getDepositInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint112",
											"name": "deposit",
											"type": "uint112"
										},
										{
											"internalType": "bool",
											"name": "staked",
											"type": "bool"
										},
										{
											"internalType": "uint112",
											"name": "stake",
											"type": "uint112"
										},
										{
											"internalType": "uint32",
											"name": "unstakeDelaySec",
											"type": "uint32"
										},
										{
											"internalType": "uint48",
											"name": "withdrawTime",
											"type": "uint48"
										}
									],
									"internalType": "struct IStakeManager.DepositInfo",
									"name": "info",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint192",
									"name": "key",
									"type": "uint192"
								}
							],
							"name": "getNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "initCode",
									"type": "bytes"
								}
							],
							"name": "getSenderAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "callGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "verificationGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPriorityFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct UserOperation",
									"name": "userOp",
									"type": "tuple"
								}
							],
							"name": "getUserOpHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "sender",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "nonce",
													"type": "uint256"
												},
												{
													"internalType": "bytes",
													"name": "initCode",
													"type": "bytes"
												},
												{
													"internalType": "bytes",
													"name": "callData",
													"type": "bytes"
												},
												{
													"internalType": "uint256",
													"name": "callGasLimit",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "verificationGasLimit",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "preVerificationGas",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "maxFeePerGas",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "maxPriorityFeePerGas",
													"type": "uint256"
												},
												{
													"internalType": "bytes",
													"name": "paymasterAndData",
													"type": "bytes"
												},
												{
													"internalType": "bytes",
													"name": "signature",
													"type": "bytes"
												}
											],
											"internalType": "struct UserOperation[]",
											"name": "userOps",
											"type": "tuple[]"
										},
										{
											"internalType": "contract IAggregator",
											"name": "aggregator",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct IEntryPoint.UserOpsPerAggregator[]",
									"name": "opsPerAggregator",
									"type": "tuple[]"
								},
								{
									"internalType": "address payable",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "handleAggregatedOps",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "callGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "verificationGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPriorityFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct UserOperation[]",
									"name": "ops",
									"type": "tuple[]"
								},
								{
									"internalType": "address payable",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "handleOps",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint192",
									"name": "key",
									"type": "uint192"
								}
							],
							"name": "incrementNonce",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "callGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "verificationGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPriorityFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct UserOperation",
									"name": "op",
									"type": "tuple"
								},
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "targetCallData",
									"type": "bytes"
								}
							],
							"name": "simulateHandleOp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "callGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "verificationGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPriorityFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct UserOperation",
									"name": "userOp",
									"type": "tuple"
								}
							],
							"name": "simulateValidation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlockStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "withdrawAddress",
									"type": "address"
								}
							],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "withdrawAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "withdrawAmount",
									"type": "uint256"
								}
							],
							"name": "withdrawTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"FailedOp(uint256,string)": [
								{
									"params": {
										"opIndex": "- index into the array of ops to the failed one (in simulateValidation, this is always zero)",
										"reason": "- revert reason      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,      so a failure can be attributed to the correct entity.   Should be caught in off-chain handleOps simulation and not happen on-chain.   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts."
									}
								}
							],
							"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))": [
								{
									"params": {
										"factoryInfo": "stake information about the factory (if any)",
										"paymasterInfo": "stake information about the paymaster (if any)",
										"returnInfo": "gas and time-range returned values",
										"senderInfo": "stake information about the sender"
									}
								}
							],
							"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))": [
								{
									"params": {
										"aggregatorInfo": "signature aggregation info (if the account requires signature aggregator)      bundler MUST use it to verify the signature, or reject the UserOperation",
										"factoryInfo": "stake information about the factory (if any)",
										"paymasterInfo": "stake information about the paymaster (if any)",
										"returnInfo": "gas and time-range returned values",
										"senderInfo": "stake information about the sender"
									}
								}
							]
						},
						"events": {
							"AccountDeployed(bytes32,address,address,address)": {
								"params": {
									"factory": "the factory used to deploy this account (in the initCode)",
									"paymaster": "the paymaster used by this UserOp",
									"sender": "the account that is deployed",
									"userOpHash": "the userOp that deployed this account. UserOperationEvent will follow."
								}
							},
							"UserOperationRevertReason(bytes32,address,uint256,bytes)": {
								"params": {
									"nonce": "the nonce used in the request",
									"revertReason": "- the return bytes from the (reverted) call to \"callData\".",
									"sender": "the sender of this request",
									"userOpHash": "the request unique identifier."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"addStake(uint32)": {
								"params": {
									"_unstakeDelaySec": "the new lock duration before the deposit can be withdrawn."
								}
							},
							"balanceOf(address)": {
								"returns": {
									"_0": "the deposit (for gas payment) of the account"
								}
							},
							"getDepositInfo(address)": {
								"returns": {
									"info": "- full deposit information of given account"
								}
							},
							"getNonce(address,uint192)": {
								"params": {
									"key": "the high 192 bit of the nonce",
									"sender": "the account address"
								},
								"returns": {
									"nonce": "a full nonce to pass for next UserOp with this sender."
								}
							},
							"getSenderAddress(bytes)": {
								"params": {
									"initCode": "the constructor code to be passed into the UserOperation."
								}
							},
							"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)": {
								"params": {
									"beneficiary": "the address to receive the fees",
									"opsPerAggregator": "the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)"
								}
							},
							"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)": {
								"params": {
									"beneficiary": "the address to receive the fees",
									"ops": "the operations to execute"
								}
							},
							"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)": {
								"params": {
									"op": "the UserOperation to simulate",
									"target": "if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult        are set to the return from that call.",
									"targetCallData": "callData to pass to target address"
								}
							},
							"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
								"details": "this method always revert. Successful result is ValidationResult error. other errors are failures.The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.",
								"params": {
									"userOp": "the user operation to validate."
								}
							},
							"withdrawStake(address)": {
								"params": {
									"withdrawAddress": "the address to send withdrawn value."
								}
							},
							"withdrawTo(address,uint256)": {
								"params": {
									"withdrawAddress": "the address to send withdrawn value.",
									"withdrawAmount": "the amount to withdraw."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addStake(uint32)": "0396cb60",
							"balanceOf(address)": "70a08231",
							"depositTo(address)": "b760faf9",
							"getDepositInfo(address)": "5287ce12",
							"getNonce(address,uint192)": "35567e1a",
							"getSenderAddress(bytes)": "9b249f69",
							"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": "a6193531",
							"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)": "4b1d7cf5",
							"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)": "1fad948c",
							"incrementNonce(uint192)": "0bd28e3b",
							"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)": "d6383f94",
							"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": "ee219423",
							"unlockStake()": "bb9fe6bf",
							"withdrawStake(address)": "c23a5cea",
							"withdrawTo(address,uint256)": "205c2878"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"targetSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"targetResult\",\"type\":\"bytes\"}],\"name\":\"ExecutionResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResult\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"stakeInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct IEntryPoint.AggregatorStakeInfo\",\"name\":\"aggregatorInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResultWithAggregation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"op\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"targetCallData\",\"type\":\"bytes\"}],\"name\":\"simulateHandleOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"simulateValidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- index into the array of ops to the failed one (in simulateValidation, this is always zero)\",\"reason\":\"- revert reason      The string starts with a unique code \\\"AAmn\\\", where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,      so a failure can be attributed to the correct entity.   Should be caught in off-chain handleOps simulation and not happen on-chain.   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\"}}],\"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"params\":{\"factoryInfo\":\"stake information about the factory (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"params\":{\"aggregatorInfo\":\"signature aggregation info (if the account requires signature aggregator)      bundler MUST use it to verify the signature, or reject the UserOperation\",\"factoryInfo\":\"stake information about the factory (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"the factory used to deploy this account (in the initCode)\",\"paymaster\":\"the paymaster used by this UserOp\",\"sender\":\"the account that is deployed\",\"userOpHash\":\"the userOp that deployed this account. UserOperationEvent will follow.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"the nonce used in the request\",\"revertReason\":\"- the return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"the sender of this request\",\"userOpHash\":\"the request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"the new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the deposit (for gas payment) of the account\"}},\"getDepositInfo(address)\":{\"returns\":{\"info\":\"- full deposit information of given account\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"the constructor code to be passed into the UserOperation.\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"opsPerAggregator\":\"the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\"}},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"ops\":\"the operations to execute\"}},\"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)\":{\"params\":{\"op\":\"the UserOperation to simulate\",\"target\":\"if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult        are set to the return from that call.\",\"targetCallData\":\"callData to pass to target address\"}},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"details\":\"this method always revert. Successful result is ValidationResult error. other errors are failures.The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\",\"params\":{\"userOp\":\"the user operation to validate.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\",\"withdrawAmount\":\"the amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"ExecutionResult(uint256,uint256,uint48,uint48,bool,bytes)\":[{\"notice\":\"return value of simulateHandleOp\"}],\"FailedOp(uint256,string)\":[{\"notice\":\"a custom revert error of handleOps, to identify the offending op.  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"SenderAddressResult(address)\":[{\"notice\":\"return value of getSenderAddress\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"error case when a signature aggregator fails to verify the aggregated signature it had created.\"}],\"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"notice\":\"Successful result from simulateValidation.\"}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"notice\":\"Successful result from simulateValidation, if the account returns a signature aggregator\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"an event emitted by handleOps(), before starting the execution loop. any event emitted before this event, is part of the validation.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"signature aggregator used by the following UserOperationEvents within this bundle.\"},\"StakeLocked(address,uint256,uint256)\":{\"notice\":\"Emitted when stake or unstake delay are modified\"},\"StakeUnlocked(address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"depositTo(address)\":{\"notice\":\"add to the deposit of the given account\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address.  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. this method always revert, and returns the address in SenderAddressResult error\"},\"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"generate a request Id - unique identifier for this request. the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation. no signature aggregator is used. if any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)\":{\"notice\":\"simulate full execution of a UserOperation (including both validation and target execution) this method will always revert with \\\"ExecutionResult\\\". it performs full validation of the UserOperation, but ignores signature error. an optional target address is called after the userop succeeds, and its value is returned (before the entire call is reverted) Note that in order to collect the the success/failure of the target call, it must be executed with trace enabled to track the emitted events.\"},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\"},\"unlockStake()\":{\"notice\":\"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ExecutionResult(uint256,uint256,uint48,uint48,bool,bytes)": [
								{
									"notice": "return value of simulateHandleOp"
								}
							],
							"FailedOp(uint256,string)": [
								{
									"notice": "a custom revert error of handleOps, to identify the offending op.  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it."
								}
							],
							"SenderAddressResult(address)": [
								{
									"notice": "return value of getSenderAddress"
								}
							],
							"SignatureValidationFailed(address)": [
								{
									"notice": "error case when a signature aggregator fails to verify the aggregated signature it had created."
								}
							],
							"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))": [
								{
									"notice": "Successful result from simulateValidation."
								}
							],
							"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))": [
								{
									"notice": "Successful result from simulateValidation, if the account returns a signature aggregator"
								}
							]
						},
						"events": {
							"AccountDeployed(bytes32,address,address,address)": {
								"notice": "account \"sender\" was deployed."
							},
							"BeforeExecution()": {
								"notice": "an event emitted by handleOps(), before starting the execution loop. any event emitted before this event, is part of the validation."
							},
							"SignatureAggregatorChanged(address)": {
								"notice": "signature aggregator used by the following UserOperationEvents within this bundle."
							},
							"StakeLocked(address,uint256,uint256)": {
								"notice": "Emitted when stake or unstake delay are modified"
							},
							"StakeUnlocked(address,uint256)": {
								"notice": "Emitted once a stake is scheduled for withdrawal"
							},
							"UserOperationRevertReason(bytes32,address,uint256,bytes)": {
								"notice": "An event emitted if the UserOperation \"callData\" reverted with non-zero length"
							}
						},
						"kind": "user",
						"methods": {
							"addStake(uint32)": {
								"notice": "add to the account's stake - amount and delay any pending unstake is first cancelled."
							},
							"depositTo(address)": {
								"notice": "add to the deposit of the given account"
							},
							"getNonce(address,uint192)": {
								"notice": "Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order."
							},
							"getSenderAddress(bytes)": {
								"notice": "Get counterfactual sender address.  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. this method always revert, and returns the address in SenderAddressResult error"
							},
							"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
								"notice": "generate a request Id - unique identifier for this request. the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid."
							},
							"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)": {
								"notice": "Execute a batch of UserOperation with Aggregators"
							},
							"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)": {
								"notice": "Execute a batch of UserOperation. no signature aggregator is used. if any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead."
							},
							"incrementNonce(uint192)": {
								"notice": "Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key."
							},
							"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)": {
								"notice": "simulate full execution of a UserOperation (including both validation and target execution) this method will always revert with \"ExecutionResult\". it performs full validation of the UserOperation, but ignores signature error. an optional target address is called after the userop succeeds, and its value is returned (before the entire call is reverted) Note that in order to collect the the success/failure of the target call, it must be executed with trace enabled to track the emitted events."
							},
							"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
								"notice": "Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp."
							},
							"unlockStake()": {
								"notice": "attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay."
							},
							"withdrawStake(address)": {
								"notice": "withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass"
							},
							"withdrawTo(address,uint256)": {
								"notice": "withdraw from the deposit."
							}
						},
						"version": 1
					}
				}
			},
			"@account-abstraction/contracts/interfaces/INonceManager.sol": {
				"INonceManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint192",
									"name": "key",
									"type": "uint192"
								}
							],
							"name": "getNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint192",
									"name": "key",
									"type": "uint192"
								}
							],
							"name": "incrementNonce",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getNonce(address,uint192)": {
								"params": {
									"key": "the high 192 bit of the nonce",
									"sender": "the account address"
								},
								"returns": {
									"nonce": "a full nonce to pass for next UserOp with this sender."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getNonce(address,uint192)": "35567e1a",
							"incrementNonce(uint192)": "0bd28e3b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/INonceManager.sol\":\"INonceManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getNonce(address,uint192)": {
								"notice": "Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order."
							},
							"incrementNonce(uint192)": {
								"notice": "Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key."
							}
						},
						"version": 1
					}
				}
			},
			"@account-abstraction/contracts/interfaces/IPaymaster.sol": {
				"IPaymaster": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "enum IPaymaster.PostOpMode",
									"name": "mode",
									"type": "uint8"
								},
								{
									"internalType": "bytes",
									"name": "context",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "actualGasCost",
									"type": "uint256"
								}
							],
							"name": "postOp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "callGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "verificationGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPriorityFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct UserOperation",
									"name": "userOp",
									"type": "tuple"
								},
								{
									"internalType": "bytes32",
									"name": "userOpHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "maxCost",
									"type": "uint256"
								}
							],
							"name": "validatePaymasterUserOp",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "context",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "validationData",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"postOp(uint8,bytes,uint256)": {
								"params": {
									"actualGasCost": "- actual gas used so far (without this postOp call).",
									"context": "- the context value returned by validatePaymasterUserOp",
									"mode": "enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted."
								}
							},
							"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
								"params": {
									"maxCost": "the maximum cost of this transaction (based on maximum gas and gas price from userOp)",
									"userOp": "the user operation",
									"userOpHash": "hash of the user's request data."
								},
								"returns": {
									"context": "value to send to a postOp      zero length to signify postOp is not required.",
									"validationData": "signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \"authorizer\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"postOp(uint8,bytes,uint256)": "a9a23409",
							"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "f465c77e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"userOp\":\"the user operation\",\"userOpHash\":\"hash of the user's request data.\"},\"returns\":{\"context\":\"value to send to a postOp      zero length to signify postOp is not required.\",\"validationData\":\"signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"}},\"notice\":\"the interface exposed by a paymaster contract, who agrees to pay the gas for user's operations. a paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":\"IPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x36858ba8685024974f533530420688da3454d29996ebc42e410673a1ed2ec456\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://616cbcf51778b1961b7f20a547bec7efae6d1d565df0f651926241ed8bde9ad8\",\"dweb:/ipfs/QmaVsgffUUmeUJYgStvRr8cNZ1LBbrc3FYNLW4JT1dVLia\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"postOp(uint8,bytes,uint256)": {
								"notice": "post-operation handler. Must verify sender is the entryPoint"
							},
							"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
								"notice": "payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."
							}
						},
						"notice": "the interface exposed by a paymaster contract, who agrees to pay the gas for user's operations. a paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.",
						"version": 1
					}
				}
			},
			"@account-abstraction/contracts/interfaces/IStakeManager.sol": {
				"IStakeManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDeposit",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalStaked",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unstakeDelaySec",
									"type": "uint256"
								}
							],
							"name": "StakeLocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "withdrawTime",
									"type": "uint256"
								}
							],
							"name": "StakeUnlocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "withdrawAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StakeWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "withdrawAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_unstakeDelaySec",
									"type": "uint32"
								}
							],
							"name": "addStake",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "depositTo",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getDepositInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint112",
											"name": "deposit",
											"type": "uint112"
										},
										{
											"internalType": "bool",
											"name": "staked",
											"type": "bool"
										},
										{
											"internalType": "uint112",
											"name": "stake",
											"type": "uint112"
										},
										{
											"internalType": "uint32",
											"name": "unstakeDelaySec",
											"type": "uint32"
										},
										{
											"internalType": "uint48",
											"name": "withdrawTime",
											"type": "uint48"
										}
									],
									"internalType": "struct IStakeManager.DepositInfo",
									"name": "info",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlockStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "withdrawAddress",
									"type": "address"
								}
							],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "withdrawAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "withdrawAmount",
									"type": "uint256"
								}
							],
							"name": "withdrawTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addStake(uint32)": {
								"params": {
									"_unstakeDelaySec": "the new lock duration before the deposit can be withdrawn."
								}
							},
							"balanceOf(address)": {
								"returns": {
									"_0": "the deposit (for gas payment) of the account"
								}
							},
							"getDepositInfo(address)": {
								"returns": {
									"info": "- full deposit information of given account"
								}
							},
							"withdrawStake(address)": {
								"params": {
									"withdrawAddress": "the address to send withdrawn value."
								}
							},
							"withdrawTo(address,uint256)": {
								"params": {
									"withdrawAddress": "the address to send withdrawn value.",
									"withdrawAmount": "the amount to withdraw."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addStake(uint32)": "0396cb60",
							"balanceOf(address)": "70a08231",
							"depositTo(address)": "b760faf9",
							"getDepositInfo(address)": "5287ce12",
							"unlockStake()": "bb9fe6bf",
							"withdrawStake(address)": "c23a5cea",
							"withdrawTo(address,uint256)": "205c2878"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"the new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the deposit (for gas payment) of the account\"}},\"getDepositInfo(address)\":{\"returns\":{\"info\":\"- full deposit information of given account\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\",\"withdrawAmount\":\"the amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"StakeLocked(address,uint256,uint256)\":{\"notice\":\"Emitted when stake or unstake delay are modified\"},\"StakeUnlocked(address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"depositTo(address)\":{\"notice\":\"add to the deposit of the given account\"},\"unlockStake()\":{\"notice\":\"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw from the deposit.\"}},\"notice\":\"manage deposits and stakes. deposit is just a balance used to pay for UserOperations (either by a paymaster or an account) stake is value locked for at least \\\"unstakeDelay\\\" by the staked entity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"StakeLocked(address,uint256,uint256)": {
								"notice": "Emitted when stake or unstake delay are modified"
							},
							"StakeUnlocked(address,uint256)": {
								"notice": "Emitted once a stake is scheduled for withdrawal"
							}
						},
						"kind": "user",
						"methods": {
							"addStake(uint32)": {
								"notice": "add to the account's stake - amount and delay any pending unstake is first cancelled."
							},
							"depositTo(address)": {
								"notice": "add to the deposit of the given account"
							},
							"unlockStake()": {
								"notice": "attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay."
							},
							"withdrawStake(address)": {
								"notice": "withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass"
							},
							"withdrawTo(address,uint256)": {
								"notice": "withdraw from the deposit."
							}
						},
						"notice": "manage deposits and stakes. deposit is just a balance used to pay for UserOperations (either by a paymaster or an account) stake is value locked for at least \"unstakeDelay\" by the staked entity.",
						"version": 1
					}
				}
			},
			"@account-abstraction/contracts/interfaces/UserOperation.sol": {
				"UserOperationLib": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@account-abstraction/contracts/interfaces/UserOperation.sol\":1630:3745  library UserOperationLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@account-abstraction/contracts/interfaces/UserOperation.sol\":1630:3745  library UserOperationLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e20a0089da9137685375693592365863a51ae05cce296640bc58f213029af02764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e20a0089da9137685375693592365863a51ae05cce296640bc58f213029af02764736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 EXP STOP DUP10 0xDA SWAP2 CALLDATACOPY PUSH9 0x5375693592365863A5 BYTE 0xE0 0x5C 0xCE 0x29 PUSH7 0x40BC58F213029A CREATE 0x27 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "1630:2115:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e20a0089da9137685375693592365863a51ae05cce296640bc58f213029af02764736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 EXP STOP DUP10 0xDA SWAP2 CALLDATACOPY PUSH9 0x5375693592365863A5 BYTE 0xE0 0x5C 0xCE 0x29 PUSH7 0x40BC58F213029A CREATE 0x27 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "1630:2115:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"gasPrice(struct UserOperation calldata)": "infinite",
								"getSender(struct UserOperation calldata)": "infinite",
								"hash(struct UserOperation calldata)": "infinite",
								"min(uint256,uint256)": "infinite",
								"pack(struct UserOperation calldata)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1630,
									"end": 3745,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1630,
									"end": 3745,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e20a0089da9137685375693592365863a51ae05cce296640bc58f213029af02764736f6c63430008120033",
									".code": [
										{
											"begin": 1630,
											"end": 3745,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 3745,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 3745,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 3745,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1630,
											"end": 3745,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 3745,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 3745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 3745,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 3745,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@account-abstraction/contracts/core/BasePaymaster.sol",
								"@account-abstraction/contracts/core/Helpers.sol",
								"@account-abstraction/contracts/interfaces/IAggregator.sol",
								"@account-abstraction/contracts/interfaces/IEntryPoint.sol",
								"@account-abstraction/contracts/interfaces/INonceManager.sol",
								"@account-abstraction/contracts/interfaces/IPaymaster.sol",
								"@account-abstraction/contracts/interfaces/IStakeManager.sol",
								"@account-abstraction/contracts/interfaces/UserOperation.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/paymaster/KaijuVerifyingPaymaster.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when working with UserOperation structs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/UserOperation.sol\":\"UserOperationLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Utility functions helpful when working with UserOperation structs.",
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1059,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH11 0x269A65F5803DA06B288908 0xB4 CREATE MOD 0x29 0xE3 DUP4 SWAP8 0xF6 0xD2 SWAP6 0xEC SELFBALANCE SAR DUP5 0x27 SWAP12 0xE2 0xE1 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "220:2559:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH11 0x269A65F5803DA06B288908 0xB4 CREATE MOD 0x29 0xE3 DUP4 SWAP8 0xF6 0xD2 SWAP6 0xEC SELFBALANCE SAR DUP5 0x27 SWAP12 0xE2 0xE1 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "220:2559:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@account-abstraction/contracts/core/BasePaymaster.sol",
								"@account-abstraction/contracts/core/Helpers.sol",
								"@account-abstraction/contracts/interfaces/IAggregator.sol",
								"@account-abstraction/contracts/interfaces/IEntryPoint.sol",
								"@account-abstraction/contracts/interfaces/INonceManager.sol",
								"@account-abstraction/contracts/interfaces/IPaymaster.sol",
								"@account-abstraction/contracts/interfaces/IStakeManager.sol",
								"@account-abstraction/contracts/interfaces/UserOperation.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/paymaster/KaijuVerifyingPaymaster.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":369:9130  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":369:9130  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122044719535d4f0927b344373336cd15f417c0acbe2b5844ef02267a9d7179c605364736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044719535d4f0927b344373336cd15f417c0acbe2b5844ef02267a9d7179c605364736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO PUSH18 0x9535D4F0927B344373336CD15F417C0ACBE2 0xB5 DUP5 0x4E CREATE 0x22 PUSH8 0xA9D7179C60536473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "369:8761:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044719535d4f0927b344373336cd15f417c0acbe2b5844ef02267a9d7179c605364736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO PUSH18 0x9535D4F0927B344373336CD15F417C0ACBE2 0xB5 DUP5 0x4E CREATE 0x22 PUSH8 0xA9D7179C60536473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "369:8761:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122044719535d4f0927b344373336cd15f417c0acbe2b5844ef02267a9d7179c605364736f6c63430008120033",
									".code": [
										{
											"begin": 369,
											"end": 9130,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@account-abstraction/contracts/core/BasePaymaster.sol",
								"@account-abstraction/contracts/core/Helpers.sol",
								"@account-abstraction/contracts/interfaces/IAggregator.sol",
								"@account-abstraction/contracts/interfaces/IEntryPoint.sol",
								"@account-abstraction/contracts/interfaces/INonceManager.sol",
								"@account-abstraction/contracts/interfaces/IPaymaster.sol",
								"@account-abstraction/contracts/interfaces/IStakeManager.sol",
								"@account-abstraction/contracts/interfaces/UserOperation.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/paymaster/KaijuVerifyingPaymaster.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 POP SWAP4 0x4A 0xB0 0xC9 0x1E 0xE4 0xF9 0xE0 0x4D DUP7 0x23 SWAP1 0xC6 MSTORE8 SHR SWAP2 MSTORE 0x4D 0xC4 0xCE 0xBD DUP16 DELEGATECALL 0xDF 0x5E 0x5C 0x5F PUSH25 0xCF9A64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "202:12582:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 POP SWAP4 0x4A 0xB0 0xC9 0x1E 0xE4 0xF9 0xE0 0x4D DUP7 0x23 SWAP1 0xC6 MSTORE8 SHR SWAP2 MSTORE 0x4D 0xC4 0xCE 0xBD DUP16 DELEGATECALL 0xDF 0x5E 0x5C 0x5F PUSH25 0xCF9A64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "202:12582:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@account-abstraction/contracts/core/BasePaymaster.sol",
								"@account-abstraction/contracts/core/Helpers.sol",
								"@account-abstraction/contracts/interfaces/IAggregator.sol",
								"@account-abstraction/contracts/interfaces/IEntryPoint.sol",
								"@account-abstraction/contracts/interfaces/INonceManager.sol",
								"@account-abstraction/contracts/interfaces/IPaymaster.sol",
								"@account-abstraction/contracts/interfaces/IStakeManager.sol",
								"@account-abstraction/contracts/interfaces/UserOperation.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/paymaster/KaijuVerifyingPaymaster.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x21 0xEC CALL 0xDB 0xEA 0x5E SWAP12 0xC0 SGT 0x27 PREVRANDAO 0xE6 SUB SHL 0xB9 EXTCODESIZE DUP9 DUP1 NOT DIV 0xAB SWAP9 AND 0x1F 0x4E ADD 0x2E MLOAD LT PUSH23 0x3064736F6C634300081200330000000000000000000000 ",
							"sourceMap": "215:1047:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x21 0xEC CALL 0xDB 0xEA 0x5E SWAP12 0xC0 SGT 0x27 PREVRANDAO 0xE6 SUB SHL 0xB9 EXTCODESIZE DUP9 DUP1 NOT DIV 0xAB SWAP9 AND 0x1F 0x4E ADD 0x2E MLOAD LT PUSH23 0x3064736F6C634300081200330000000000000000000000 ",
							"sourceMap": "215:1047:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@account-abstraction/contracts/core/BasePaymaster.sol",
								"@account-abstraction/contracts/core/Helpers.sol",
								"@account-abstraction/contracts/interfaces/IAggregator.sol",
								"@account-abstraction/contracts/interfaces/IEntryPoint.sol",
								"@account-abstraction/contracts/interfaces/INonceManager.sol",
								"@account-abstraction/contracts/interfaces/IPaymaster.sol",
								"@account-abstraction/contracts/interfaces/IStakeManager.sol",
								"@account-abstraction/contracts/interfaces/UserOperation.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/paymaster/KaijuVerifyingPaymaster.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/paymaster/KaijuVerifyingPaymaster.sol": {
				"KaijuVerifyingPaymaster": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IEntryPoint",
									"name": "_entryPoint",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_verifyingSigner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "unstakeDelaySec",
									"type": "uint32"
								}
							],
							"name": "addStake",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "entryPoint",
							"outputs": [
								{
									"internalType": "contract IEntryPoint",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "callGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "verificationGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPriorityFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct UserOperation",
									"name": "userOp",
									"type": "tuple"
								},
								{
									"internalType": "uint48",
									"name": "validUntil",
									"type": "uint48"
								},
								{
									"internalType": "uint48",
									"name": "validAfter",
									"type": "uint48"
								}
							],
							"name": "getHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "paymasterAndData",
									"type": "bytes"
								}
							],
							"name": "parsePaymasterAndData",
							"outputs": [
								{
									"internalType": "uint48",
									"name": "validUntil",
									"type": "uint48"
								},
								{
									"internalType": "uint48",
									"name": "validAfter",
									"type": "uint48"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum IPaymaster.PostOpMode",
									"name": "mode",
									"type": "uint8"
								},
								{
									"internalType": "bytes",
									"name": "context",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "actualGasCost",
									"type": "uint256"
								}
							],
							"name": "postOp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "senderNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlockStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "callGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "verificationGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPriorityFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct UserOperation",
									"name": "userOp",
									"type": "tuple"
								},
								{
									"internalType": "bytes32",
									"name": "userOpHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "maxCost",
									"type": "uint256"
								}
							],
							"name": "validatePaymasterUserOp",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "context",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "validationData",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "verifyingSigner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "withdrawAddress",
									"type": "address"
								}
							],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "withdrawAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addStake(uint32)": {
								"params": {
									"unstakeDelaySec": "- the unstake delay for this paymaster. Can only be increased."
								}
							},
							"getHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint48,uint48)": {
								"details": "The hash we're going to sign off-chain (and validate on-chain). Method is called by       Off-chain Service - to sign the request.      On-chain Service - from the validatePaymasterUserOp, to validate the signature.",
								"params": {
									"userOp": "| User Operation",
									"validAfter": "| Validate Period  Note:    that this signature covers all fields of the UserOperation, except the \"paymasterAndData\",          which will carry the signature itself.",
									"validUntil": "| Validate Period"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"parsePaymasterAndData(bytes)": {
								"details": "parse paymaster and data",
								"params": {
									"paymasterAndData": "| paymaster and data"
								}
							},
							"postOp(uint8,bytes,uint256)": {
								"params": {
									"actualGasCost": "- actual gas used so far (without this postOp call).",
									"context": "- the context value returned by validatePaymasterUserOp",
									"mode": "enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
								"params": {
									"maxCost": "the maximum cost of this transaction (based on maximum gas and gas price from userOp)",
									"userOp": "the user operation",
									"userOpHash": "hash of the user's request data."
								},
								"returns": {
									"context": "value to send to a postOp      zero length to signify postOp is not required.",
									"validationData": "signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \"authorizer\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly."
								}
							},
							"withdrawStake(address)": {
								"params": {
									"withdrawAddress": "the address to send withdrawn value."
								}
							},
							"withdrawTo(address,uint256)": {
								"params": {
									"amount": "to withdraw",
									"withdrawAddress": "target to send to"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":751:4950  contract KaijuVerifyingPaymaster is BasePaymaster {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1043:1184  constructor(IEntryPoint _entryPoint, address _verifyingSigner) BasePaymaster(_entryPoint) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1120:1131  _entryPoint */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":577:588  _entryPoint */\n  dup1\n    /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":564:588  entryPoint = _entryPoint */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":517:595  constructor(IEntryPoint _entryPoint) {... */\n  pop\n    /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1161:1177  _verifyingSigner */\n  dup1\n    /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1143:1177  verifyingSigner = _verifyingSigner */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1043:1184  constructor(IEntryPoint _entryPoint, address _verifyingSigner) BasePaymaster(_entryPoint) {... */\n  pop\n  pop\n    /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":751:4950  contract KaijuVerifyingPaymaster is BasePaymaster {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_21:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_33\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_20\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:683   */\ntag_22:\n    /* \"#utility.yul\":624:631   */\n  0x00\n    /* \"#utility.yul\":653:677   */\n  tag_35\n    /* \"#utility.yul\":671:676   */\n  dup3\n    /* \"#utility.yul\":653:677   */\n  tag_21\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":642:677   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:683   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":689:849   */\ntag_23:\n    /* \"#utility.yul\":781:824   */\n  tag_37\n    /* \"#utility.yul\":818:823   */\n  dup2\n    /* \"#utility.yul\":781:824   */\n  tag_22\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":774:779   */\n  dup2\n    /* \"#utility.yul\":771:825   */\n  eq\n    /* \"#utility.yul\":761:843   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":839:840   */\n  0x00\n    /* \"#utility.yul\":836:837   */\n  dup1\n    /* \"#utility.yul\":829:841   */\n  revert\n    /* \"#utility.yul\":761:843   */\ntag_38:\n    /* \"#utility.yul\":689:849   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":855:1036   */\ntag_24:\n    /* \"#utility.yul\":931:936   */\n  0x00\n    /* \"#utility.yul\":962:968   */\n  dup2\n    /* \"#utility.yul\":956:969   */\n  mload\n    /* \"#utility.yul\":947:969   */\n  swap1\n  pop\n    /* \"#utility.yul\":978:1030   */\n  tag_40\n    /* \"#utility.yul\":1024:1029   */\n  dup2\n    /* \"#utility.yul\":978:1030   */\n  tag_23\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":855:1036   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1042:1164   */\ntag_25:\n    /* \"#utility.yul\":1115:1139   */\n  tag_42\n    /* \"#utility.yul\":1133:1138   */\n  dup2\n    /* \"#utility.yul\":1115:1139   */\n  tag_21\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1108:1113   */\n  dup2\n    /* \"#utility.yul\":1105:1140   */\n  eq\n    /* \"#utility.yul\":1095:1158   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1154:1155   */\n  0x00\n    /* \"#utility.yul\":1151:1152   */\n  dup1\n    /* \"#utility.yul\":1144:1156   */\n  revert\n    /* \"#utility.yul\":1095:1158   */\ntag_43:\n    /* \"#utility.yul\":1042:1164   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1170:1313   */\ntag_26:\n    /* \"#utility.yul\":1227:1232   */\n  0x00\n    /* \"#utility.yul\":1258:1264   */\n  dup2\n    /* \"#utility.yul\":1252:1265   */\n  mload\n    /* \"#utility.yul\":1243:1265   */\n  swap1\n  pop\n    /* \"#utility.yul\":1274:1307   */\n  tag_45\n    /* \"#utility.yul\":1301:1306   */\n  dup2\n    /* \"#utility.yul\":1274:1307   */\n  tag_25\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1170:1313   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1319:1864   */\ntag_3:\n    /* \"#utility.yul\":1417:1423   */\n  0x00\n    /* \"#utility.yul\":1425:1431   */\n  dup1\n    /* \"#utility.yul\":1474:1476   */\n  0x40\n    /* \"#utility.yul\":1462:1471   */\n  dup4\n    /* \"#utility.yul\":1453:1460   */\n  dup6\n    /* \"#utility.yul\":1449:1472   */\n  sub\n    /* \"#utility.yul\":1445:1477   */\n  slt\n    /* \"#utility.yul\":1442:1561   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1480:1559   */\n  tag_48\n  tag_18\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1442:1561   */\ntag_47:\n    /* \"#utility.yul\":1600:1601   */\n  0x00\n    /* \"#utility.yul\":1625:1708   */\n  tag_49\n    /* \"#utility.yul\":1700:1707   */\n  dup6\n    /* \"#utility.yul\":1691:1697   */\n  dup3\n    /* \"#utility.yul\":1680:1689   */\n  dup7\n    /* \"#utility.yul\":1676:1698   */\n  add\n    /* \"#utility.yul\":1625:1708   */\n  tag_24\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1615:1708   */\n  swap3\n  pop\n    /* \"#utility.yul\":1571:1718   */\n  pop\n    /* \"#utility.yul\":1757:1759   */\n  0x20\n    /* \"#utility.yul\":1783:1847   */\n  tag_50\n    /* \"#utility.yul\":1839:1846   */\n  dup6\n    /* \"#utility.yul\":1830:1836   */\n  dup3\n    /* \"#utility.yul\":1819:1828   */\n  dup7\n    /* \"#utility.yul\":1815:1837   */\n  add\n    /* \"#utility.yul\":1783:1847   */\n  tag_26\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1773:1847   */\n  swap2\n  pop\n    /* \"#utility.yul\":1728:1857   */\n  pop\n    /* \"#utility.yul\":1319:1864   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":751:4950  contract KaijuVerifyingPaymaster is BasePaymaster {... */\ntag_14:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x71c40068bd31bc09d5993cdc61ccff6d93335f0bfd330185a818ca14adae8b8a\")\n  0x00\n  assignImmutable(\"0x789bcdf275fa270780a52ae3b79bb1ce0fda7e0aaad87b57b74bb99ac290714a\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":751:4950  contract KaijuVerifyingPaymaster is BasePaymaster {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa9a23409\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xc399ec88\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xc399ec88\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf465c77e\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0xa9a23409\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb0d691fe\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xbb9fe6bf\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xc23a5cea\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x94d4ad60\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x94e1fc19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x9c90b443\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x0396cb60\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x205c2878\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x23d9ac9b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3094:3235  function addStake(uint32 unstakeDelaySec) external payable onlyOwner {... */\n    tag_2:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":2721:2870  function withdrawTo(address payable withdrawAddress, uint256 amount) public onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":884:924  address public immutable verifyingSigner */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4613:4948  function parsePaymasterAndData(bytes calldata paymasterAndData) public pure returns(uint48 validUntil, uint48 validAfter, bytes calldata signature) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":2498:2875  function getHash(UserOperation calldata userOp, uint48 validUntil, uint48 validAfter)... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1190:1236  mapping(address => uint256) public senderNonce */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":1143:1329  function postOp(PostOpMode mode, bytes calldata context, uint256 actualGasCost) external override {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":471:510  IEntryPoint immutable public entryPoint */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3588:3671  function unlockStake() external onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      stop\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3890:4023  function withdrawStake(address payable withdrawAddress) external onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      stop\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3318:3429  function getDeposit() public view returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":2474:2579  function deposit() public payable {... */\n    tag_15:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":632:922  function validatePaymasterUserOp(UserOperation calldata userOp, bytes32 userOpHash, uint256 maxCost)... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_96\n      swap3\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3094:3235  function addStake(uint32 unstakeDelaySec) external payable onlyOwner {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_99:\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3173:3183  entryPoint */\n      immutable(\"0x789bcdf275fa270780a52ae3b79bb1ce0fda7e0aaad87b57b74bb99ac290714a\")\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3173:3192  entryPoint.addStake */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0396cb60\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3201:3210  msg.value */\n      callvalue\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3212:3227  unstakeDelaySec */\n      dup4\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3173:3228  entryPoint.addStake{value : msg.value}(unstakeDelaySec) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3094:3235  function addStake(uint32 unstakeDelaySec) external payable onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":2721:2870  function withdrawTo(address payable withdrawAddress, uint256 amount) public onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_108:\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":2817:2827  entryPoint */\n      immutable(\"0x789bcdf275fa270780a52ae3b79bb1ce0fda7e0aaad87b57b74bb99ac290714a\")\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":2817:2838  entryPoint.withdrawTo */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x205c2878\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":2839:2854  withdrawAddress */\n      dup4\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":2856:2862  amount */\n      dup4\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":2817:2863  entryPoint.withdrawTo(withdrawAddress, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap3\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":2721:2870  function withdrawTo(address payable withdrawAddress, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":884:924  address public immutable verifyingSigner */\n    tag_32:\n      immutable(\"0x71c40068bd31bc09d5993cdc61ccff6d93335f0bfd330185a818ca14adae8b8a\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4613:4948  function parsePaymasterAndData(bytes calldata paymasterAndData) public pure returns(uint48 validUntil, uint48 validAfter, bytes calldata signature) {... */\n    tag_46:\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4697:4714  uint48 validUntil */\n      0x00\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4716:4733  uint48 validAfter */\n      dup1\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4735:4759  bytes calldata signature */\n      calldatasize\n      0x00\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4809:4825  paymasterAndData */\n      dup6\n      dup6\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":981:983  20 */\n      0x14\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4809:4866  paymasterAndData[VALID_TIMESTAMP_OFFSET:SIGNATURE_OFFSET] */\n      swap1\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1034:1036  84 */\n      0x54\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4809:4866  paymasterAndData[VALID_TIMESTAMP_OFFSET:SIGNATURE_OFFSET] */\n      swap3\n      tag_122\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4798:4884  abi.decode(paymasterAndData[VALID_TIMESTAMP_OFFSET:SIGNATURE_OFFSET],(uint48, uint48)) */\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4771:4884  (validUntil, validAfter) = abi.decode(paymasterAndData[VALID_TIMESTAMP_OFFSET:SIGNATURE_OFFSET],(uint48, uint48)) */\n      dup1\n      swap5\n      pop\n      dup2\n      swap6\n      pop\n      pop\n      pop\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4906:4922  paymasterAndData */\n      dup6\n      dup6\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1034:1036  84 */\n      0x54\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4906:4941  paymasterAndData[SIGNATURE_OFFSET:] */\n      swap1\n      dup1\n      swap3\n      tag_126\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_126:\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4894:4941  signature = paymasterAndData[SIGNATURE_OFFSET:] */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4613:4948  function parsePaymasterAndData(bytes calldata paymasterAndData) public pure returns(uint48 validUntil, uint48 validAfter, bytes calldata signature) {... */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":2498:2875  function getHash(UserOperation calldata userOp, uint48 validUntil, uint48 validAfter)... */\n    tag_53:\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":2609:2616  bytes32 */\n      0x00\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":2674:2686  pack(userOp) */\n      tag_128\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":2679:2685  userOp */\n      dup5\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":2674:2678  pack */\n      tag_129\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":2674:2686  pack(userOp) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":2704:2717  block.chainid */\n      chainid\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":2743:2747  this */\n      address\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":2766:2777  senderNonce */\n      0x01\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":2766:2797  senderNonce[userOp.getSender()] */\n      0x00\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":2778:2796  userOp.getSender() */\n      tag_130\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":2778:2784  userOp */\n      dup10\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":2778:2794  userOp.getSender */\n      tag_131\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":2778:2796  userOp.getSender() */\n      jump\t// in\n    tag_130:\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":2766:2797  senderNonce[userOp.getSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":2815:2825  validUntil */\n      dup7\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":2843:2853  validAfter */\n      dup7\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":2646:2867  abi.encode(... */\n      add(0x20, mload(0x40))\n      tag_132\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":2636:2868  keccak256(abi.encode(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":2629:2868  return keccak256(abi.encode(... */\n      swap1\n      pop\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":2498:2875  function getHash(UserOperation calldata userOp, uint48 validUntil, uint48 validAfter)... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1190:1236  mapping(address => uint256) public senderNonce */\n    tag_60:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":1143:1329  function postOp(PostOpMode mode, bytes calldata context, uint256 actualGasCost) external override {... */\n    tag_67:\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":1251:1275  _requireFromEntryPoint() */\n      tag_135\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":1251:1273  _requireFromEntryPoint */\n      tag_136\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":1251:1275  _requireFromEntryPoint() */\n      jump\t// in\n    tag_135:\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":1285:1322  _postOp(mode, context, actualGasCost) */\n      tag_137\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":1293:1297  mode */\n      dup5\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":1299:1306  context */\n      dup5\n      dup5\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":1308:1321  actualGasCost */\n      dup5\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":1285:1292  _postOp */\n      tag_138\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":1285:1322  _postOp(mode, context, actualGasCost) */\n      jump\t// in\n    tag_137:\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":1143:1329  function postOp(PostOpMode mode, bytes calldata context, uint256 actualGasCost) external override {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":471:510  IEntryPoint immutable public entryPoint */\n    tag_70:\n      immutable(\"0x789bcdf275fa270780a52ae3b79bb1ce0fda7e0aaad87b57b74bb99ac290714a\")\n      dup2\n      jump\t// out\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3588:3671  function unlockStake() external onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_140:\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3640:3650  entryPoint */\n      immutable(\"0x789bcdf275fa270780a52ae3b79bb1ce0fda7e0aaad87b57b74bb99ac290714a\")\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3640:3662  entryPoint.unlockStake */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbb9fe6bf\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3640:3664  entryPoint.unlockStake() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3588:3671  function unlockStake() external onlyOwner {... */\n      jump\t// out\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3890:4023  function withdrawStake(address payable withdrawAddress) external onlyOwner {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_146:\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3975:3985  entryPoint */\n      immutable(\"0x789bcdf275fa270780a52ae3b79bb1ce0fda7e0aaad87b57b74bb99ac290714a\")\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3975:3999  entryPoint.withdrawStake */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc23a5cea\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":4000:4015  withdrawAddress */\n      dup3\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3975:4016  entryPoint.withdrawStake(withdrawAddress) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_152\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_152:\n      pop\n      pop\n      pop\n      pop\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3890:4023  function withdrawStake(address payable withdrawAddress) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3318:3429  function getDeposit() public view returns (uint256) {... */\n    tag_83:\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3361:3368  uint256 */\n      0x00\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3387:3397  entryPoint */\n      immutable(\"0x789bcdf275fa270780a52ae3b79bb1ce0fda7e0aaad87b57b74bb99ac290714a\")\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3387:3407  entryPoint.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3416:3420  this */\n      address\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3387:3422  entryPoint.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_154:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_156:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3380:3422  return entryPoint.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":3318:3429  function getDeposit() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":2474:2579  function deposit() public payable {... */\n    tag_86:\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":2518:2528  entryPoint */\n      immutable(\"0x789bcdf275fa270780a52ae3b79bb1ce0fda7e0aaad87b57b74bb99ac290714a\")\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":2518:2538  entryPoint.depositTo */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb760faf9\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":2547:2556  msg.value */\n      callvalue\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":2566:2570  this */\n      address\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":2518:2572  entryPoint.depositTo{value : msg.value}(address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_160:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_163\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":2474:2579  function deposit() public payable {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2182:2183  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2170  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":632:922  function validatePaymasterUserOp(UserOperation calldata userOp, bytes32 userOpHash, uint256 maxCost)... */\n    tag_95:\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":764:784  bytes memory context */\n      0x60\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":786:808  uint256 validationData */\n      0x00\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":821:845  _requireFromEntryPoint() */\n      tag_172\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":821:843  _requireFromEntryPoint */\n      tag_136\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":821:845  _requireFromEntryPoint() */\n      jump\t// in\n    tag_172:\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":862:915  _validatePaymasterUserOp(userOp, userOpHash, maxCost) */\n      tag_173\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":887:893  userOp */\n      dup6\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":895:905  userOpHash */\n      dup6\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":907:914  maxCost */\n      dup6\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":862:886  _validatePaymasterUserOp */\n      tag_174\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":862:915  _validatePaymasterUserOp(userOp, userOpHash, maxCost) */\n      jump\t// in\n    tag_173:\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":855:915  return _validatePaymasterUserOp(userOp, userOpHash, maxCost) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":632:922  function validatePaymasterUserOp(UserOperation calldata userOp, bytes32 userOpHash, uint256 maxCost)... */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1520:1939  function pack(UserOperation calldata userOp) internal pure returns (bytes memory ret) {... */\n    tag_129:\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1588:1604  bytes memory ret */\n      0x60\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1617:1635  bytes calldata pnd */\n      calldatasize\n      0x00\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1638:1644  userOp */\n      dup4\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1638:1661  userOp.paymasterAndData */\n      dup1\n      0x0120\n      add\n      swap1\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1617:1661  bytes calldata pnd = userOp.paymasterAndData */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1706:1712  userOp */\n      dup4\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1762:1764  32 */\n      0x20\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1756:1759  ofs */\n      dup2\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1744:1754  pnd.offset */\n      dup5\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1740:1760  sub(pnd.offset, ofs) */\n      sub\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1736:1765  sub(sub(pnd.offset, ofs), 32) */\n      sub\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1791:1795  0x40 */\n      0x40\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1785:1796  mload(0x40) */\n      mload\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1778:1796  ret := mload(0x40) */\n      swap5\n      pop\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1840:1842  32 */\n      0x20\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1835:1838  len */\n      dup2\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1831:1843  add(len, 32) */\n      add\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1826:1829  ret */\n      dup6\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1822:1844  add(ret, add(len, 32)) */\n      add\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1816:1820  0x40 */\n      0x40\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1809:1845  mstore(0x40, add(ret, add(len, 32))) */\n      mstore\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1870:1873  len */\n      dup1\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1865:1868  ret */\n      dup6\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1858:1874  mstore(ret, len) */\n      mstore\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1919:1922  len */\n      dup1\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1914:1917  ofs */\n      dup3\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1909:1911  32 */\n      0x20\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1904:1907  ret */\n      dup8\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1900:1912  add(ret, 32) */\n      add\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1887:1923  calldatacopy(add(ret, 32), ofs, len) */\n      calldatacopy\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1681:1933  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":1520:1939  function pack(UserOperation calldata userOp) internal pure returns (bytes memory ret) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@account-abstraction/contracts/interfaces/UserOperation.sol\":1662:1943  function getSender(UserOperation calldata userOp) internal pure returns (address) {... */\n    tag_131:\n        /* \"@account-abstraction/contracts/interfaces/UserOperation.sol\":1735:1742  address */\n      0x00\n        /* \"@account-abstraction/contracts/interfaces/UserOperation.sol\":1754:1766  address data */\n      dup1\n        /* \"@account-abstraction/contracts/interfaces/UserOperation.sol\":1890:1896  userOp */\n      dup3\n        /* \"@account-abstraction/contracts/interfaces/UserOperation.sol\":1877:1897  calldataload(userOp) */\n      calldataload\n        /* \"@account-abstraction/contracts/interfaces/UserOperation.sol\":1869:1897  data := calldataload(userOp) */\n      swap1\n      pop\n        /* \"@account-abstraction/contracts/interfaces/UserOperation.sol\":1930:1934  data */\n      dup1\n        /* \"@account-abstraction/contracts/interfaces/UserOperation.sol\":1907:1936  return address(uint160(data)) */\n      swap2\n      pop\n      pop\n        /* \"@account-abstraction/contracts/interfaces/UserOperation.sol\":1662:1943  function getSender(UserOperation calldata userOp) internal pure returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":4087:4222  function _requireFromEntryPoint() internal virtual {... */\n    tag_136:\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":4178:4188  entryPoint */\n      immutable(\"0x789bcdf275fa270780a52ae3b79bb1ce0fda7e0aaad87b57b74bb99ac290714a\")\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":4156:4189  msg.sender == address(entryPoint) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":4156:4166  msg.sender */\n      caller\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":4156:4189  msg.sender == address(entryPoint) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":4148:4215  require(msg.sender == address(entryPoint), \"Sender not EntryPoint\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":4087:4222  function _requireFromEntryPoint() internal virtual {... */\n      jump\t// out\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":2089:2374  function _postOp(PostOpMode mode, bytes calldata context, uint256 actualGasCost) internal virtual {... */\n    tag_138:\n        /* \"@account-abstraction/contracts/core/BasePaymaster.sol\":2344:2367  revert(\"must override\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":3660:4501  function _validatePaymasterUserOp(UserOperation calldata userOp, bytes32 /*userOpHash*/, uint256 requiredPreFund)... */\n    tag_174:\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":3805:3825  bytes memory context */\n      0x60\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":3827:3849  uint256 validationData */\n      0x00\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":3890:3907  uint48 validUntil */\n      dup1\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":3909:3926  uint48 validAfter */\n      dup1\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":3928:3952  bytes calldata signature */\n      calldatasize\n      0x00\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":3956:4002  parsePaymasterAndData(userOp.paymasterAndData) */\n      tag_195\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":3978:3984  userOp */\n      dup10\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":3978:4001  userOp.paymasterAndData */\n      dup1\n      0x0120\n      add\n      swap1\n      tag_196\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_196:\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":3956:3977  parsePaymasterAndData */\n      tag_46\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":3956:4002  parsePaymasterAndData(userOp.paymasterAndData) */\n      jump\t// in\n    tag_195:\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":3889:4002  (uint48 validUntil, uint48 validAfter, bytes calldata signature) = parsePaymasterAndData(userOp.paymasterAndData) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4041:4043  64 */\n      0x40\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4021:4030  signature */\n      dup3\n      dup3\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4021:4037  signature.length */\n      swap1\n      pop\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4021:4043  signature.length == 64 */\n      eq\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4021:4069  signature.length == 64 || signature.length == 65 */\n      dup1\n      tag_197\n      jumpi\n      pop\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4067:4069  65 */\n      0x41\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4047:4056  signature */\n      dup3\n      dup3\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4047:4063  signature.length */\n      swap1\n      pop\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4047:4069  signature.length == 65 */\n      eq\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4021:4069  signature.length == 64 || signature.length == 65 */\n    tag_197:\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4013:4138  require(signature.length == 64 || signature.length == 65, \"VerifyingPaymaster: invalid signature length in paymasterAndData\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4148:4160  bytes32 hash */\n      0x00\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4163:4232  ECDSA.toEthSignedMessageHash(getHash(userOp, validUntil, validAfter)) */\n      tag_201\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4192:4231  getHash(userOp, validUntil, validAfter) */\n      tag_202\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4200:4206  userOp */\n      dup12\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4208:4218  validUntil */\n      dup8\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4220:4230  validAfter */\n      dup8\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4192:4199  getHash */\n      tag_53\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4192:4231  getHash(userOp, validUntil, validAfter) */\n      jump\t// in\n    tag_202:\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4163:4191  ECDSA.toEthSignedMessageHash */\n      tag_203\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4163:4232  ECDSA.toEthSignedMessageHash(getHash(userOp, validUntil, validAfter)) */\n      jump\t// in\n    tag_201:\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4148:4232  bytes32 hash = ECDSA.toEthSignedMessageHash(getHash(userOp, validUntil, validAfter)) */\n      swap1\n      pop\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4242:4253  senderNonce */\n      0x01\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4242:4273  senderNonce[userOp.getSender()] */\n      0x00\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4254:4272  userOp.getSender() */\n      tag_204\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4254:4260  userOp */\n      dup13\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4254:4270  userOp.getSender */\n      tag_131\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4254:4272  userOp.getSender() */\n      jump\t// in\n    tag_204:\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4242:4273  senderNonce[userOp.getSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4242:4275  senderNonce[userOp.getSender()]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_205\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4309:4339  ECDSA.recover(hash, signature) */\n      tag_207\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4323:4327  hash */\n      dup2\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4329:4338  signature */\n      dup5\n      dup5\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4309:4339  ECDSA.recover(hash, signature) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4309:4322  ECDSA.recover */\n      tag_208\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4309:4339  ECDSA.recover(hash, signature) */\n      jump\t// in\n    tag_207:\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4290:4339  verifyingSigner != ECDSA.recover(hash, signature) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4290:4305  verifyingSigner */\n      immutable(\"0x71c40068bd31bc09d5993cdc61ccff6d93335f0bfd330185a818ca14adae8b8a\")\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4290:4339  verifyingSigner != ECDSA.recover(hash, signature) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4286:4425  if (verifyingSigner != ECDSA.recover(hash, signature)) {... */\n      tag_209\n      jumpi\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4366:4413  _packValidationData(true,validUntil,validAfter) */\n      tag_210\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4386:4390  true */\n      0x01\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4391:4401  validUntil */\n      dup7\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4402:4412  validAfter */\n      dup7\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4366:4385  _packValidationData */\n      tag_211\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4366:4413  _packValidationData(true,validUntil,validAfter) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4355:4414  return (\"\",_packValidationData(true,validUntil,validAfter)) */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      swap7\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_194)\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4286:4425  if (verifyingSigner != ECDSA.recover(hash, signature)) {... */\n    tag_209:\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4445:4493  _packValidationData(false,validUntil,validAfter) */\n      tag_212\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4465:4470  false */\n      0x00\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4471:4481  validUntil */\n      dup7\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4482:4492  validAfter */\n      dup7\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4445:4464  _packValidationData */\n      tag_211\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4445:4493  _packValidationData(false,validUntil,validAfter) */\n      jump\t// in\n    tag_212:\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":4434:4494  return (\"\",_packValidationData(false,validUntil,validAfter)) */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      swap7\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/paymaster/KaijuVerifyingPaymaster.sol\":3660:4501  function _validatePaymasterUserOp(UserOperation calldata userOp, bytes32 /*userOpHash*/, uint256 requiredPreFund)... */\n    tag_194:\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7120:7516  function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7189:7204  bytes32 message */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7389:7423  \"\\x19Ethereum Signed Message:\\n32\" */\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7383:7387  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7376:7424  mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7450:7454  hash */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7444:7448  0x1c */\n      0x1c\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7437:7455  mstore(0x1c, hash) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7495:7499  0x3c */\n      0x3c\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7489:7493  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7479:7500  keccak256(0x00, 0x3c) */\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7468:7500  message := keccak256(0x00, 0x3c) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7120:7516  function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3661:3888  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3739:3746  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3759:3776  address recovered */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3778:3796  RecoverError error */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3800:3827  tryRecover(hash, signature) */\n      tag_216\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3811:3815  hash */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3817:3826  signature */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3800:3810  tryRecover */\n      tag_217\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3800:3827  tryRecover(hash, signature) */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3758:3827  (address recovered, RecoverError error) = tryRecover(hash, signature) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3837:3855  _throwError(error) */\n      tag_218\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3849:3854  error */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3837:3848  _throwError */\n      tag_219\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3837:3855  _throwError(error) */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3872:3881  recovered */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3865:3881  return recovered */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3661:3888  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@account-abstraction/contracts/core/Helpers.sol\":2956:3174  function _packValidationData(bool sigFailed, uint48 validUntil, uint48 validAfter) pure returns (uint256) {... */\n    tag_211:\n        /* \"@account-abstraction/contracts/core/Helpers.sol\":3053:3060  uint256 */\n      0x00\n        /* \"@account-abstraction/contracts/core/Helpers.sol\":3157:3165  160 + 48 */\n      0xd0\n        /* \"@account-abstraction/contracts/core/Helpers.sol\":3141:3151  validAfter */\n      dup3\n        /* \"@account-abstraction/contracts/core/Helpers.sol\":3133:3152  uint256(validAfter) */\n      0xffffffffffff\n      and\n        /* \"@account-abstraction/contracts/core/Helpers.sol\":3133:3166  uint256(validAfter) << (160 + 48) */\n      swap1\n      shl\n        /* \"@account-abstraction/contracts/core/Helpers.sol\":3125:3128  160 */\n      0xa0\n        /* \"@account-abstraction/contracts/core/Helpers.sol\":3110:3120  validUntil */\n      dup5\n        /* \"@account-abstraction/contracts/core/Helpers.sol\":3102:3121  uint256(validUntil) */\n      0xffffffffffff\n      and\n        /* \"@account-abstraction/contracts/core/Helpers.sol\":3102:3128  uint256(validUntil) << 160 */\n      swap1\n      shl\n        /* \"@account-abstraction/contracts/core/Helpers.sol\":3080:3089  sigFailed */\n      dup6\n        /* \"@account-abstraction/contracts/core/Helpers.sol\":3080:3097  sigFailed ? 1 : 0 */\n      tag_221\n      jumpi\n        /* \"@account-abstraction/contracts/core/Helpers.sol\":3096:3097  0 */\n      0x00\n        /* \"@account-abstraction/contracts/core/Helpers.sol\":3080:3097  sigFailed ? 1 : 0 */\n      jump(tag_222)\n    tag_221:\n        /* \"@account-abstraction/contracts/core/Helpers.sol\":3092:3093  1 */\n      0x01\n        /* \"@account-abstraction/contracts/core/Helpers.sol\":3080:3097  sigFailed ? 1 : 0 */\n    tag_222:\n        /* \"@account-abstraction/contracts/core/Helpers.sol\":3079:3129  (sigFailed ? 1 : 0) | (uint256(validUntil) << 160) */\n      0xff\n      and\n      or\n        /* \"@account-abstraction/contracts/core/Helpers.sol\":3079:3167  (sigFailed ? 1 : 0) | (uint256(validUntil) << 160) | (uint256(validAfter) << (160 + 48)) */\n      or\n        /* \"@account-abstraction/contracts/core/Helpers.sol\":3072:3167  return (sigFailed ? 1 : 0) | (uint256(validUntil) << 160) | (uint256(validAfter) << (160 + 48)) */\n      swap1\n      pop\n        /* \"@account-abstraction/contracts/core/Helpers.sol\":2956:3174  function _packValidationData(bool sigFailed, uint48 validUntil, uint48 validAfter) pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2145:2875  function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2226:2233  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2235:2247  RecoverError */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2283:2285  65 */\n      0x41\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2263:2272  signature */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2263:2279  signature.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2263:2285  signature.length == 65 */\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2259:2869  if (signature.length == 65) {... */\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2301:2310  bytes32 r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2324:2333  bytes32 s */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2347:2354  uint8 v */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2599:2603  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2588:2597  signature */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2584:2604  add(signature, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2578:2605  mload(add(signature, 0x20)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2573:2605  r := mload(add(signature, 0x20)) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2648:2652  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2637:2646  signature */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2633:2653  add(signature, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2627:2654  mload(add(signature, 0x40)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2622:2654  s := mload(add(signature, 0x40)) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2705:2709  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2694:2703  signature */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2690:2710  add(signature, 0x60) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2684:2711  mload(add(signature, 0x60)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2681:2682  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2676:2712  byte(0, mload(add(signature, 0x60))) */\n      byte\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2671:2712  v := byte(0, mload(add(signature, 0x60))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2746:2771  tryRecover(hash, v, r, s) */\n      tag_225\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2757:2761  hash */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2763:2764  v */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2766:2767  r */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2769:2770  s */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2746:2756  tryRecover */\n      tag_226\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2746:2771  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2739:2771  return tryRecover(hash, v, r, s) */\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n      jump(tag_223)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2259:2869  if (signature.length == 65) {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2818:2819  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2822:2857  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2802:2858  return (address(0), RecoverError.InvalidSignatureLength) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2145:2875  function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {... */\n    tag_223:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":570:1081  function _throwError(RecoverError error) private pure {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":647:667  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":638:667  error == RecoverError.NoError */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_229\n      jumpi\n      tag_230\n      tag_231\n      jump\t// in\n    tag_230:\n    tag_229:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":638:643  error */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":638:667  error == RecoverError.NoError */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_232\n      jumpi\n      tag_233\n      tag_231\n      jump\t// in\n    tag_233:\n    tag_232:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":634:1075  if (error == RecoverError.NoError) {... */\n      iszero\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":683:690  return; */\n      tag_228\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":634:1075  if (error == RecoverError.NoError) {... */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":743:772  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":734:772  error == RecoverError.InvalidSignature */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_236\n      jumpi\n      tag_237\n      tag_231\n      jump\t// in\n    tag_237:\n    tag_236:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":734:739  error */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":734:772  error == RecoverError.InvalidSignature */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_238\n      jumpi\n      tag_239\n      tag_231\n      jump\t// in\n    tag_239:\n    tag_238:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":730:1075  if (error == RecoverError.InvalidSignature) {... */\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":788:822  revert(\"ECDSA: invalid signature\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":730:1075  if (error == RecoverError.InvalidSignature) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":852:887  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":843:887  error == RecoverError.InvalidSignatureLength */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_244\n      jumpi\n      tag_245\n      tag_231\n      jump\t// in\n    tag_245:\n    tag_244:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":843:848  error */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":843:887  error == RecoverError.InvalidSignatureLength */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_246\n      jumpi\n      tag_247\n      tag_231\n      jump\t// in\n    tag_247:\n    tag_246:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":839:1075  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":903:944  revert(\"ECDSA: invalid signature length\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":839:1075  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":974:1004  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":965:1004  error == RecoverError.InvalidSignatureS */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_252\n      jumpi\n      tag_253\n      tag_231\n      jump\t// in\n    tag_253:\n    tag_252:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":965:970  error */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":965:1004  error == RecoverError.InvalidSignatureS */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_254\n      jumpi\n      tag_255\n      tag_231\n      jump\t// in\n    tag_255:\n    tag_254:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":961:1075  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":1020:1064  revert(\"ECDSA: invalid signature 's' value\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":961:1075  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":570:1081  function _throwError(RecoverError error) private pure {... */\n    tag_228:\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5009:6465  function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5097:5104  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5106:5118  RecoverError */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6021:6087  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6016:6017  s */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6008:6018  uint256(s) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6008:6087  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6004:6165  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6119:6120  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6123:6153  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6103:6154  return (address(0), RecoverError.InvalidSignatureS) */\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_259)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6004:6165  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6259:6273  address signer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6276:6300  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6286:6290  hash */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6292:6293  v */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6295:6296  r */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6298:6299  s */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6276:6300  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_261\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_261:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_264\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_264:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6259:6300  address signer = ecrecover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6332:6333  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6314:6334  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6314:6320  signer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6314:6334  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6310:6411  if (signer == address(0)) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6366:6367  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6370:6399  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6350:6400  return (address(0), RecoverError.InvalidSignature) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_259)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6310:6411  if (signer == address(0)) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6429:6435  signer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6437:6457  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6421:6458  return (signer, RecoverError.NoError) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5009:6465  function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {... */\n    tag_259:\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_267:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_268:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:427   */\n    tag_269:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:420   */\n      0xffffffff\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:421   */\n      and\n        /* \"#utility.yul\":388:421   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":433:553   */\n    tag_270:\n        /* \"#utility.yul\":505:528   */\n      tag_346\n        /* \"#utility.yul\":522:527   */\n      dup2\n        /* \"#utility.yul\":505:528   */\n      tag_269\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":498:503   */\n      dup2\n        /* \"#utility.yul\":495:529   */\n      eq\n        /* \"#utility.yul\":485:547   */\n      tag_347\n      jumpi\n        /* \"#utility.yul\":543:544   */\n      0x00\n        /* \"#utility.yul\":540:541   */\n      dup1\n        /* \"#utility.yul\":533:545   */\n      revert\n        /* \"#utility.yul\":485:547   */\n    tag_347:\n        /* \"#utility.yul\":433:553   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":559:696   */\n    tag_271:\n        /* \"#utility.yul\":604:609   */\n      0x00\n        /* \"#utility.yul\":642:648   */\n      dup2\n        /* \"#utility.yul\":629:649   */\n      calldataload\n        /* \"#utility.yul\":620:649   */\n      swap1\n      pop\n        /* \"#utility.yul\":658:690   */\n      tag_349\n        /* \"#utility.yul\":684:689   */\n      dup2\n        /* \"#utility.yul\":658:690   */\n      tag_270\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":559:696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":702:1029   */\n    tag_23:\n        /* \"#utility.yul\":760:766   */\n      0x00\n        /* \"#utility.yul\":809:811   */\n      0x20\n        /* \"#utility.yul\":797:806   */\n      dup3\n        /* \"#utility.yul\":788:795   */\n      dup5\n        /* \"#utility.yul\":784:807   */\n      sub\n        /* \"#utility.yul\":780:812   */\n      slt\n        /* \"#utility.yul\":777:896   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":815:894   */\n      tag_352\n      tag_267\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":777:896   */\n    tag_351:\n        /* \"#utility.yul\":935:936   */\n      0x00\n        /* \"#utility.yul\":960:1012   */\n      tag_353\n        /* \"#utility.yul\":1004:1011   */\n      dup5\n        /* \"#utility.yul\":995:1001   */\n      dup3\n        /* \"#utility.yul\":984:993   */\n      dup6\n        /* \"#utility.yul\":980:1002   */\n      add\n        /* \"#utility.yul\":960:1012   */\n      tag_271\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":950:1012   */\n      swap2\n      pop\n        /* \"#utility.yul\":906:1022   */\n      pop\n        /* \"#utility.yul\":702:1029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1035:1161   */\n    tag_272:\n        /* \"#utility.yul\":1072:1079   */\n      0x00\n        /* \"#utility.yul\":1112:1154   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1105:1110   */\n      dup3\n        /* \"#utility.yul\":1101:1155   */\n      and\n        /* \"#utility.yul\":1090:1155   */\n      swap1\n      pop\n        /* \"#utility.yul\":1035:1161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1167:1271   */\n    tag_273:\n        /* \"#utility.yul\":1212:1219   */\n      0x00\n        /* \"#utility.yul\":1241:1265   */\n      tag_356\n        /* \"#utility.yul\":1259:1264   */\n      dup3\n        /* \"#utility.yul\":1241:1265   */\n      tag_272\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":1230:1265   */\n      swap1\n      pop\n        /* \"#utility.yul\":1167:1271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1277:1415   */\n    tag_274:\n        /* \"#utility.yul\":1358:1390   */\n      tag_358\n        /* \"#utility.yul\":1384:1389   */\n      dup2\n        /* \"#utility.yul\":1358:1390   */\n      tag_273\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":1351:1356   */\n      dup2\n        /* \"#utility.yul\":1348:1391   */\n      eq\n        /* \"#utility.yul\":1338:1409   */\n      tag_359\n      jumpi\n        /* \"#utility.yul\":1405:1406   */\n      0x00\n        /* \"#utility.yul\":1402:1403   */\n      dup1\n        /* \"#utility.yul\":1395:1407   */\n      revert\n        /* \"#utility.yul\":1338:1409   */\n    tag_359:\n        /* \"#utility.yul\":1277:1415   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1421:1576   */\n    tag_275:\n        /* \"#utility.yul\":1475:1480   */\n      0x00\n        /* \"#utility.yul\":1513:1519   */\n      dup2\n        /* \"#utility.yul\":1500:1520   */\n      calldataload\n        /* \"#utility.yul\":1491:1520   */\n      swap1\n      pop\n        /* \"#utility.yul\":1529:1570   */\n      tag_361\n        /* \"#utility.yul\":1564:1569   */\n      dup2\n        /* \"#utility.yul\":1529:1570   */\n      tag_274\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":1421:1576   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1582:1659   */\n    tag_276:\n        /* \"#utility.yul\":1619:1626   */\n      0x00\n        /* \"#utility.yul\":1648:1653   */\n      dup2\n        /* \"#utility.yul\":1637:1653   */\n      swap1\n      pop\n        /* \"#utility.yul\":1582:1659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1665:1787   */\n    tag_277:\n        /* \"#utility.yul\":1738:1762   */\n      tag_364\n        /* \"#utility.yul\":1756:1761   */\n      dup2\n        /* \"#utility.yul\":1738:1762   */\n      tag_276\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":1731:1736   */\n      dup2\n        /* \"#utility.yul\":1728:1763   */\n      eq\n        /* \"#utility.yul\":1718:1781   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":1777:1778   */\n      0x00\n        /* \"#utility.yul\":1774:1775   */\n      dup1\n        /* \"#utility.yul\":1767:1779   */\n      revert\n        /* \"#utility.yul\":1718:1781   */\n    tag_365:\n        /* \"#utility.yul\":1665:1787   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1793:1932   */\n    tag_278:\n        /* \"#utility.yul\":1839:1844   */\n      0x00\n        /* \"#utility.yul\":1877:1883   */\n      dup2\n        /* \"#utility.yul\":1864:1884   */\n      calldataload\n        /* \"#utility.yul\":1855:1884   */\n      swap1\n      pop\n        /* \"#utility.yul\":1893:1926   */\n      tag_367\n        /* \"#utility.yul\":1920:1925   */\n      dup2\n        /* \"#utility.yul\":1893:1926   */\n      tag_277\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":1793:1932   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1938:2428   */\n    tag_28:\n        /* \"#utility.yul\":2014:2020   */\n      0x00\n        /* \"#utility.yul\":2022:2028   */\n      dup1\n        /* \"#utility.yul\":2071:2073   */\n      0x40\n        /* \"#utility.yul\":2059:2068   */\n      dup4\n        /* \"#utility.yul\":2050:2057   */\n      dup6\n        /* \"#utility.yul\":2046:2069   */\n      sub\n        /* \"#utility.yul\":2042:2074   */\n      slt\n        /* \"#utility.yul\":2039:2158   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":2077:2156   */\n      tag_370\n      tag_267\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":2039:2158   */\n    tag_369:\n        /* \"#utility.yul\":2197:2198   */\n      0x00\n        /* \"#utility.yul\":2222:2283   */\n      tag_371\n        /* \"#utility.yul\":2275:2282   */\n      dup6\n        /* \"#utility.yul\":2266:2272   */\n      dup3\n        /* \"#utility.yul\":2255:2264   */\n      dup7\n        /* \"#utility.yul\":2251:2273   */\n      add\n        /* \"#utility.yul\":2222:2283   */\n      tag_275\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":2212:2283   */\n      swap3\n      pop\n        /* \"#utility.yul\":2168:2293   */\n      pop\n        /* \"#utility.yul\":2332:2334   */\n      0x20\n        /* \"#utility.yul\":2358:2411   */\n      tag_372\n        /* \"#utility.yul\":2403:2410   */\n      dup6\n        /* \"#utility.yul\":2394:2400   */\n      dup3\n        /* \"#utility.yul\":2383:2392   */\n      dup7\n        /* \"#utility.yul\":2379:2401   */\n      add\n        /* \"#utility.yul\":2358:2411   */\n      tag_278\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":2348:2411   */\n      swap2\n      pop\n        /* \"#utility.yul\":2303:2421   */\n      pop\n        /* \"#utility.yul\":1938:2428   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2530   */\n    tag_279:\n        /* \"#utility.yul\":2471:2478   */\n      0x00\n        /* \"#utility.yul\":2500:2524   */\n      tag_374\n        /* \"#utility.yul\":2518:2523   */\n      dup3\n        /* \"#utility.yul\":2500:2524   */\n      tag_272\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":2489:2524   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2530   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2536:2654   */\n    tag_280:\n        /* \"#utility.yul\":2623:2647   */\n      tag_376\n        /* \"#utility.yul\":2641:2646   */\n      dup2\n        /* \"#utility.yul\":2623:2647   */\n      tag_279\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":2618:2621   */\n      dup3\n        /* \"#utility.yul\":2611:2648   */\n      mstore\n        /* \"#utility.yul\":2536:2654   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2660:2882   */\n    tag_34:\n        /* \"#utility.yul\":2753:2757   */\n      0x00\n        /* \"#utility.yul\":2791:2793   */\n      0x20\n        /* \"#utility.yul\":2780:2789   */\n      dup3\n        /* \"#utility.yul\":2776:2794   */\n      add\n        /* \"#utility.yul\":2768:2794   */\n      swap1\n      pop\n        /* \"#utility.yul\":2804:2875   */\n      tag_378\n        /* \"#utility.yul\":2872:2873   */\n      0x00\n        /* \"#utility.yul\":2861:2870   */\n      dup4\n        /* \"#utility.yul\":2857:2874   */\n      add\n        /* \"#utility.yul\":2848:2854   */\n      dup5\n        /* \"#utility.yul\":2804:2875   */\n      tag_280\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":2660:2882   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2888:3005   */\n    tag_281:\n        /* \"#utility.yul\":2997:2998   */\n      0x00\n        /* \"#utility.yul\":2994:2995   */\n      dup1\n        /* \"#utility.yul\":2987:2999   */\n      revert\n        /* \"#utility.yul\":3011:3128   */\n    tag_282:\n        /* \"#utility.yul\":3120:3121   */\n      0x00\n        /* \"#utility.yul\":3117:3118   */\n      dup1\n        /* \"#utility.yul\":3110:3122   */\n      revert\n        /* \"#utility.yul\":3134:3251   */\n    tag_283:\n        /* \"#utility.yul\":3243:3244   */\n      0x00\n        /* \"#utility.yul\":3240:3241   */\n      dup1\n        /* \"#utility.yul\":3233:3245   */\n      revert\n        /* \"#utility.yul\":3270:3822   */\n    tag_284:\n        /* \"#utility.yul\":3327:3335   */\n      0x00\n        /* \"#utility.yul\":3337:3343   */\n      dup1\n        /* \"#utility.yul\":3387:3390   */\n      dup4\n        /* \"#utility.yul\":3380:3384   */\n      0x1f\n        /* \"#utility.yul\":3372:3378   */\n      dup5\n        /* \"#utility.yul\":3368:3385   */\n      add\n        /* \"#utility.yul\":3364:3391   */\n      slt\n        /* \"#utility.yul\":3354:3476   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":3395:3474   */\n      tag_384\n      tag_281\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":3354:3476   */\n    tag_383:\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3495:3515   */\n      calldataload\n        /* \"#utility.yul\":3485:3515   */\n      swap1\n      pop\n        /* \"#utility.yul\":3538:3556   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3530:3536   */\n      dup2\n        /* \"#utility.yul\":3527:3557   */\n      gt\n        /* \"#utility.yul\":3524:3641   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":3560:3639   */\n      tag_386\n      tag_282\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":3524:3641   */\n    tag_385:\n        /* \"#utility.yul\":3674:3678   */\n      0x20\n        /* \"#utility.yul\":3666:3672   */\n      dup4\n        /* \"#utility.yul\":3662:3679   */\n      add\n        /* \"#utility.yul\":3650:3679   */\n      swap2\n      pop\n        /* \"#utility.yul\":3728:3731   */\n      dup4\n        /* \"#utility.yul\":3720:3724   */\n      0x01\n        /* \"#utility.yul\":3712:3718   */\n      dup3\n        /* \"#utility.yul\":3708:3725   */\n      mul\n        /* \"#utility.yul\":3698:3706   */\n      dup4\n        /* \"#utility.yul\":3694:3726   */\n      add\n        /* \"#utility.yul\":3691:3732   */\n      gt\n        /* \"#utility.yul\":3688:3816   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":3735:3814   */\n      tag_388\n      tag_283\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":3688:3816   */\n    tag_387:\n        /* \"#utility.yul\":3270:3822   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3828:4355   */\n    tag_45:\n        /* \"#utility.yul\":3898:3904   */\n      0x00\n        /* \"#utility.yul\":3906:3912   */\n      dup1\n        /* \"#utility.yul\":3955:3957   */\n      0x20\n        /* \"#utility.yul\":3943:3952   */\n      dup4\n        /* \"#utility.yul\":3934:3941   */\n      dup6\n        /* \"#utility.yul\":3930:3953   */\n      sub\n        /* \"#utility.yul\":3926:3958   */\n      slt\n        /* \"#utility.yul\":3923:4042   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":3961:4040   */\n      tag_391\n      tag_267\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":3923:4042   */\n    tag_390:\n        /* \"#utility.yul\":4109:4110   */\n      0x00\n        /* \"#utility.yul\":4098:4107   */\n      dup4\n        /* \"#utility.yul\":4094:4111   */\n      add\n        /* \"#utility.yul\":4081:4112   */\n      calldataload\n        /* \"#utility.yul\":4139:4157   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4131:4137   */\n      dup2\n        /* \"#utility.yul\":4128:4158   */\n      gt\n        /* \"#utility.yul\":4125:4242   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":4161:4240   */\n      tag_393\n      tag_268\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":4125:4242   */\n    tag_392:\n        /* \"#utility.yul\":4274:4338   */\n      tag_394\n        /* \"#utility.yul\":4330:4337   */\n      dup6\n        /* \"#utility.yul\":4321:4327   */\n      dup3\n        /* \"#utility.yul\":4310:4319   */\n      dup7\n        /* \"#utility.yul\":4306:4328   */\n      add\n        /* \"#utility.yul\":4274:4338   */\n      tag_284\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":4256:4338   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":4052:4348   */\n      pop\n        /* \"#utility.yul\":3828:4355   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4361:4458   */\n    tag_285:\n        /* \"#utility.yul\":4397:4404   */\n      0x00\n        /* \"#utility.yul\":4437:4451   */\n      0xffffffffffff\n        /* \"#utility.yul\":4430:4435   */\n      dup3\n        /* \"#utility.yul\":4426:4452   */\n      and\n        /* \"#utility.yul\":4415:4452   */\n      swap1\n      pop\n        /* \"#utility.yul\":4361:4458   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4464:4579   */\n    tag_286:\n        /* \"#utility.yul\":4549:4572   */\n      tag_397\n        /* \"#utility.yul\":4566:4571   */\n      dup2\n        /* \"#utility.yul\":4549:4572   */\n      tag_285\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":4544:4547   */\n      dup3\n        /* \"#utility.yul\":4537:4573   */\n      mstore\n        /* \"#utility.yul\":4464:4579   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4585:4753   */\n    tag_287:\n        /* \"#utility.yul\":4668:4679   */\n      0x00\n        /* \"#utility.yul\":4702:4708   */\n      dup3\n        /* \"#utility.yul\":4697:4700   */\n      dup3\n        /* \"#utility.yul\":4690:4709   */\n      mstore\n        /* \"#utility.yul\":4742:4746   */\n      0x20\n        /* \"#utility.yul\":4737:4740   */\n      dup3\n        /* \"#utility.yul\":4733:4747   */\n      add\n        /* \"#utility.yul\":4718:4747   */\n      swap1\n      pop\n        /* \"#utility.yul\":4585:4753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4759:4905   */\n    tag_288:\n        /* \"#utility.yul\":4856:4862   */\n      dup3\n        /* \"#utility.yul\":4851:4854   */\n      dup2\n        /* \"#utility.yul\":4846:4849   */\n      dup4\n        /* \"#utility.yul\":4833:4863   */\n      calldatacopy\n        /* \"#utility.yul\":4897:4898   */\n      0x00\n        /* \"#utility.yul\":4888:4894   */\n      dup4\n        /* \"#utility.yul\":4883:4886   */\n      dup4\n        /* \"#utility.yul\":4879:4895   */\n      add\n        /* \"#utility.yul\":4872:4899   */\n      mstore\n        /* \"#utility.yul\":4759:4905   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4911:5013   */\n    tag_289:\n        /* \"#utility.yul\":4952:4958   */\n      0x00\n        /* \"#utility.yul\":5003:5005   */\n      0x1f\n        /* \"#utility.yul\":4999:5006   */\n      not\n        /* \"#utility.yul\":4994:4996   */\n      0x1f\n        /* \"#utility.yul\":4987:4992   */\n      dup4\n        /* \"#utility.yul\":4983:4997   */\n      add\n        /* \"#utility.yul\":4979:5007   */\n      and\n        /* \"#utility.yul\":4969:5007   */\n      swap1\n      pop\n        /* \"#utility.yul\":4911:5013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5041:5355   */\n    tag_290:\n        /* \"#utility.yul\":5137:5140   */\n      0x00\n        /* \"#utility.yul\":5158:5228   */\n      tag_402\n        /* \"#utility.yul\":5221:5227   */\n      dup4\n        /* \"#utility.yul\":5216:5219   */\n      dup6\n        /* \"#utility.yul\":5158:5228   */\n      tag_287\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":5151:5228   */\n      swap4\n      pop\n        /* \"#utility.yul\":5238:5294   */\n      tag_403\n        /* \"#utility.yul\":5287:5293   */\n      dup4\n        /* \"#utility.yul\":5282:5285   */\n      dup6\n        /* \"#utility.yul\":5275:5280   */\n      dup5\n        /* \"#utility.yul\":5238:5294   */\n      tag_288\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":5319:5348   */\n      tag_404\n        /* \"#utility.yul\":5341:5347   */\n      dup4\n        /* \"#utility.yul\":5319:5348   */\n      tag_289\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":5314:5317   */\n      dup5\n        /* \"#utility.yul\":5310:5349   */\n      add\n        /* \"#utility.yul\":5303:5349   */\n      swap1\n      pop\n        /* \"#utility.yul\":5041:5355   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5361:5902   */\n    tag_48:\n        /* \"#utility.yul\":5534:5538   */\n      0x00\n        /* \"#utility.yul\":5572:5574   */\n      0x60\n        /* \"#utility.yul\":5561:5570   */\n      dup3\n        /* \"#utility.yul\":5557:5575   */\n      add\n        /* \"#utility.yul\":5549:5575   */\n      swap1\n      pop\n        /* \"#utility.yul\":5585:5654   */\n      tag_406\n        /* \"#utility.yul\":5651:5652   */\n      0x00\n        /* \"#utility.yul\":5640:5649   */\n      dup4\n        /* \"#utility.yul\":5636:5653   */\n      add\n        /* \"#utility.yul\":5627:5633   */\n      dup8\n        /* \"#utility.yul\":5585:5654   */\n      tag_286\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":5664:5734   */\n      tag_407\n        /* \"#utility.yul\":5730:5732   */\n      0x20\n        /* \"#utility.yul\":5719:5728   */\n      dup4\n        /* \"#utility.yul\":5715:5733   */\n      add\n        /* \"#utility.yul\":5706:5712   */\n      dup7\n        /* \"#utility.yul\":5664:5734   */\n      tag_286\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":5781:5790   */\n      dup2\n        /* \"#utility.yul\":5775:5779   */\n      dup2\n        /* \"#utility.yul\":5771:5791   */\n      sub\n        /* \"#utility.yul\":5766:5768   */\n      0x40\n        /* \"#utility.yul\":5755:5764   */\n      dup4\n        /* \"#utility.yul\":5751:5769   */\n      add\n        /* \"#utility.yul\":5744:5792   */\n      mstore\n        /* \"#utility.yul\":5809:5895   */\n      tag_408\n        /* \"#utility.yul\":5890:5894   */\n      dup2\n        /* \"#utility.yul\":5881:5887   */\n      dup5\n        /* \"#utility.yul\":5873:5879   */\n      dup7\n        /* \"#utility.yul\":5809:5895   */\n      tag_290\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":5801:5895   */\n      swap1\n      pop\n        /* \"#utility.yul\":5361:5902   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5908:6025   */\n    tag_291:\n        /* \"#utility.yul\":6017:6018   */\n      0x00\n        /* \"#utility.yul\":6014:6015   */\n      dup1\n        /* \"#utility.yul\":6007:6019   */\n      revert\n        /* \"#utility.yul\":6059:6296   */\n    tag_292:\n        /* \"#utility.yul\":6137:6142   */\n      0x00\n        /* \"#utility.yul\":6178:6181   */\n      0x0160\n        /* \"#utility.yul\":6169:6175   */\n      dup3\n        /* \"#utility.yul\":6164:6167   */\n      dup5\n        /* \"#utility.yul\":6160:6176   */\n      sub\n        /* \"#utility.yul\":6156:6182   */\n      slt\n        /* \"#utility.yul\":6153:6266   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":6185:6264   */\n      tag_412\n      tag_291\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":6153:6266   */\n    tag_411:\n        /* \"#utility.yul\":6284:6290   */\n      dup2\n        /* \"#utility.yul\":6275:6290   */\n      swap1\n      pop\n        /* \"#utility.yul\":6059:6296   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6302:6422   */\n    tag_293:\n        /* \"#utility.yul\":6374:6397   */\n      tag_414\n        /* \"#utility.yul\":6391:6396   */\n      dup2\n        /* \"#utility.yul\":6374:6397   */\n      tag_285\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":6367:6372   */\n      dup2\n        /* \"#utility.yul\":6364:6398   */\n      eq\n        /* \"#utility.yul\":6354:6416   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":6412:6413   */\n      0x00\n        /* \"#utility.yul\":6409:6410   */\n      dup1\n        /* \"#utility.yul\":6402:6414   */\n      revert\n        /* \"#utility.yul\":6354:6416   */\n    tag_415:\n        /* \"#utility.yul\":6302:6422   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6428:6565   */\n    tag_294:\n        /* \"#utility.yul\":6473:6478   */\n      0x00\n        /* \"#utility.yul\":6511:6517   */\n      dup2\n        /* \"#utility.yul\":6498:6518   */\n      calldataload\n        /* \"#utility.yul\":6489:6518   */\n      swap1\n      pop\n        /* \"#utility.yul\":6527:6559   */\n      tag_417\n        /* \"#utility.yul\":6553:6558   */\n      dup2\n        /* \"#utility.yul\":6527:6559   */\n      tag_293\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":6428:6565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6571:7410   */\n    tag_52:\n        /* \"#utility.yul\":6678:6684   */\n      0x00\n        /* \"#utility.yul\":6686:6692   */\n      dup1\n        /* \"#utility.yul\":6694:6700   */\n      0x00\n        /* \"#utility.yul\":6743:6745   */\n      0x60\n        /* \"#utility.yul\":6731:6740   */\n      dup5\n        /* \"#utility.yul\":6722:6729   */\n      dup7\n        /* \"#utility.yul\":6718:6741   */\n      sub\n        /* \"#utility.yul\":6714:6746   */\n      slt\n        /* \"#utility.yul\":6711:6830   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":6749:6828   */\n      tag_420\n      tag_267\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":6711:6830   */\n    tag_419:\n        /* \"#utility.yul\":6897:6898   */\n      0x00\n        /* \"#utility.yul\":6886:6895   */\n      dup5\n        /* \"#utility.yul\":6882:6899   */\n      add\n        /* \"#utility.yul\":6869:6900   */\n      calldataload\n        /* \"#utility.yul\":6927:6945   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6919:6925   */\n      dup2\n        /* \"#utility.yul\":6916:6946   */\n      gt\n        /* \"#utility.yul\":6913:7030   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":6949:7028   */\n      tag_422\n      tag_268\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":6913:7030   */\n    tag_421:\n        /* \"#utility.yul\":7054:7139   */\n      tag_423\n        /* \"#utility.yul\":7131:7138   */\n      dup7\n        /* \"#utility.yul\":7122:7128   */\n      dup3\n        /* \"#utility.yul\":7111:7120   */\n      dup8\n        /* \"#utility.yul\":7107:7129   */\n      add\n        /* \"#utility.yul\":7054:7139   */\n      tag_292\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":7044:7139   */\n      swap4\n      pop\n        /* \"#utility.yul\":6840:7149   */\n      pop\n        /* \"#utility.yul\":7188:7190   */\n      0x20\n        /* \"#utility.yul\":7214:7266   */\n      tag_424\n        /* \"#utility.yul\":7258:7265   */\n      dup7\n        /* \"#utility.yul\":7249:7255   */\n      dup3\n        /* \"#utility.yul\":7238:7247   */\n      dup8\n        /* \"#utility.yul\":7234:7256   */\n      add\n        /* \"#utility.yul\":7214:7266   */\n      tag_294\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":7204:7266   */\n      swap3\n      pop\n        /* \"#utility.yul\":7159:7276   */\n      pop\n        /* \"#utility.yul\":7315:7317   */\n      0x40\n        /* \"#utility.yul\":7341:7393   */\n      tag_425\n        /* \"#utility.yul\":7385:7392   */\n      dup7\n        /* \"#utility.yul\":7376:7382   */\n      dup3\n        /* \"#utility.yul\":7365:7374   */\n      dup8\n        /* \"#utility.yul\":7361:7383   */\n      add\n        /* \"#utility.yul\":7341:7393   */\n      tag_294\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":7331:7393   */\n      swap2\n      pop\n        /* \"#utility.yul\":7286:7403   */\n      pop\n        /* \"#utility.yul\":6571:7410   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7416:7493   */\n    tag_295:\n        /* \"#utility.yul\":7453:7460   */\n      0x00\n        /* \"#utility.yul\":7482:7487   */\n      dup2\n        /* \"#utility.yul\":7471:7487   */\n      swap1\n      pop\n        /* \"#utility.yul\":7416:7493   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7499:7617   */\n    tag_296:\n        /* \"#utility.yul\":7586:7610   */\n      tag_428\n        /* \"#utility.yul\":7604:7609   */\n      dup2\n        /* \"#utility.yul\":7586:7610   */\n      tag_295\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":7581:7584   */\n      dup3\n        /* \"#utility.yul\":7574:7611   */\n      mstore\n        /* \"#utility.yul\":7499:7617   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7623:7845   */\n    tag_55:\n        /* \"#utility.yul\":7716:7720   */\n      0x00\n        /* \"#utility.yul\":7754:7756   */\n      0x20\n        /* \"#utility.yul\":7743:7752   */\n      dup3\n        /* \"#utility.yul\":7739:7757   */\n      add\n        /* \"#utility.yul\":7731:7757   */\n      swap1\n      pop\n        /* \"#utility.yul\":7767:7838   */\n      tag_430\n        /* \"#utility.yul\":7835:7836   */\n      0x00\n        /* \"#utility.yul\":7824:7833   */\n      dup4\n        /* \"#utility.yul\":7820:7837   */\n      add\n        /* \"#utility.yul\":7811:7817   */\n      dup5\n        /* \"#utility.yul\":7767:7838   */\n      tag_296\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":7623:7845   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7851:7973   */\n    tag_297:\n        /* \"#utility.yul\":7924:7948   */\n      tag_432\n        /* \"#utility.yul\":7942:7947   */\n      dup2\n        /* \"#utility.yul\":7924:7948   */\n      tag_279\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":7917:7922   */\n      dup2\n        /* \"#utility.yul\":7914:7949   */\n      eq\n        /* \"#utility.yul\":7904:7967   */\n      tag_433\n      jumpi\n        /* \"#utility.yul\":7963:7964   */\n      0x00\n        /* \"#utility.yul\":7960:7961   */\n      dup1\n        /* \"#utility.yul\":7953:7965   */\n      revert\n        /* \"#utility.yul\":7904:7967   */\n    tag_433:\n        /* \"#utility.yul\":7851:7973   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7979:8118   */\n    tag_298:\n        /* \"#utility.yul\":8025:8030   */\n      0x00\n        /* \"#utility.yul\":8063:8069   */\n      dup2\n        /* \"#utility.yul\":8050:8070   */\n      calldataload\n        /* \"#utility.yul\":8041:8070   */\n      swap1\n      pop\n        /* \"#utility.yul\":8079:8112   */\n      tag_435\n        /* \"#utility.yul\":8106:8111   */\n      dup2\n        /* \"#utility.yul\":8079:8112   */\n      tag_297\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":7979:8118   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8124:8453   */\n    tag_59:\n        /* \"#utility.yul\":8183:8189   */\n      0x00\n        /* \"#utility.yul\":8232:8234   */\n      0x20\n        /* \"#utility.yul\":8220:8229   */\n      dup3\n        /* \"#utility.yul\":8211:8218   */\n      dup5\n        /* \"#utility.yul\":8207:8230   */\n      sub\n        /* \"#utility.yul\":8203:8235   */\n      slt\n        /* \"#utility.yul\":8200:8319   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":8238:8317   */\n      tag_438\n      tag_267\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":8200:8319   */\n    tag_437:\n        /* \"#utility.yul\":8358:8359   */\n      0x00\n        /* \"#utility.yul\":8383:8436   */\n      tag_439\n        /* \"#utility.yul\":8428:8435   */\n      dup5\n        /* \"#utility.yul\":8419:8425   */\n      dup3\n        /* \"#utility.yul\":8408:8417   */\n      dup6\n        /* \"#utility.yul\":8404:8426   */\n      add\n        /* \"#utility.yul\":8383:8436   */\n      tag_298\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":8373:8436   */\n      swap2\n      pop\n        /* \"#utility.yul\":8329:8446   */\n      pop\n        /* \"#utility.yul\":8124:8453   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8459:8577   */\n    tag_299:\n        /* \"#utility.yul\":8546:8570   */\n      tag_441\n        /* \"#utility.yul\":8564:8569   */\n      dup2\n        /* \"#utility.yul\":8546:8570   */\n      tag_276\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":8541:8544   */\n      dup3\n        /* \"#utility.yul\":8534:8571   */\n      mstore\n        /* \"#utility.yul\":8459:8577   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8583:8805   */\n    tag_62:\n        /* \"#utility.yul\":8676:8680   */\n      0x00\n        /* \"#utility.yul\":8714:8716   */\n      0x20\n        /* \"#utility.yul\":8703:8712   */\n      dup3\n        /* \"#utility.yul\":8699:8717   */\n      add\n        /* \"#utility.yul\":8691:8717   */\n      swap1\n      pop\n        /* \"#utility.yul\":8727:8798   */\n      tag_443\n        /* \"#utility.yul\":8795:8796   */\n      0x00\n        /* \"#utility.yul\":8784:8793   */\n      dup4\n        /* \"#utility.yul\":8780:8797   */\n      add\n        /* \"#utility.yul\":8771:8777   */\n      dup5\n        /* \"#utility.yul\":8727:8798   */\n      tag_299\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":8583:8805   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8811:8924   */\n    tag_300:\n        /* \"#utility.yul\":8898:8899   */\n      0x03\n        /* \"#utility.yul\":8891:8896   */\n      dup2\n        /* \"#utility.yul\":8888:8900   */\n      lt\n        /* \"#utility.yul\":8878:8918   */\n      tag_445\n      jumpi\n        /* \"#utility.yul\":8914:8915   */\n      0x00\n        /* \"#utility.yul\":8911:8912   */\n      dup1\n        /* \"#utility.yul\":8904:8916   */\n      revert\n        /* \"#utility.yul\":8878:8918   */\n    tag_445:\n        /* \"#utility.yul\":8811:8924   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8930:9097   */\n    tag_301:\n        /* \"#utility.yul\":8990:8995   */\n      0x00\n        /* \"#utility.yul\":9028:9034   */\n      dup2\n        /* \"#utility.yul\":9015:9035   */\n      calldataload\n        /* \"#utility.yul\":9006:9035   */\n      swap1\n      pop\n        /* \"#utility.yul\":9044:9091   */\n      tag_447\n        /* \"#utility.yul\":9085:9090   */\n      dup2\n        /* \"#utility.yul\":9044:9091   */\n      tag_300\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":8930:9097   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9103:9948   */\n    tag_66:\n        /* \"#utility.yul\":9205:9211   */\n      0x00\n        /* \"#utility.yul\":9213:9219   */\n      dup1\n        /* \"#utility.yul\":9221:9227   */\n      0x00\n        /* \"#utility.yul\":9229:9235   */\n      dup1\n        /* \"#utility.yul\":9278:9280   */\n      0x60\n        /* \"#utility.yul\":9266:9275   */\n      dup6\n        /* \"#utility.yul\":9257:9264   */\n      dup8\n        /* \"#utility.yul\":9253:9276   */\n      sub\n        /* \"#utility.yul\":9249:9281   */\n      slt\n        /* \"#utility.yul\":9246:9365   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":9284:9363   */\n      tag_450\n      tag_267\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":9246:9365   */\n    tag_449:\n        /* \"#utility.yul\":9404:9405   */\n      0x00\n        /* \"#utility.yul\":9429:9496   */\n      tag_451\n        /* \"#utility.yul\":9488:9495   */\n      dup8\n        /* \"#utility.yul\":9479:9485   */\n      dup3\n        /* \"#utility.yul\":9468:9477   */\n      dup9\n        /* \"#utility.yul\":9464:9486   */\n      add\n        /* \"#utility.yul\":9429:9496   */\n      tag_301\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":9419:9496   */\n      swap5\n      pop\n        /* \"#utility.yul\":9375:9506   */\n      pop\n        /* \"#utility.yul\":9573:9575   */\n      0x20\n        /* \"#utility.yul\":9562:9571   */\n      dup6\n        /* \"#utility.yul\":9558:9576   */\n      add\n        /* \"#utility.yul\":9545:9577   */\n      calldataload\n        /* \"#utility.yul\":9604:9622   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9596:9602   */\n      dup2\n        /* \"#utility.yul\":9593:9623   */\n      gt\n        /* \"#utility.yul\":9590:9707   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":9626:9705   */\n      tag_453\n      tag_268\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":9590:9707   */\n    tag_452:\n        /* \"#utility.yul\":9739:9803   */\n      tag_454\n        /* \"#utility.yul\":9795:9802   */\n      dup8\n        /* \"#utility.yul\":9786:9792   */\n      dup3\n        /* \"#utility.yul\":9775:9784   */\n      dup9\n        /* \"#utility.yul\":9771:9793   */\n      add\n        /* \"#utility.yul\":9739:9803   */\n      tag_284\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":9721:9803   */\n      swap4\n      pop\n      swap4\n      pop\n        /* \"#utility.yul\":9516:9813   */\n      pop\n        /* \"#utility.yul\":9852:9854   */\n      0x40\n        /* \"#utility.yul\":9878:9931   */\n      tag_455\n        /* \"#utility.yul\":9923:9930   */\n      dup8\n        /* \"#utility.yul\":9914:9920   */\n      dup3\n        /* \"#utility.yul\":9903:9912   */\n      dup9\n        /* \"#utility.yul\":9899:9921   */\n      add\n        /* \"#utility.yul\":9878:9931   */\n      tag_278\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":9868:9931   */\n      swap2\n      pop\n        /* \"#utility.yul\":9823:9941   */\n      pop\n        /* \"#utility.yul\":9103:9948   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9954:10014   */\n    tag_302:\n        /* \"#utility.yul\":9982:9985   */\n      0x00\n        /* \"#utility.yul\":10003:10008   */\n      dup2\n        /* \"#utility.yul\":9996:10008   */\n      swap1\n      pop\n        /* \"#utility.yul\":9954:10014   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10020:10162   */\n    tag_303:\n        /* \"#utility.yul\":10070:10079   */\n      0x00\n        /* \"#utility.yul\":10103:10156   */\n      tag_458\n        /* \"#utility.yul\":10121:10155   */\n      tag_459\n        /* \"#utility.yul\":10130:10154   */\n      tag_460\n        /* \"#utility.yul\":10148:10153   */\n      dup5\n        /* \"#utility.yul\":10130:10154   */\n      tag_272\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":10121:10155   */\n      tag_302\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":10103:10156   */\n      tag_272\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":10090:10156   */\n      swap1\n      pop\n        /* \"#utility.yul\":10020:10162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10168:10294   */\n    tag_304:\n        /* \"#utility.yul\":10218:10227   */\n      0x00\n        /* \"#utility.yul\":10251:10288   */\n      tag_462\n        /* \"#utility.yul\":10282:10287   */\n      dup3\n        /* \"#utility.yul\":10251:10288   */\n      tag_303\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":10238:10288   */\n      swap1\n      pop\n        /* \"#utility.yul\":10168:10294   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10300:10445   */\n    tag_305:\n        /* \"#utility.yul\":10369:10378   */\n      0x00\n        /* \"#utility.yul\":10402:10439   */\n      tag_464\n        /* \"#utility.yul\":10433:10438   */\n      dup3\n        /* \"#utility.yul\":10402:10439   */\n      tag_304\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":10389:10439   */\n      swap1\n      pop\n        /* \"#utility.yul\":10300:10445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10451:10620   */\n    tag_306:\n        /* \"#utility.yul\":10557:10613   */\n      tag_466\n        /* \"#utility.yul\":10607:10612   */\n      dup2\n        /* \"#utility.yul\":10557:10613   */\n      tag_305\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":10552:10555   */\n      dup3\n        /* \"#utility.yul\":10545:10614   */\n      mstore\n        /* \"#utility.yul\":10451:10620   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10626:10886   */\n    tag_72:\n        /* \"#utility.yul\":10738:10742   */\n      0x00\n        /* \"#utility.yul\":10776:10778   */\n      0x20\n        /* \"#utility.yul\":10765:10774   */\n      dup3\n        /* \"#utility.yul\":10761:10779   */\n      add\n        /* \"#utility.yul\":10753:10779   */\n      swap1\n      pop\n        /* \"#utility.yul\":10789:10879   */\n      tag_468\n        /* \"#utility.yul\":10876:10877   */\n      0x00\n        /* \"#utility.yul\":10865:10874   */\n      dup4\n        /* \"#utility.yul\":10861:10878   */\n      add\n        /* \"#utility.yul\":10852:10858   */\n      dup5\n        /* \"#utility.yul\":10789:10879   */\n      tag_306\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":10626:10886   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10892:11237   */\n    tag_79:\n        /* \"#utility.yul\":10959:10965   */\n      0x00\n        /* \"#utility.yul\":11008:11010   */\n      0x20\n        /* \"#utility.yul\":10996:11005   */\n      dup3\n        /* \"#utility.yul\":10987:10994   */\n      dup5\n        /* \"#utility.yul\":10983:11006   */\n      sub\n        /* \"#utility.yul\":10979:11011   */\n      slt\n        /* \"#utility.yul\":10976:11095   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":11014:11093   */\n      tag_471\n      tag_267\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":10976:11095   */\n    tag_470:\n        /* \"#utility.yul\":11134:11135   */\n      0x00\n        /* \"#utility.yul\":11159:11220   */\n      tag_472\n        /* \"#utility.yul\":11212:11219   */\n      dup5\n        /* \"#utility.yul\":11203:11209   */\n      dup3\n        /* \"#utility.yul\":11192:11201   */\n      dup6\n        /* \"#utility.yul\":11188:11210   */\n      add\n        /* \"#utility.yul\":11159:11220   */\n      tag_275\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":11149:11220   */\n      swap2\n      pop\n        /* \"#utility.yul\":11105:11230   */\n      pop\n        /* \"#utility.yul\":10892:11237   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11243:11365   */\n    tag_307:\n        /* \"#utility.yul\":11316:11340   */\n      tag_474\n        /* \"#utility.yul\":11334:11339   */\n      dup2\n        /* \"#utility.yul\":11316:11340   */\n      tag_295\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":11309:11314   */\n      dup2\n        /* \"#utility.yul\":11306:11341   */\n      eq\n        /* \"#utility.yul\":11296:11359   */\n      tag_475\n      jumpi\n        /* \"#utility.yul\":11355:11356   */\n      0x00\n        /* \"#utility.yul\":11352:11353   */\n      dup1\n        /* \"#utility.yul\":11345:11357   */\n      revert\n        /* \"#utility.yul\":11296:11359   */\n    tag_475:\n        /* \"#utility.yul\":11243:11365   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11371:11510   */\n    tag_308:\n        /* \"#utility.yul\":11417:11422   */\n      0x00\n        /* \"#utility.yul\":11455:11461   */\n      dup2\n        /* \"#utility.yul\":11442:11462   */\n      calldataload\n        /* \"#utility.yul\":11433:11462   */\n      swap1\n      pop\n        /* \"#utility.yul\":11471:11504   */\n      tag_477\n        /* \"#utility.yul\":11498:11503   */\n      dup2\n        /* \"#utility.yul\":11471:11504   */\n      tag_307\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":11371:11510   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11516:12359   */\n    tag_94:\n        /* \"#utility.yul\":11625:11631   */\n      0x00\n        /* \"#utility.yul\":11633:11639   */\n      dup1\n        /* \"#utility.yul\":11641:11647   */\n      0x00\n        /* \"#utility.yul\":11690:11692   */\n      0x60\n        /* \"#utility.yul\":11678:11687   */\n      dup5\n        /* \"#utility.yul\":11669:11676   */\n      dup7\n        /* \"#utility.yul\":11665:11688   */\n      sub\n        /* \"#utility.yul\":11661:11693   */\n      slt\n        /* \"#utility.yul\":11658:11777   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":11696:11775   */\n      tag_480\n      tag_267\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":11658:11777   */\n    tag_479:\n        /* \"#utility.yul\":11844:11845   */\n      0x00\n        /* \"#utility.yul\":11833:11842   */\n      dup5\n        /* \"#utility.yul\":11829:11846   */\n      add\n        /* \"#utility.yul\":11816:11847   */\n      calldataload\n        /* \"#utility.yul\":11874:11892   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11866:11872   */\n      dup2\n        /* \"#utility.yul\":11863:11893   */\n      gt\n        /* \"#utility.yul\":11860:11977   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":11896:11975   */\n      tag_482\n      tag_268\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":11860:11977   */\n    tag_481:\n        /* \"#utility.yul\":12001:12086   */\n      tag_483\n        /* \"#utility.yul\":12078:12085   */\n      dup7\n        /* \"#utility.yul\":12069:12075   */\n      dup3\n        /* \"#utility.yul\":12058:12067   */\n      dup8\n        /* \"#utility.yul\":12054:12076   */\n      add\n        /* \"#utility.yul\":12001:12086   */\n      tag_292\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":11991:12086   */\n      swap4\n      pop\n        /* \"#utility.yul\":11787:12096   */\n      pop\n        /* \"#utility.yul\":12135:12137   */\n      0x20\n        /* \"#utility.yul\":12161:12214   */\n      tag_484\n        /* \"#utility.yul\":12206:12213   */\n      dup7\n        /* \"#utility.yul\":12197:12203   */\n      dup3\n        /* \"#utility.yul\":12186:12195   */\n      dup8\n        /* \"#utility.yul\":12182:12204   */\n      add\n        /* \"#utility.yul\":12161:12214   */\n      tag_308\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":12151:12214   */\n      swap3\n      pop\n        /* \"#utility.yul\":12106:12224   */\n      pop\n        /* \"#utility.yul\":12263:12265   */\n      0x40\n        /* \"#utility.yul\":12289:12342   */\n      tag_485\n        /* \"#utility.yul\":12334:12341   */\n      dup7\n        /* \"#utility.yul\":12325:12331   */\n      dup3\n        /* \"#utility.yul\":12314:12323   */\n      dup8\n        /* \"#utility.yul\":12310:12332   */\n      add\n        /* \"#utility.yul\":12289:12342   */\n      tag_278\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":12279:12342   */\n      swap2\n      pop\n        /* \"#utility.yul\":12234:12352   */\n      pop\n        /* \"#utility.yul\":11516:12359   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":12365:12463   */\n    tag_309:\n        /* \"#utility.yul\":12416:12422   */\n      0x00\n        /* \"#utility.yul\":12450:12455   */\n      dup2\n        /* \"#utility.yul\":12444:12456   */\n      mload\n        /* \"#utility.yul\":12434:12456   */\n      swap1\n      pop\n        /* \"#utility.yul\":12365:12463   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12469:12715   */\n    tag_310:\n        /* \"#utility.yul\":12550:12551   */\n      0x00\n        /* \"#utility.yul\":12560:12673   */\n    tag_488:\n        /* \"#utility.yul\":12574:12580   */\n      dup4\n        /* \"#utility.yul\":12571:12572   */\n      dup2\n        /* \"#utility.yul\":12568:12581   */\n      lt\n        /* \"#utility.yul\":12560:12673   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":12659:12660   */\n      dup1\n        /* \"#utility.yul\":12654:12657   */\n      dup3\n        /* \"#utility.yul\":12650:12661   */\n      add\n        /* \"#utility.yul\":12644:12662   */\n      mload\n        /* \"#utility.yul\":12640:12641   */\n      dup2\n        /* \"#utility.yul\":12635:12638   */\n      dup5\n        /* \"#utility.yul\":12631:12642   */\n      add\n        /* \"#utility.yul\":12624:12663   */\n      mstore\n        /* \"#utility.yul\":12596:12598   */\n      0x20\n        /* \"#utility.yul\":12593:12594   */\n      dup2\n        /* \"#utility.yul\":12589:12599   */\n      add\n        /* \"#utility.yul\":12584:12599   */\n      swap1\n      pop\n        /* \"#utility.yul\":12560:12673   */\n      jump(tag_488)\n    tag_490:\n        /* \"#utility.yul\":12707:12708   */\n      0x00\n        /* \"#utility.yul\":12698:12704   */\n      dup5\n        /* \"#utility.yul\":12693:12696   */\n      dup5\n        /* \"#utility.yul\":12689:12705   */\n      add\n        /* \"#utility.yul\":12682:12709   */\n      mstore\n        /* \"#utility.yul\":12531:12715   */\n      pop\n        /* \"#utility.yul\":12469:12715   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12721:13094   */\n    tag_311:\n        /* \"#utility.yul\":12807:12810   */\n      0x00\n        /* \"#utility.yul\":12835:12873   */\n      tag_492\n        /* \"#utility.yul\":12867:12872   */\n      dup3\n        /* \"#utility.yul\":12835:12873   */\n      tag_309\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":12889:12959   */\n      tag_493\n        /* \"#utility.yul\":12952:12958   */\n      dup2\n        /* \"#utility.yul\":12947:12950   */\n      dup6\n        /* \"#utility.yul\":12889:12959   */\n      tag_287\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":12882:12959   */\n      swap4\n      pop\n        /* \"#utility.yul\":12968:13033   */\n      tag_494\n        /* \"#utility.yul\":13026:13032   */\n      dup2\n        /* \"#utility.yul\":13021:13024   */\n      dup6\n        /* \"#utility.yul\":13014:13018   */\n      0x20\n        /* \"#utility.yul\":13007:13012   */\n      dup7\n        /* \"#utility.yul\":13003:13019   */\n      add\n        /* \"#utility.yul\":12968:13033   */\n      tag_310\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":13058:13087   */\n      tag_495\n        /* \"#utility.yul\":13080:13086   */\n      dup2\n        /* \"#utility.yul\":13058:13087   */\n      tag_289\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":13053:13056   */\n      dup5\n        /* \"#utility.yul\":13049:13088   */\n      add\n        /* \"#utility.yul\":13042:13088   */\n      swap2\n      pop\n        /* \"#utility.yul\":12811:13094   */\n      pop\n        /* \"#utility.yul\":12721:13094   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13100:13519   */\n    tag_97:\n        /* \"#utility.yul\":13239:13243   */\n      0x00\n        /* \"#utility.yul\":13277:13279   */\n      0x40\n        /* \"#utility.yul\":13266:13275   */\n      dup3\n        /* \"#utility.yul\":13262:13280   */\n      add\n        /* \"#utility.yul\":13254:13280   */\n      swap1\n      pop\n        /* \"#utility.yul\":13326:13335   */\n      dup2\n        /* \"#utility.yul\":13320:13324   */\n      dup2\n        /* \"#utility.yul\":13316:13336   */\n      sub\n        /* \"#utility.yul\":13312:13313   */\n      0x00\n        /* \"#utility.yul\":13301:13310   */\n      dup4\n        /* \"#utility.yul\":13297:13314   */\n      add\n        /* \"#utility.yul\":13290:13337   */\n      mstore\n        /* \"#utility.yul\":13354:13430   */\n      tag_497\n        /* \"#utility.yul\":13425:13429   */\n      dup2\n        /* \"#utility.yul\":13416:13422   */\n      dup6\n        /* \"#utility.yul\":13354:13430   */\n      tag_311\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":13346:13430   */\n      swap1\n      pop\n        /* \"#utility.yul\":13440:13512   */\n      tag_498\n        /* \"#utility.yul\":13508:13510   */\n      0x20\n        /* \"#utility.yul\":13497:13506   */\n      dup4\n        /* \"#utility.yul\":13493:13511   */\n      add\n        /* \"#utility.yul\":13484:13490   */\n      dup5\n        /* \"#utility.yul\":13440:13512   */\n      tag_299\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":13100:13519   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13525:13640   */\n    tag_312:\n        /* \"#utility.yul\":13610:13633   */\n      tag_500\n        /* \"#utility.yul\":13627:13632   */\n      dup2\n        /* \"#utility.yul\":13610:13633   */\n      tag_269\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":13605:13608   */\n      dup3\n        /* \"#utility.yul\":13598:13634   */\n      mstore\n        /* \"#utility.yul\":13525:13640   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13646:13864   */\n    tag_103:\n        /* \"#utility.yul\":13737:13741   */\n      0x00\n        /* \"#utility.yul\":13775:13777   */\n      0x20\n        /* \"#utility.yul\":13764:13773   */\n      dup3\n        /* \"#utility.yul\":13760:13778   */\n      add\n        /* \"#utility.yul\":13752:13778   */\n      swap1\n      pop\n        /* \"#utility.yul\":13788:13857   */\n      tag_502\n        /* \"#utility.yul\":13854:13855   */\n      0x00\n        /* \"#utility.yul\":13843:13852   */\n      dup4\n        /* \"#utility.yul\":13839:13856   */\n      add\n        /* \"#utility.yul\":13830:13836   */\n      dup5\n        /* \"#utility.yul\":13788:13857   */\n      tag_312\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":13646:13864   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13870:14012   */\n    tag_313:\n        /* \"#utility.yul\":13973:14005   */\n      tag_504\n        /* \"#utility.yul\":13999:14004   */\n      dup2\n        /* \"#utility.yul\":13973:14005   */\n      tag_273\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":13968:13971   */\n      dup3\n        /* \"#utility.yul\":13961:14006   */\n      mstore\n        /* \"#utility.yul\":13870:14012   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14018:14382   */\n    tag_111:\n        /* \"#utility.yul\":14155:14159   */\n      0x00\n        /* \"#utility.yul\":14193:14195   */\n      0x40\n        /* \"#utility.yul\":14182:14191   */\n      dup3\n        /* \"#utility.yul\":14178:14196   */\n      add\n        /* \"#utility.yul\":14170:14196   */\n      swap1\n      pop\n        /* \"#utility.yul\":14206:14293   */\n      tag_506\n        /* \"#utility.yul\":14290:14291   */\n      0x00\n        /* \"#utility.yul\":14279:14288   */\n      dup4\n        /* \"#utility.yul\":14275:14292   */\n      add\n        /* \"#utility.yul\":14266:14272   */\n      dup6\n        /* \"#utility.yul\":14206:14293   */\n      tag_313\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":14303:14375   */\n      tag_507\n        /* \"#utility.yul\":14371:14373   */\n      0x20\n        /* \"#utility.yul\":14360:14369   */\n      dup4\n        /* \"#utility.yul\":14356:14374   */\n      add\n        /* \"#utility.yul\":14347:14353   */\n      dup5\n        /* \"#utility.yul\":14303:14375   */\n      tag_299\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":14018:14382   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14388:14505   */\n    tag_314:\n        /* \"#utility.yul\":14497:14498   */\n      0x00\n        /* \"#utility.yul\":14494:14495   */\n      dup1\n        /* \"#utility.yul\":14487:14499   */\n      revert\n        /* \"#utility.yul\":14511:14628   */\n    tag_315:\n        /* \"#utility.yul\":14620:14621   */\n      0x00\n        /* \"#utility.yul\":14617:14618   */\n      dup1\n        /* \"#utility.yul\":14610:14622   */\n      revert\n        /* \"#utility.yul\":14634:15103   */\n    tag_123:\n        /* \"#utility.yul\":14739:14748   */\n      0x00\n        /* \"#utility.yul\":14750:14759   */\n      dup1\n        /* \"#utility.yul\":14788:14796   */\n      dup6\n        /* \"#utility.yul\":14776:14786   */\n      dup6\n        /* \"#utility.yul\":14773:14797   */\n      gt\n        /* \"#utility.yul\":14770:14881   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":14800:14879   */\n      tag_512\n      tag_314\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":14770:14881   */\n    tag_511:\n        /* \"#utility.yul\":14906:14912   */\n      dup4\n        /* \"#utility.yul\":14896:14904   */\n      dup7\n        /* \"#utility.yul\":14893:14913   */\n      gt\n        /* \"#utility.yul\":14890:14997   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":14916:14995   */\n      tag_514\n      tag_315\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":14890:14997   */\n    tag_513:\n        /* \"#utility.yul\":15047:15048   */\n      0x01\n        /* \"#utility.yul\":15035:15045   */\n      dup6\n        /* \"#utility.yul\":15031:15049   */\n      mul\n        /* \"#utility.yul\":15023:15029   */\n      dup4\n        /* \"#utility.yul\":15019:15050   */\n      add\n        /* \"#utility.yul\":15006:15050   */\n      swap2\n      pop\n        /* \"#utility.yul\":15086:15096   */\n      dup5\n        /* \"#utility.yul\":15076:15084   */\n      dup7\n        /* \"#utility.yul\":15072:15097   */\n      sub\n        /* \"#utility.yul\":15059:15097   */\n      swap1\n      pop\n        /* \"#utility.yul\":14634:15103   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15109:15579   */\n    tag_125:\n        /* \"#utility.yul\":15175:15181   */\n      0x00\n        /* \"#utility.yul\":15183:15189   */\n      dup1\n        /* \"#utility.yul\":15232:15234   */\n      0x40\n        /* \"#utility.yul\":15220:15229   */\n      dup4\n        /* \"#utility.yul\":15211:15218   */\n      dup6\n        /* \"#utility.yul\":15207:15230   */\n      sub\n        /* \"#utility.yul\":15203:15235   */\n      slt\n        /* \"#utility.yul\":15200:15319   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":15238:15317   */\n      tag_517\n      tag_267\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":15200:15319   */\n    tag_516:\n        /* \"#utility.yul\":15358:15359   */\n      0x00\n        /* \"#utility.yul\":15383:15435   */\n      tag_518\n        /* \"#utility.yul\":15427:15434   */\n      dup6\n        /* \"#utility.yul\":15418:15424   */\n      dup3\n        /* \"#utility.yul\":15407:15416   */\n      dup7\n        /* \"#utility.yul\":15403:15425   */\n      add\n        /* \"#utility.yul\":15383:15435   */\n      tag_294\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":15373:15435   */\n      swap3\n      pop\n        /* \"#utility.yul\":15329:15445   */\n      pop\n        /* \"#utility.yul\":15484:15486   */\n      0x20\n        /* \"#utility.yul\":15510:15562   */\n      tag_519\n        /* \"#utility.yul\":15554:15561   */\n      dup6\n        /* \"#utility.yul\":15545:15551   */\n      dup3\n        /* \"#utility.yul\":15534:15543   */\n      dup7\n        /* \"#utility.yul\":15530:15552   */\n      add\n        /* \"#utility.yul\":15510:15562   */\n      tag_294\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":15500:15562   */\n      swap2\n      pop\n        /* \"#utility.yul\":15455:15572   */\n      pop\n        /* \"#utility.yul\":15109:15579   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15585:16439   */\n    tag_133:\n        /* \"#utility.yul\":15832:15836   */\n      0x00\n        /* \"#utility.yul\":15870:15873   */\n      0xc0\n        /* \"#utility.yul\":15859:15868   */\n      dup3\n        /* \"#utility.yul\":15855:15874   */\n      add\n        /* \"#utility.yul\":15847:15874   */\n      swap1\n      pop\n        /* \"#utility.yul\":15920:15929   */\n      dup2\n        /* \"#utility.yul\":15914:15918   */\n      dup2\n        /* \"#utility.yul\":15910:15930   */\n      sub\n        /* \"#utility.yul\":15906:15907   */\n      0x00\n        /* \"#utility.yul\":15895:15904   */\n      dup4\n        /* \"#utility.yul\":15891:15908   */\n      add\n        /* \"#utility.yul\":15884:15931   */\n      mstore\n        /* \"#utility.yul\":15948:16024   */\n      tag_521\n        /* \"#utility.yul\":16019:16023   */\n      dup2\n        /* \"#utility.yul\":16010:16016   */\n      dup10\n        /* \"#utility.yul\":15948:16024   */\n      tag_311\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":15940:16024   */\n      swap1\n      pop\n        /* \"#utility.yul\":16034:16106   */\n      tag_522\n        /* \"#utility.yul\":16102:16104   */\n      0x20\n        /* \"#utility.yul\":16091:16100   */\n      dup4\n        /* \"#utility.yul\":16087:16105   */\n      add\n        /* \"#utility.yul\":16078:16084   */\n      dup9\n        /* \"#utility.yul\":16034:16106   */\n      tag_299\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":16116:16188   */\n      tag_523\n        /* \"#utility.yul\":16184:16186   */\n      0x40\n        /* \"#utility.yul\":16173:16182   */\n      dup4\n        /* \"#utility.yul\":16169:16187   */\n      add\n        /* \"#utility.yul\":16160:16166   */\n      dup8\n        /* \"#utility.yul\":16116:16188   */\n      tag_280\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":16198:16270   */\n      tag_524\n        /* \"#utility.yul\":16266:16268   */\n      0x60\n        /* \"#utility.yul\":16255:16264   */\n      dup4\n        /* \"#utility.yul\":16251:16269   */\n      add\n        /* \"#utility.yul\":16242:16248   */\n      dup7\n        /* \"#utility.yul\":16198:16270   */\n      tag_299\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":16280:16351   */\n      tag_525\n        /* \"#utility.yul\":16346:16349   */\n      0x80\n        /* \"#utility.yul\":16335:16344   */\n      dup4\n        /* \"#utility.yul\":16331:16350   */\n      add\n        /* \"#utility.yul\":16322:16328   */\n      dup6\n        /* \"#utility.yul\":16280:16351   */\n      tag_286\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":16361:16432   */\n      tag_526\n        /* \"#utility.yul\":16427:16430   */\n      0xa0\n        /* \"#utility.yul\":16416:16425   */\n      dup4\n        /* \"#utility.yul\":16412:16431   */\n      add\n        /* \"#utility.yul\":16403:16409   */\n      dup5\n        /* \"#utility.yul\":16361:16432   */\n      tag_286\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":15585:16439   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16445:16699   */\n    tag_149:\n        /* \"#utility.yul\":16554:16558   */\n      0x00\n        /* \"#utility.yul\":16592:16594   */\n      0x20\n        /* \"#utility.yul\":16581:16590   */\n      dup3\n        /* \"#utility.yul\":16577:16595   */\n      add\n        /* \"#utility.yul\":16569:16595   */\n      swap1\n      pop\n        /* \"#utility.yul\":16605:16692   */\n      tag_528\n        /* \"#utility.yul\":16689:16690   */\n      0x00\n        /* \"#utility.yul\":16678:16687   */\n      dup4\n        /* \"#utility.yul\":16674:16691   */\n      add\n        /* \"#utility.yul\":16665:16671   */\n      dup5\n        /* \"#utility.yul\":16605:16692   */\n      tag_313\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":16445:16699   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16705:16848   */\n    tag_316:\n        /* \"#utility.yul\":16762:16767   */\n      0x00\n        /* \"#utility.yul\":16793:16799   */\n      dup2\n        /* \"#utility.yul\":16787:16800   */\n      mload\n        /* \"#utility.yul\":16778:16800   */\n      swap1\n      pop\n        /* \"#utility.yul\":16809:16842   */\n      tag_530\n        /* \"#utility.yul\":16836:16841   */\n      dup2\n        /* \"#utility.yul\":16809:16842   */\n      tag_277\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":16705:16848   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16854:17205   */\n    tag_158:\n        /* \"#utility.yul\":16924:16930   */\n      0x00\n        /* \"#utility.yul\":16973:16975   */\n      0x20\n        /* \"#utility.yul\":16961:16970   */\n      dup3\n        /* \"#utility.yul\":16952:16959   */\n      dup5\n        /* \"#utility.yul\":16948:16971   */\n      sub\n        /* \"#utility.yul\":16944:16976   */\n      slt\n        /* \"#utility.yul\":16941:17060   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":16979:17058   */\n      tag_533\n      tag_267\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":16941:17060   */\n    tag_532:\n        /* \"#utility.yul\":17099:17100   */\n      0x00\n        /* \"#utility.yul\":17124:17188   */\n      tag_534\n        /* \"#utility.yul\":17180:17187   */\n      dup5\n        /* \"#utility.yul\":17171:17177   */\n      dup3\n        /* \"#utility.yul\":17160:17169   */\n      dup6\n        /* \"#utility.yul\":17156:17178   */\n      add\n        /* \"#utility.yul\":17124:17188   */\n      tag_316\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":17114:17188   */\n      swap2\n      pop\n        /* \"#utility.yul\":17070:17198   */\n      pop\n        /* \"#utility.yul\":16854:17205   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17211:17380   */\n    tag_317:\n        /* \"#utility.yul\":17295:17306   */\n      0x00\n        /* \"#utility.yul\":17329:17335   */\n      dup3\n        /* \"#utility.yul\":17324:17327   */\n      dup3\n        /* \"#utility.yul\":17317:17336   */\n      mstore\n        /* \"#utility.yul\":17369:17373   */\n      0x20\n        /* \"#utility.yul\":17364:17367   */\n      dup3\n        /* \"#utility.yul\":17360:17374   */\n      add\n        /* \"#utility.yul\":17345:17374   */\n      swap1\n      pop\n        /* \"#utility.yul\":17211:17380   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17386:17611   */\n    tag_318:\n        /* \"#utility.yul\":17526:17560   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":17522:17523   */\n      0x00\n        /* \"#utility.yul\":17514:17520   */\n      dup3\n        /* \"#utility.yul\":17510:17524   */\n      add\n        /* \"#utility.yul\":17503:17561   */\n      mstore\n        /* \"#utility.yul\":17595:17603   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17590:17592   */\n      0x20\n        /* \"#utility.yul\":17582:17588   */\n      dup3\n        /* \"#utility.yul\":17578:17593   */\n      add\n        /* \"#utility.yul\":17571:17604   */\n      mstore\n        /* \"#utility.yul\":17386:17611   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17617:17983   */\n    tag_319:\n        /* \"#utility.yul\":17759:17762   */\n      0x00\n        /* \"#utility.yul\":17780:17847   */\n      tag_538\n        /* \"#utility.yul\":17844:17846   */\n      0x26\n        /* \"#utility.yul\":17839:17842   */\n      dup4\n        /* \"#utility.yul\":17780:17847   */\n      tag_317\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":17773:17847   */\n      swap2\n      pop\n        /* \"#utility.yul\":17856:17949   */\n      tag_539\n        /* \"#utility.yul\":17945:17948   */\n      dup3\n        /* \"#utility.yul\":17856:17949   */\n      tag_318\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":17974:17976   */\n      0x40\n        /* \"#utility.yul\":17969:17972   */\n      dup3\n        /* \"#utility.yul\":17965:17977   */\n      add\n        /* \"#utility.yul\":17958:17977   */\n      swap1\n      pop\n        /* \"#utility.yul\":17617:17983   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17989:18408   */\n    tag_169:\n        /* \"#utility.yul\":18155:18159   */\n      0x00\n        /* \"#utility.yul\":18193:18195   */\n      0x20\n        /* \"#utility.yul\":18182:18191   */\n      dup3\n        /* \"#utility.yul\":18178:18196   */\n      add\n        /* \"#utility.yul\":18170:18196   */\n      swap1\n      pop\n        /* \"#utility.yul\":18242:18251   */\n      dup2\n        /* \"#utility.yul\":18236:18240   */\n      dup2\n        /* \"#utility.yul\":18232:18252   */\n      sub\n        /* \"#utility.yul\":18228:18229   */\n      0x00\n        /* \"#utility.yul\":18217:18226   */\n      dup4\n        /* \"#utility.yul\":18213:18230   */\n      add\n        /* \"#utility.yul\":18206:18253   */\n      mstore\n        /* \"#utility.yul\":18270:18401   */\n      tag_541\n        /* \"#utility.yul\":18396:18400   */\n      dup2\n        /* \"#utility.yul\":18270:18401   */\n      tag_319\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":18262:18401   */\n      swap1\n      pop\n        /* \"#utility.yul\":17989:18408   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18414:18596   */\n    tag_320:\n        /* \"#utility.yul\":18554:18588   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":18550:18551   */\n      0x00\n        /* \"#utility.yul\":18542:18548   */\n      dup3\n        /* \"#utility.yul\":18538:18552   */\n      add\n        /* \"#utility.yul\":18531:18589   */\n      mstore\n        /* \"#utility.yul\":18414:18596   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18602:18968   */\n    tag_321:\n        /* \"#utility.yul\":18744:18747   */\n      0x00\n        /* \"#utility.yul\":18765:18832   */\n      tag_544\n        /* \"#utility.yul\":18829:18831   */\n      0x20\n        /* \"#utility.yul\":18824:18827   */\n      dup4\n        /* \"#utility.yul\":18765:18832   */\n      tag_317\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":18758:18832   */\n      swap2\n      pop\n        /* \"#utility.yul\":18841:18934   */\n      tag_545\n        /* \"#utility.yul\":18930:18933   */\n      dup3\n        /* \"#utility.yul\":18841:18934   */\n      tag_320\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":18959:18961   */\n      0x20\n        /* \"#utility.yul\":18954:18957   */\n      dup3\n        /* \"#utility.yul\":18950:18962   */\n      add\n        /* \"#utility.yul\":18943:18962   */\n      swap1\n      pop\n        /* \"#utility.yul\":18602:18968   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18974:19393   */\n    tag_181:\n        /* \"#utility.yul\":19140:19144   */\n      0x00\n        /* \"#utility.yul\":19178:19180   */\n      0x20\n        /* \"#utility.yul\":19167:19176   */\n      dup3\n        /* \"#utility.yul\":19163:19181   */\n      add\n        /* \"#utility.yul\":19155:19181   */\n      swap1\n      pop\n        /* \"#utility.yul\":19227:19236   */\n      dup2\n        /* \"#utility.yul\":19221:19225   */\n      dup2\n        /* \"#utility.yul\":19217:19237   */\n      sub\n        /* \"#utility.yul\":19213:19214   */\n      0x00\n        /* \"#utility.yul\":19202:19211   */\n      dup4\n        /* \"#utility.yul\":19198:19215   */\n      add\n        /* \"#utility.yul\":19191:19238   */\n      mstore\n        /* \"#utility.yul\":19255:19386   */\n      tag_547\n        /* \"#utility.yul\":19381:19385   */\n      dup2\n        /* \"#utility.yul\":19255:19386   */\n      tag_321\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":19247:19386   */\n      swap1\n      pop\n        /* \"#utility.yul\":18974:19393   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19399:19516   */\n    tag_322:\n        /* \"#utility.yul\":19508:19509   */\n      0x00\n        /* \"#utility.yul\":19505:19506   */\n      dup1\n        /* \"#utility.yul\":19498:19510   */\n      revert\n        /* \"#utility.yul\":19522:19639   */\n    tag_323:\n        /* \"#utility.yul\":19631:19632   */\n      0x00\n        /* \"#utility.yul\":19628:19629   */\n      dup1\n        /* \"#utility.yul\":19621:19633   */\n      revert\n        /* \"#utility.yul\":19645:19762   */\n    tag_324:\n        /* \"#utility.yul\":19754:19755   */\n      0x00\n        /* \"#utility.yul\":19751:19752   */\n      dup1\n        /* \"#utility.yul\":19744:19756   */\n      revert\n        /* \"#utility.yul\":19768:20492   */\n    tag_185:\n        /* \"#utility.yul\":19845:19849   */\n      0x00\n        /* \"#utility.yul\":19851:19857   */\n      dup1\n        /* \"#utility.yul\":19907:19918   */\n      dup4\n        /* \"#utility.yul\":19894:19919   */\n      calldataload\n        /* \"#utility.yul\":20007:20008   */\n      0x01\n        /* \"#utility.yul\":20001:20005   */\n      0x20\n        /* \"#utility.yul\":19997:20009   */\n      sub\n        /* \"#utility.yul\":19986:19994   */\n      dup5\n        /* \"#utility.yul\":19970:19984   */\n      calldatasize\n        /* \"#utility.yul\":19966:19995   */\n      sub\n        /* \"#utility.yul\":19962:20010   */\n      sub\n        /* \"#utility.yul\":19942:19960   */\n      dup2\n        /* \"#utility.yul\":19938:20011   */\n      slt\n        /* \"#utility.yul\":19928:20096   */\n      tag_552\n      jumpi\n        /* \"#utility.yul\":20015:20094   */\n      tag_553\n      tag_322\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":19928:20096   */\n    tag_552:\n        /* \"#utility.yul\":20127:20145   */\n      dup1\n        /* \"#utility.yul\":20117:20125   */\n      dup5\n        /* \"#utility.yul\":20113:20146   */\n      add\n        /* \"#utility.yul\":20105:20146   */\n      swap3\n      pop\n        /* \"#utility.yul\":20179:20183   */\n      dup3\n        /* \"#utility.yul\":20166:20184   */\n      calldataload\n        /* \"#utility.yul\":20156:20184   */\n      swap2\n      pop\n        /* \"#utility.yul\":20207:20225   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":20199:20205   */\n      dup3\n        /* \"#utility.yul\":20196:20226   */\n      gt\n        /* \"#utility.yul\":20193:20310   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":20229:20308   */\n      tag_555\n      tag_323\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":20193:20310   */\n    tag_554:\n        /* \"#utility.yul\":20337:20339   */\n      0x20\n        /* \"#utility.yul\":20331:20335   */\n      dup4\n        /* \"#utility.yul\":20327:20340   */\n      add\n        /* \"#utility.yul\":20319:20340   */\n      swap3\n      pop\n        /* \"#utility.yul\":20394:20398   */\n      0x01\n        /* \"#utility.yul\":20386:20392   */\n      dup3\n        /* \"#utility.yul\":20382:20399   */\n      mul\n        /* \"#utility.yul\":20366:20380   */\n      calldatasize\n        /* \"#utility.yul\":20362:20400   */\n      sub\n        /* \"#utility.yul\":20356:20360   */\n      dup4\n        /* \"#utility.yul\":20352:20401   */\n      sgt\n        /* \"#utility.yul\":20349:20485   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":20404:20483   */\n      tag_557\n      tag_324\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":20349:20485   */\n    tag_556:\n        /* \"#utility.yul\":19858:20492   */\n      pop\n        /* \"#utility.yul\":19768:20492   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20498:20669   */\n    tag_325:\n        /* \"#utility.yul\":20638:20661   */\n      0x53656e646572206e6f7420456e747279506f696e740000000000000000000000\n        /* \"#utility.yul\":20634:20635   */\n      0x00\n        /* \"#utility.yul\":20626:20632   */\n      dup3\n        /* \"#utility.yul\":20622:20636   */\n      add\n        /* \"#utility.yul\":20615:20662   */\n      mstore\n        /* \"#utility.yul\":20498:20669   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20675:21041   */\n    tag_326:\n        /* \"#utility.yul\":20817:20820   */\n      0x00\n        /* \"#utility.yul\":20838:20905   */\n      tag_560\n        /* \"#utility.yul\":20902:20904   */\n      0x15\n        /* \"#utility.yul\":20897:20900   */\n      dup4\n        /* \"#utility.yul\":20838:20905   */\n      tag_317\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":20831:20905   */\n      swap2\n      pop\n        /* \"#utility.yul\":20914:21007   */\n      tag_561\n        /* \"#utility.yul\":21003:21006   */\n      dup3\n        /* \"#utility.yul\":20914:21007   */\n      tag_325\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":21032:21034   */\n      0x20\n        /* \"#utility.yul\":21027:21030   */\n      dup3\n        /* \"#utility.yul\":21023:21035   */\n      add\n        /* \"#utility.yul\":21016:21035   */\n      swap1\n      pop\n        /* \"#utility.yul\":20675:21041   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21047:21466   */\n    tag_190:\n        /* \"#utility.yul\":21213:21217   */\n      0x00\n        /* \"#utility.yul\":21251:21253   */\n      0x20\n        /* \"#utility.yul\":21240:21249   */\n      dup3\n        /* \"#utility.yul\":21236:21254   */\n      add\n        /* \"#utility.yul\":21228:21254   */\n      swap1\n      pop\n        /* \"#utility.yul\":21300:21309   */\n      dup2\n        /* \"#utility.yul\":21294:21298   */\n      dup2\n        /* \"#utility.yul\":21290:21310   */\n      sub\n        /* \"#utility.yul\":21286:21287   */\n      0x00\n        /* \"#utility.yul\":21275:21284   */\n      dup4\n        /* \"#utility.yul\":21271:21288   */\n      add\n        /* \"#utility.yul\":21264:21311   */\n      mstore\n        /* \"#utility.yul\":21328:21459   */\n      tag_563\n        /* \"#utility.yul\":21454:21458   */\n      dup2\n        /* \"#utility.yul\":21328:21459   */\n      tag_326\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":21320:21459   */\n      swap1\n      pop\n        /* \"#utility.yul\":21047:21466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21472:21635   */\n    tag_327:\n        /* \"#utility.yul\":21612:21627   */\n      0x6d757374206f7665727269646500000000000000000000000000000000000000\n        /* \"#utility.yul\":21608:21609   */\n      0x00\n        /* \"#utility.yul\":21600:21606   */\n      dup3\n        /* \"#utility.yul\":21596:21610   */\n      add\n        /* \"#utility.yul\":21589:21628   */\n      mstore\n        /* \"#utility.yul\":21472:21635   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21641:22007   */\n    tag_328:\n        /* \"#utility.yul\":21783:21786   */\n      0x00\n        /* \"#utility.yul\":21804:21871   */\n      tag_566\n        /* \"#utility.yul\":21868:21870   */\n      0x0d\n        /* \"#utility.yul\":21863:21866   */\n      dup4\n        /* \"#utility.yul\":21804:21871   */\n      tag_317\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":21797:21871   */\n      swap2\n      pop\n        /* \"#utility.yul\":21880:21973   */\n      tag_567\n        /* \"#utility.yul\":21969:21972   */\n      dup3\n        /* \"#utility.yul\":21880:21973   */\n      tag_327\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":21998:22000   */\n      0x20\n        /* \"#utility.yul\":21993:21996   */\n      dup3\n        /* \"#utility.yul\":21989:22001   */\n      add\n        /* \"#utility.yul\":21982:22001   */\n      swap1\n      pop\n        /* \"#utility.yul\":21641:22007   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22013:22432   */\n    tag_193:\n        /* \"#utility.yul\":22179:22183   */\n      0x00\n        /* \"#utility.yul\":22217:22219   */\n      0x20\n        /* \"#utility.yul\":22206:22215   */\n      dup3\n        /* \"#utility.yul\":22202:22220   */\n      add\n        /* \"#utility.yul\":22194:22220   */\n      swap1\n      pop\n        /* \"#utility.yul\":22266:22275   */\n      dup2\n        /* \"#utility.yul\":22260:22264   */\n      dup2\n        /* \"#utility.yul\":22256:22276   */\n      sub\n        /* \"#utility.yul\":22252:22253   */\n      0x00\n        /* \"#utility.yul\":22241:22250   */\n      dup4\n        /* \"#utility.yul\":22237:22254   */\n      add\n        /* \"#utility.yul\":22230:22277   */\n      mstore\n        /* \"#utility.yul\":22294:22425   */\n      tag_569\n        /* \"#utility.yul\":22420:22424   */\n      dup2\n        /* \"#utility.yul\":22294:22425   */\n      tag_328\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":22286:22425   */\n      swap1\n      pop\n        /* \"#utility.yul\":22013:22432   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22438:22689   */\n    tag_329:\n        /* \"#utility.yul\":22578:22612   */\n      0x566572696679696e675061796d61737465723a20696e76616c6964207369676e\n        /* \"#utility.yul\":22574:22575   */\n      0x00\n        /* \"#utility.yul\":22566:22572   */\n      dup3\n        /* \"#utility.yul\":22562:22576   */\n      add\n        /* \"#utility.yul\":22555:22613   */\n      mstore\n        /* \"#utility.yul\":22647:22681   */\n      0x6174757265206c656e67746820696e207061796d6173746572416e6444617461\n        /* \"#utility.yul\":22642:22644   */\n      0x20\n        /* \"#utility.yul\":22634:22640   */\n      dup3\n        /* \"#utility.yul\":22630:22645   */\n      add\n        /* \"#utility.yul\":22623:22682   */\n      mstore\n        /* \"#utility.yul\":22438:22689   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22695:23061   */\n    tag_330:\n        /* \"#utility.yul\":22837:22840   */\n      0x00\n        /* \"#utility.yul\":22858:22925   */\n      tag_572\n        /* \"#utility.yul\":22922:22924   */\n      0x40\n        /* \"#utility.yul\":22917:22920   */\n      dup4\n        /* \"#utility.yul\":22858:22925   */\n      tag_317\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":22851:22925   */\n      swap2\n      pop\n        /* \"#utility.yul\":22934:23027   */\n      tag_573\n        /* \"#utility.yul\":23023:23026   */\n      dup3\n        /* \"#utility.yul\":22934:23027   */\n      tag_329\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":23052:23054   */\n      0x40\n        /* \"#utility.yul\":23047:23050   */\n      dup3\n        /* \"#utility.yul\":23043:23055   */\n      add\n        /* \"#utility.yul\":23036:23055   */\n      swap1\n      pop\n        /* \"#utility.yul\":22695:23061   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23067:23486   */\n    tag_200:\n        /* \"#utility.yul\":23233:23237   */\n      0x00\n        /* \"#utility.yul\":23271:23273   */\n      0x20\n        /* \"#utility.yul\":23260:23269   */\n      dup3\n        /* \"#utility.yul\":23256:23274   */\n      add\n        /* \"#utility.yul\":23248:23274   */\n      swap1\n      pop\n        /* \"#utility.yul\":23320:23329   */\n      dup2\n        /* \"#utility.yul\":23314:23318   */\n      dup2\n        /* \"#utility.yul\":23310:23330   */\n      sub\n        /* \"#utility.yul\":23306:23307   */\n      0x00\n        /* \"#utility.yul\":23295:23304   */\n      dup4\n        /* \"#utility.yul\":23291:23308   */\n      add\n        /* \"#utility.yul\":23284:23331   */\n      mstore\n        /* \"#utility.yul\":23348:23479   */\n      tag_575\n        /* \"#utility.yul\":23474:23478   */\n      dup2\n        /* \"#utility.yul\":23348:23479   */\n      tag_330\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":23340:23479   */\n      swap1\n      pop\n        /* \"#utility.yul\":23067:23486   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23492:23672   */\n    tag_331:\n        /* \"#utility.yul\":23540:23617   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23537:23538   */\n      0x00\n        /* \"#utility.yul\":23530:23618   */\n      mstore\n        /* \"#utility.yul\":23637:23641   */\n      0x11\n        /* \"#utility.yul\":23634:23635   */\n      0x04\n        /* \"#utility.yul\":23627:23642   */\n      mstore\n        /* \"#utility.yul\":23661:23665   */\n      0x24\n        /* \"#utility.yul\":23658:23659   */\n      0x00\n        /* \"#utility.yul\":23651:23666   */\n      revert\n        /* \"#utility.yul\":23678:23911   */\n    tag_206:\n        /* \"#utility.yul\":23717:23720   */\n      0x00\n        /* \"#utility.yul\":23740:23764   */\n      tag_578\n        /* \"#utility.yul\":23758:23763   */\n      dup3\n        /* \"#utility.yul\":23740:23764   */\n      tag_276\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":23731:23764   */\n      swap2\n      pop\n        /* \"#utility.yul\":23786:23852   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23779:23784   */\n      dup3\n        /* \"#utility.yul\":23776:23853   */\n      sub\n        /* \"#utility.yul\":23773:23876   */\n      tag_579\n      jumpi\n        /* \"#utility.yul\":23856:23874   */\n      tag_580\n      tag_331\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":23773:23876   */\n    tag_579:\n        /* \"#utility.yul\":23903:23904   */\n      0x01\n        /* \"#utility.yul\":23896:23901   */\n      dup3\n        /* \"#utility.yul\":23892:23905   */\n      add\n        /* \"#utility.yul\":23885:23905   */\n      swap1\n      pop\n        /* \"#utility.yul\":23678:23911   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23917:24097   */\n    tag_231:\n        /* \"#utility.yul\":23965:24042   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23962:23963   */\n      0x00\n        /* \"#utility.yul\":23955:24043   */\n      mstore\n        /* \"#utility.yul\":24062:24066   */\n      0x21\n        /* \"#utility.yul\":24059:24060   */\n      0x04\n        /* \"#utility.yul\":24052:24067   */\n      mstore\n        /* \"#utility.yul\":24086:24090   */\n      0x24\n        /* \"#utility.yul\":24083:24084   */\n      0x00\n        /* \"#utility.yul\":24076:24091   */\n      revert\n        /* \"#utility.yul\":24103:24277   */\n    tag_332:\n        /* \"#utility.yul\":24243:24269   */\n      0x45434453413a20696e76616c6964207369676e61747572650000000000000000\n        /* \"#utility.yul\":24239:24240   */\n      0x00\n        /* \"#utility.yul\":24231:24237   */\n      dup3\n        /* \"#utility.yul\":24227:24241   */\n      add\n        /* \"#utility.yul\":24220:24270   */\n      mstore\n        /* \"#utility.yul\":24103:24277   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24283:24649   */\n    tag_333:\n        /* \"#utility.yul\":24425:24428   */\n      0x00\n        /* \"#utility.yul\":24446:24513   */\n      tag_584\n        /* \"#utility.yul\":24510:24512   */\n      0x18\n        /* \"#utility.yul\":24505:24508   */\n      dup4\n        /* \"#utility.yul\":24446:24513   */\n      tag_317\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":24439:24513   */\n      swap2\n      pop\n        /* \"#utility.yul\":24522:24615   */\n      tag_585\n        /* \"#utility.yul\":24611:24614   */\n      dup3\n        /* \"#utility.yul\":24522:24615   */\n      tag_332\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":24640:24642   */\n      0x20\n        /* \"#utility.yul\":24635:24638   */\n      dup3\n        /* \"#utility.yul\":24631:24643   */\n      add\n        /* \"#utility.yul\":24624:24643   */\n      swap1\n      pop\n        /* \"#utility.yul\":24283:24649   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24655:25074   */\n    tag_242:\n        /* \"#utility.yul\":24821:24825   */\n      0x00\n        /* \"#utility.yul\":24859:24861   */\n      0x20\n        /* \"#utility.yul\":24848:24857   */\n      dup3\n        /* \"#utility.yul\":24844:24862   */\n      add\n        /* \"#utility.yul\":24836:24862   */\n      swap1\n      pop\n        /* \"#utility.yul\":24908:24917   */\n      dup2\n        /* \"#utility.yul\":24902:24906   */\n      dup2\n        /* \"#utility.yul\":24898:24918   */\n      sub\n        /* \"#utility.yul\":24894:24895   */\n      0x00\n        /* \"#utility.yul\":24883:24892   */\n      dup4\n        /* \"#utility.yul\":24879:24896   */\n      add\n        /* \"#utility.yul\":24872:24919   */\n      mstore\n        /* \"#utility.yul\":24936:25067   */\n      tag_587\n        /* \"#utility.yul\":25062:25066   */\n      dup2\n        /* \"#utility.yul\":24936:25067   */\n      tag_333\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":24928:25067   */\n      swap1\n      pop\n        /* \"#utility.yul\":24655:25074   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25080:25261   */\n    tag_334:\n        /* \"#utility.yul\":25220:25253   */\n      0x45434453413a20696e76616c6964207369676e6174757265206c656e67746800\n        /* \"#utility.yul\":25216:25217   */\n      0x00\n        /* \"#utility.yul\":25208:25214   */\n      dup3\n        /* \"#utility.yul\":25204:25218   */\n      add\n        /* \"#utility.yul\":25197:25254   */\n      mstore\n        /* \"#utility.yul\":25080:25261   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25267:25633   */\n    tag_335:\n        /* \"#utility.yul\":25409:25412   */\n      0x00\n        /* \"#utility.yul\":25430:25497   */\n      tag_590\n        /* \"#utility.yul\":25494:25496   */\n      0x1f\n        /* \"#utility.yul\":25489:25492   */\n      dup4\n        /* \"#utility.yul\":25430:25497   */\n      tag_317\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":25423:25497   */\n      swap2\n      pop\n        /* \"#utility.yul\":25506:25599   */\n      tag_591\n        /* \"#utility.yul\":25595:25598   */\n      dup3\n        /* \"#utility.yul\":25506:25599   */\n      tag_334\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":25624:25626   */\n      0x20\n        /* \"#utility.yul\":25619:25622   */\n      dup3\n        /* \"#utility.yul\":25615:25627   */\n      add\n        /* \"#utility.yul\":25608:25627   */\n      swap1\n      pop\n        /* \"#utility.yul\":25267:25633   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25639:26058   */\n    tag_250:\n        /* \"#utility.yul\":25805:25809   */\n      0x00\n        /* \"#utility.yul\":25843:25845   */\n      0x20\n        /* \"#utility.yul\":25832:25841   */\n      dup3\n        /* \"#utility.yul\":25828:25846   */\n      add\n        /* \"#utility.yul\":25820:25846   */\n      swap1\n      pop\n        /* \"#utility.yul\":25892:25901   */\n      dup2\n        /* \"#utility.yul\":25886:25890   */\n      dup2\n        /* \"#utility.yul\":25882:25902   */\n      sub\n        /* \"#utility.yul\":25878:25879   */\n      0x00\n        /* \"#utility.yul\":25867:25876   */\n      dup4\n        /* \"#utility.yul\":25863:25880   */\n      add\n        /* \"#utility.yul\":25856:25903   */\n      mstore\n        /* \"#utility.yul\":25920:26051   */\n      tag_593\n        /* \"#utility.yul\":26046:26050   */\n      dup2\n        /* \"#utility.yul\":25920:26051   */\n      tag_335\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":25912:26051   */\n      swap1\n      pop\n        /* \"#utility.yul\":25639:26058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26064:26285   */\n    tag_336:\n        /* \"#utility.yul\":26204:26238   */\n      0x45434453413a20696e76616c6964207369676e6174757265202773272076616c\n        /* \"#utility.yul\":26200:26201   */\n      0x00\n        /* \"#utility.yul\":26192:26198   */\n      dup3\n        /* \"#utility.yul\":26188:26202   */\n      add\n        /* \"#utility.yul\":26181:26239   */\n      mstore\n        /* \"#utility.yul\":26273:26277   */\n      0x7565000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26268:26270   */\n      0x20\n        /* \"#utility.yul\":26260:26266   */\n      dup3\n        /* \"#utility.yul\":26256:26271   */\n      add\n        /* \"#utility.yul\":26249:26278   */\n      mstore\n        /* \"#utility.yul\":26064:26285   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26291:26657   */\n    tag_337:\n        /* \"#utility.yul\":26433:26436   */\n      0x00\n        /* \"#utility.yul\":26454:26521   */\n      tag_596\n        /* \"#utility.yul\":26518:26520   */\n      0x22\n        /* \"#utility.yul\":26513:26516   */\n      dup4\n        /* \"#utility.yul\":26454:26521   */\n      tag_317\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":26447:26521   */\n      swap2\n      pop\n        /* \"#utility.yul\":26530:26623   */\n      tag_597\n        /* \"#utility.yul\":26619:26622   */\n      dup3\n        /* \"#utility.yul\":26530:26623   */\n      tag_336\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":26648:26650   */\n      0x40\n        /* \"#utility.yul\":26643:26646   */\n      dup3\n        /* \"#utility.yul\":26639:26651   */\n      add\n        /* \"#utility.yul\":26632:26651   */\n      swap1\n      pop\n        /* \"#utility.yul\":26291:26657   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26663:27082   */\n    tag_258:\n        /* \"#utility.yul\":26829:26833   */\n      0x00\n        /* \"#utility.yul\":26867:26869   */\n      0x20\n        /* \"#utility.yul\":26856:26865   */\n      dup3\n        /* \"#utility.yul\":26852:26870   */\n      add\n        /* \"#utility.yul\":26844:26870   */\n      swap1\n      pop\n        /* \"#utility.yul\":26916:26925   */\n      dup2\n        /* \"#utility.yul\":26910:26914   */\n      dup2\n        /* \"#utility.yul\":26906:26926   */\n      sub\n        /* \"#utility.yul\":26902:26903   */\n      0x00\n        /* \"#utility.yul\":26891:26900   */\n      dup4\n        /* \"#utility.yul\":26887:26904   */\n      add\n        /* \"#utility.yul\":26880:26927   */\n      mstore\n        /* \"#utility.yul\":26944:27075   */\n      tag_599\n        /* \"#utility.yul\":27070:27074   */\n      dup2\n        /* \"#utility.yul\":26944:27075   */\n      tag_337\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":26936:27075   */\n      swap1\n      pop\n        /* \"#utility.yul\":26663:27082   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27088:27174   */\n    tag_338:\n        /* \"#utility.yul\":27123:27130   */\n      0x00\n        /* \"#utility.yul\":27163:27167   */\n      0xff\n        /* \"#utility.yul\":27156:27161   */\n      dup3\n        /* \"#utility.yul\":27152:27168   */\n      and\n        /* \"#utility.yul\":27141:27168   */\n      swap1\n      pop\n        /* \"#utility.yul\":27088:27174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27180:27292   */\n    tag_339:\n        /* \"#utility.yul\":27263:27285   */\n      tag_602\n        /* \"#utility.yul\":27279:27284   */\n      dup2\n        /* \"#utility.yul\":27263:27285   */\n      tag_338\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":27258:27261   */\n      dup3\n        /* \"#utility.yul\":27251:27286   */\n      mstore\n        /* \"#utility.yul\":27180:27292   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27298:27843   */\n    tag_262:\n        /* \"#utility.yul\":27471:27475   */\n      0x00\n        /* \"#utility.yul\":27509:27512   */\n      0x80\n        /* \"#utility.yul\":27498:27507   */\n      dup3\n        /* \"#utility.yul\":27494:27513   */\n      add\n        /* \"#utility.yul\":27486:27513   */\n      swap1\n      pop\n        /* \"#utility.yul\":27523:27594   */\n      tag_604\n        /* \"#utility.yul\":27591:27592   */\n      0x00\n        /* \"#utility.yul\":27580:27589   */\n      dup4\n        /* \"#utility.yul\":27576:27593   */\n      add\n        /* \"#utility.yul\":27567:27573   */\n      dup8\n        /* \"#utility.yul\":27523:27594   */\n      tag_296\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":27604:27672   */\n      tag_605\n        /* \"#utility.yul\":27668:27670   */\n      0x20\n        /* \"#utility.yul\":27657:27666   */\n      dup4\n        /* \"#utility.yul\":27653:27671   */\n      add\n        /* \"#utility.yul\":27644:27650   */\n      dup7\n        /* \"#utility.yul\":27604:27672   */\n      tag_339\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":27682:27754   */\n      tag_606\n        /* \"#utility.yul\":27750:27752   */\n      0x40\n        /* \"#utility.yul\":27739:27748   */\n      dup4\n        /* \"#utility.yul\":27735:27753   */\n      add\n        /* \"#utility.yul\":27726:27732   */\n      dup6\n        /* \"#utility.yul\":27682:27754   */\n      tag_296\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":27764:27836   */\n      tag_607\n        /* \"#utility.yul\":27832:27834   */\n      0x60\n        /* \"#utility.yul\":27821:27830   */\n      dup4\n        /* \"#utility.yul\":27817:27835   */\n      add\n        /* \"#utility.yul\":27808:27814   */\n      dup5\n        /* \"#utility.yul\":27764:27836   */\n      tag_296\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":27298:27843   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220119ea8ec0d636f8697246c1dfd6f969f6623f1c34e05158d6c4fd6ef0d4063ab64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1075": {
									"entryPoint": null,
									"id": 1075,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_24": {
									"entryPoint": null,
									"id": 24,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_2790": {
									"entryPoint": null,
									"id": 2790,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1176": {
									"entryPoint": 201,
									"id": 1176,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1163": {
									"entryPoint": 209,
									"id": 1163,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IEntryPoint_$695_fromMemory": {
									"entryPoint": 508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IEntryPoint_$695t_address_fromMemory": {
									"entryPoint": 580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IEntryPoint_$695": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 405,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IEntryPoint_$695": {
									"entryPoint": 482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1867:15",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:15",
														"type": ""
													}
												],
												"src": "334:126:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:15",
														"type": ""
													}
												],
												"src": "466:96:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "632:51:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "642:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "671:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "653:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "642:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IEntryPoint_$695",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "614:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "624:7:15",
														"type": ""
													}
												],
												"src": "568:115:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "751:98:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "827:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "836:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "839:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "829:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "829:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "829:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "774:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "818:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IEntryPoint_$695",
																					"nodeType": "YulIdentifier",
																					"src": "781:36:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "781:43:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "771:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "771:54:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "764:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "764:62:15"
															},
															"nodeType": "YulIf",
															"src": "761:82:15"
														}
													]
												},
												"name": "validator_revert_t_contract$_IEntryPoint_$695",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "744:5:15",
														"type": ""
													}
												],
												"src": "689:160:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "937:99:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "947:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "956:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "956:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "947:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IEntryPoint_$695",
																	"nodeType": "YulIdentifier",
																	"src": "978:45:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "978:52:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "978:52:15"
														}
													]
												},
												"name": "abi_decode_t_contract$_IEntryPoint_$695_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "915:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "923:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "931:5:15",
														"type": ""
													}
												],
												"src": "855:181:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1085:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1142:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1151:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1154:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1144:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1144:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1144:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1108:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1133:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1115:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1115:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1105:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1105:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1098:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:43:15"
															},
															"nodeType": "YulIf",
															"src": "1095:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:15",
														"type": ""
													}
												],
												"src": "1042:122:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1233:80:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1243:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1258:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1252:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1243:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1301:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1274:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1274:33:15"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1211:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1219:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1227:5:15",
														"type": ""
													}
												],
												"src": "1170:143:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1432:432:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1478:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1480:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1480:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1480:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1453:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1462:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1449:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1449:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1474:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1445:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1445:32:15"
															},
															"nodeType": "YulIf",
															"src": "1442:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "1571:147:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1586:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1600:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1590:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1615:93:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1680:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1691:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1676:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1676:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1700:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IEntryPoint_$695_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1625:50:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1625:83:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1615:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1728:129:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1743:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1757:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1747:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1773:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1819:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1830:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1815:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1815:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1839:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1783:31:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1783:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1773:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IEntryPoint_$695t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1394:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1405:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1417:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1425:6:15",
														"type": ""
													}
												],
												"src": "1319:545:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IEntryPoint_$695(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IEntryPoint_$695(value) {\n        if iszero(eq(value, cleanup_t_contract$_IEntryPoint_$695(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IEntryPoint_$695_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IEntryPoint_$695(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IEntryPoint_$695t_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IEntryPoint_$695_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x21D7 CODESIZE SUB DUP1 PUSH3 0x21D7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x244 JUMP JUMPDEST DUP2 PUSH3 0x58 PUSH3 0x4C PUSH3 0xC9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xD1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH3 0x28B JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C7 DUP3 PUSH3 0x19A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1DB DUP3 PUSH3 0x1BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1ED DUP2 PUSH3 0x1CE JUMP JUMPDEST DUP2 EQ PUSH3 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x20D DUP2 PUSH3 0x1E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x21E DUP2 PUSH3 0x1BA JUMP JUMPDEST DUP2 EQ PUSH3 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x23E DUP2 PUSH3 0x213 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x25E JUMPI PUSH3 0x25D PUSH3 0x195 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x26E DUP6 DUP3 DUP7 ADD PUSH3 0x1FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x281 DUP6 DUP3 DUP7 ADD PUSH3 0x22D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1EEE PUSH3 0x2E9 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x4C6 ADD MSTORE PUSH2 0xD01 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x39E ADD MSTORE DUP2 DUP2 PUSH2 0x435 ADD MSTORE DUP2 DUP2 PUSH2 0x633 ADD MSTORE DUP2 DUP2 PUSH2 0x65F ADD MSTORE DUP2 DUP2 PUSH2 0x6E9 ADD MSTORE DUP2 DUP2 PUSH2 0x779 ADD MSTORE DUP2 DUP2 PUSH2 0x818 ADD MSTORE PUSH2 0xAE0 ADD MSTORE PUSH2 0x1EEE PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA9A23409 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC399EC88 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xF465C77E EQ PUSH2 0x356 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0xA9A23409 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xBB9FE6BF EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x2CF JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x94D4AD60 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x94E1FC19 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x9C90B443 EQ PUSH2 0x227 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x396CB60 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x205C2878 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x23D9AC9B EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x168 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x1112 JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x42B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x152 PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x4E8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1411 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x155C JUMP JUMPDEST PUSH2 0x617 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A2 PUSH2 0x631 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x162F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x655 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x164A JUMP JUMPDEST PUSH2 0x6DF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0x775 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32B PUSH2 0x816 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST PUSH2 0x8A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP3 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39C PUSH2 0x94A JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x396CB60 CALLVALUE DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x17BF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x423 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x433 PUSH2 0x94A JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x205C2878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48E SWAP3 SWAP2 SWAP1 PUSH2 0x17E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x4F0 PUSH2 0x94A JUMP JUMPDEST PUSH2 0x4FA PUSH1 0x0 PUSH2 0x9C8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP6 DUP6 PUSH1 0x14 SWAP1 PUSH1 0x54 SWAP3 PUSH2 0x53F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x181C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x54C SWAP2 SWAP1 PUSH2 0x1857 JUMP JUMPDEST DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP DUP6 DUP6 PUSH1 0x54 SWAP1 DUP1 SWAP3 PUSH2 0x567 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x181C JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57F DUP5 PUSH2 0xA8C JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x1 PUSH1 0x0 PUSH2 0x58E DUP10 PUSH2 0xACE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5E0 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x61F PUSH2 0xADE JUMP JUMPDEST PUSH2 0x62B DUP5 DUP5 DUP5 DUP5 PUSH2 0xB6E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x65D PUSH2 0x94A JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBB9FE6BF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6E7 PUSH2 0x94A JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC23A5CEA DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x740 SWAP2 SWAP1 PUSH2 0x18FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x75A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x76E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x811 SWAP2 SWAP1 PUSH2 0x192F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB760FAF9 CALLVALUE ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x870 SWAP2 SWAP1 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x89D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8AC PUSH2 0x94A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x91B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x912 SWAP1 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x924 DUP2 PUSH2 0x9C8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x933 PUSH2 0xADE JUMP JUMPDEST PUSH2 0x93E DUP6 DUP6 DUP6 PUSH2 0xBA9 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x952 PUSH2 0xD95 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x970 PUSH2 0x4FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BD SWAP1 PUSH2 0x1A4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x0 DUP4 DUP1 PUSH2 0x120 ADD SWAP1 PUSH2 0xAA2 SWAP2 SWAP1 PUSH2 0x1A7A JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH1 0x20 DUP2 DUP5 SUB SUB PUSH1 0x40 MLOAD SWAP5 POP PUSH1 0x20 DUP2 ADD DUP6 ADD PUSH1 0x40 MSTORE DUP1 DUP6 MSTORE DUP1 DUP3 PUSH1 0x20 DUP8 ADD CALLDATACOPY POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 CALLDATALOAD SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB63 SWAP1 PUSH2 0x1B29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA0 SWAP1 PUSH2 0x1B95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP1 CALLDATASIZE PUSH1 0x0 PUSH2 0xBCB DUP10 DUP1 PUSH2 0x120 ADD SWAP1 PUSH2 0xBC6 SWAP2 SWAP1 PUSH2 0x1A7A JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x40 DUP3 DUP3 SWAP1 POP EQ DUP1 PUSH2 0xBE8 JUMPI POP PUSH1 0x41 DUP3 DUP3 SWAP1 POP EQ JUMPDEST PUSH2 0xC27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1E SWAP1 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC3C PUSH2 0xC37 DUP12 DUP8 DUP8 PUSH2 0x574 JUMP JUMPDEST PUSH2 0xD9D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 PUSH2 0xC4B DUP13 PUSH2 0xACE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xC96 SWAP1 PUSH2 0x1C76 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xCE9 DUP2 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xDD3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD66 JUMPI PUSH2 0xD47 PUSH1 0x1 DUP7 DUP7 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 SWAP7 POP SWAP7 POP POP POP POP POP POP PUSH2 0xD8D JUMP JUMPDEST PUSH2 0xD72 PUSH1 0x0 DUP7 DUP7 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 SWAP7 POP SWAP7 POP POP POP POP POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xDE2 DUP6 DUP6 PUSH2 0xE33 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xDEF DUP2 PUSH2 0xE84 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD0 DUP3 PUSH6 0xFFFFFFFFFFFF AND SWAP1 SHL PUSH1 0xA0 DUP5 PUSH6 0xFFFFFFFFFFFF AND SWAP1 SHL DUP6 PUSH2 0xE22 JUMPI PUSH1 0x0 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND OR OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x41 DUP4 MLOAD SUB PUSH2 0xE74 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0xE68 DUP8 DUP3 DUP6 DUP6 PUSH2 0xFEA JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE98 JUMPI PUSH2 0xE97 PUSH2 0x1CBE JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xEAB JUMPI PUSH2 0xEAA PUSH2 0x1CBE JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0xFE7 JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xEC5 JUMPI PUSH2 0xEC4 PUSH2 0x1CBE JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xED8 JUMPI PUSH2 0xED7 PUSH2 0x1CBE JUMP JUMPDEST JUMPDEST SUB PUSH2 0xF18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0F SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF2C JUMPI PUSH2 0xF2B PUSH2 0x1CBE JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF3F JUMPI PUSH2 0xF3E PUSH2 0x1CBE JUMP JUMPDEST JUMPDEST SUB PUSH2 0xF7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF76 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF93 JUMPI PUSH2 0xF92 PUSH2 0x1CBE JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xFA6 JUMPI PUSH2 0xFA5 PUSH2 0x1CBE JUMP JUMPDEST JUMPDEST SUB PUSH2 0xFE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDD SWAP1 PUSH2 0x1E37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1025 JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x104A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E73 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x106C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10BA JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x10C3 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10EF DUP2 PUSH2 0x10D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x10FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x110C DUP2 PUSH2 0x10E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1128 JUMPI PUSH2 0x1127 PUSH2 0x10CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1136 DUP5 DUP3 DUP6 ADD PUSH2 0x10FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x116A DUP3 PUSH2 0x113F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x117A DUP2 PUSH2 0x115F JUMP JUMPDEST DUP2 EQ PUSH2 0x1185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1197 DUP2 PUSH2 0x1171 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B0 DUP2 PUSH2 0x119D JUMP JUMPDEST DUP2 EQ PUSH2 0x11BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11CD DUP2 PUSH2 0x11A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11EA JUMPI PUSH2 0x11E9 PUSH2 0x10CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11F8 DUP6 DUP3 DUP7 ADD PUSH2 0x1188 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1209 DUP6 DUP3 DUP7 ADD PUSH2 0x11BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x121E DUP3 PUSH2 0x113F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x122E DUP2 PUSH2 0x1213 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1249 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1225 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1274 JUMPI PUSH2 0x1273 PUSH2 0x124F JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1291 JUMPI PUSH2 0x1290 PUSH2 0x1254 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x12AD JUMPI PUSH2 0x12AC PUSH2 0x1259 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12CB JUMPI PUSH2 0x12CA PUSH2 0x10CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12E9 JUMPI PUSH2 0x12E8 PUSH2 0x10D1 JUMP JUMPDEST JUMPDEST PUSH2 0x12F5 DUP6 DUP3 DUP7 ADD PUSH2 0x125E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x131C DUP2 PUSH2 0x1301 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x135F DUP4 DUP6 PUSH2 0x1322 JUMP JUMPDEST SWAP4 POP PUSH2 0x136C DUP4 DUP6 DUP5 PUSH2 0x1333 JUMP JUMPDEST PUSH2 0x1375 DUP4 PUSH2 0x1342 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1395 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x13A2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1313 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x13B5 DUP2 DUP5 DUP7 PUSH2 0x1353 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13DC JUMPI PUSH2 0x13DB PUSH2 0x13C0 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13EE DUP2 PUSH2 0x1301 JUMP JUMPDEST DUP2 EQ PUSH2 0x13F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x140B DUP2 PUSH2 0x13E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x142A JUMPI PUSH2 0x1429 PUSH2 0x10CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1448 JUMPI PUSH2 0x1447 PUSH2 0x10D1 JUMP JUMPDEST JUMPDEST PUSH2 0x1454 DUP7 DUP3 DUP8 ADD PUSH2 0x13C5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1465 DUP7 DUP3 DUP8 ADD PUSH2 0x13FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1476 DUP7 DUP3 DUP8 ADD PUSH2 0x13FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1493 DUP2 PUSH2 0x1480 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14AE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x148A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14BD DUP2 PUSH2 0x1213 JUMP JUMPDEST DUP2 EQ PUSH2 0x14C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14DA DUP2 PUSH2 0x14B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14F6 JUMPI PUSH2 0x14F5 PUSH2 0x10CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1504 DUP5 DUP3 DUP6 ADD PUSH2 0x14CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1516 DUP2 PUSH2 0x119D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1531 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x150D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1556 DUP2 PUSH2 0x1537 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1576 JUMPI PUSH2 0x1575 PUSH2 0x10CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1584 DUP8 DUP3 DUP9 ADD PUSH2 0x1547 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15A5 JUMPI PUSH2 0x15A4 PUSH2 0x10D1 JUMP JUMPDEST JUMPDEST PUSH2 0x15B1 DUP8 DUP3 DUP9 ADD PUSH2 0x125E JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x40 PUSH2 0x15C4 DUP8 DUP3 DUP9 ADD PUSH2 0x11BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F5 PUSH2 0x15F0 PUSH2 0x15EB DUP5 PUSH2 0x113F JUMP JUMPDEST PUSH2 0x15D0 JUMP JUMPDEST PUSH2 0x113F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1607 DUP3 PUSH2 0x15DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1619 DUP3 PUSH2 0x15FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1629 DUP2 PUSH2 0x160E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1644 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1620 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1660 JUMPI PUSH2 0x165F PUSH2 0x10CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x166E DUP5 DUP3 DUP6 ADD PUSH2 0x1188 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1680 DUP2 PUSH2 0x1480 JUMP JUMPDEST DUP2 EQ PUSH2 0x168B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x169D DUP2 PUSH2 0x1677 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16BC JUMPI PUSH2 0x16BB PUSH2 0x10CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16DA JUMPI PUSH2 0x16D9 PUSH2 0x10D1 JUMP JUMPDEST JUMPDEST PUSH2 0x16E6 DUP7 DUP3 DUP8 ADD PUSH2 0x13C5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16F7 DUP7 DUP3 DUP8 ADD PUSH2 0x168E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1708 DUP7 DUP3 DUP8 ADD PUSH2 0x11BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x173B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1720 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1752 DUP3 PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x175C DUP2 DUP6 PUSH2 0x1322 JUMP JUMPDEST SWAP4 POP PUSH2 0x176C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x171D JUMP JUMPDEST PUSH2 0x1775 DUP2 PUSH2 0x1342 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x179A DUP2 DUP6 PUSH2 0x1747 JUMP JUMPDEST SWAP1 POP PUSH2 0x17A9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x150D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x17B9 DUP2 PUSH2 0x10D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E3 DUP2 PUSH2 0x115F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17FE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x17DA JUMP JUMPDEST PUSH2 0x180B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x150D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x1830 JUMPI PUSH2 0x182F PUSH2 0x1812 JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x1841 JUMPI PUSH2 0x1840 PUSH2 0x1817 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x186E JUMPI PUSH2 0x186D PUSH2 0x10CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x187C DUP6 DUP3 DUP7 ADD PUSH2 0x13FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x188D DUP6 DUP3 DUP7 ADD PUSH2 0x13FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18B1 DUP2 DUP10 PUSH2 0x1747 JUMP JUMPDEST SWAP1 POP PUSH2 0x18C0 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x150D JUMP JUMPDEST PUSH2 0x18CD PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1225 JUMP JUMPDEST PUSH2 0x18DA PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x150D JUMP JUMPDEST PUSH2 0x18E7 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x18F4 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1313 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1914 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1929 DUP2 PUSH2 0x11A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1945 JUMPI PUSH2 0x1944 PUSH2 0x10CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1953 DUP5 DUP3 DUP6 ADD PUSH2 0x191A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C9 PUSH1 0x26 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x19D4 DUP3 PUSH2 0x196D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19F8 DUP2 PUSH2 0x19BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A35 PUSH1 0x20 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A40 DUP3 PUSH2 0x19FF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A64 DUP2 PUSH2 0x1A28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x1A97 JUMPI PUSH2 0x1A96 PUSH2 0x1A6B JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1AB9 JUMPI PUSH2 0x1AB8 PUSH2 0x1A70 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x1AD5 JUMPI PUSH2 0x1AD4 PUSH2 0x1A75 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E646572206E6F7420456E747279506F696E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B13 PUSH1 0x15 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1B1E DUP3 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B42 DUP2 PUSH2 0x1B06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D757374206F7665727269646500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B7F PUSH1 0xD DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8A DUP3 PUSH2 0x1B49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BAE DUP2 PUSH2 0x1B72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x566572696679696E675061796D61737465723A20696E76616C6964207369676E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6174757265206C656E67746820696E207061796D6173746572416E6444617461 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C11 PUSH1 0x40 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C1C DUP3 PUSH2 0x1BB5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C40 DUP2 PUSH2 0x1C04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C81 DUP3 PUSH2 0x119D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1CB3 JUMPI PUSH2 0x1CB2 PUSH2 0x1C47 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D23 PUSH1 0x18 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2E DUP3 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D52 DUP2 PUSH2 0x1D16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8F PUSH1 0x1F DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D9A DUP3 PUSH2 0x1D59 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DBE DUP2 PUSH2 0x1D82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E21 PUSH1 0x22 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1E2C DUP3 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E50 DUP2 PUSH2 0x1E14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E6D DUP2 PUSH2 0x1E57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1E88 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x148A JUMP JUMPDEST PUSH2 0x1E95 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1E64 JUMP JUMPDEST PUSH2 0x1EA2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x148A JUMP JUMPDEST PUSH2 0x1EAF PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x148A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT SWAP15 0xA8 0xEC 0xD PUSH4 0x6F869724 PUSH13 0x1DFD6F969F6623F1C34E05158D PUSH13 0x4FD6EF0D4063AB64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "751:4199:14:-:0;;;1043:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1120:11;936:32:8;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;577:11:0;564:24;;;;;;;;;;517:78;1161:16:14::1;1143:34;;;;;;;;::::0;::::1;1043:141:::0;;751:4199;;640:96:9;693:7;719:10;712:17;;640:96;:::o;2426:187:8:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;88:117:15:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:115::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;568:115;;;:::o;689:160::-;781:43;818:5;781:43;:::i;:::-;774:5;771:54;761:82;;839:1;836;829:12;761:82;689:160;:::o;855:181::-;931:5;962:6;956:13;947:22;;978:52;1024:5;978:52;:::i;:::-;855:181;;;;:::o;1042:122::-;1115:24;1133:5;1115:24;:::i;:::-;1108:5;1105:35;1095:63;;1154:1;1151;1144:12;1095:63;1042:122;:::o;1170:143::-;1227:5;1258:6;1252:13;1243:22;;1274:33;1301:5;1274:33;:::i;:::-;1170:143;;;;:::o;1319:545::-;1417:6;1425;1474:2;1462:9;1453:7;1449:23;1445:32;1442:119;;;1480:79;;:::i;:::-;1442:119;1600:1;1625:83;1700:7;1691:6;1680:9;1676:22;1625:83;:::i;:::-;1615:93;;1571:147;1757:2;1783:64;1839:7;1830:6;1819:9;1815:22;1783:64;:::i;:::-;1773:74;;1728:129;1319:545;;;;;:::o;751:4199:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_1106": {
									"entryPoint": 2378,
									"id": 1106,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1176": {
									"entryPoint": 3477,
									"id": 1176,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_packValidationData_447": {
									"entryPoint": 3578,
									"id": 447,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_postOp_107": {
									"entryPoint": 2926,
									"id": 107,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_requireFromEntryPoint_218": {
									"entryPoint": 2782,
									"id": 218,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_throwError_1469": {
									"entryPoint": 3716,
									"id": 1469,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_1163": {
									"entryPoint": 2504,
									"id": 1163,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_validatePaymasterUserOp_2933": {
									"entryPoint": 2985,
									"id": 2933,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@addStake_160": {
									"entryPoint": 916,
									"id": 160,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deposit_124": {
									"entryPoint": 2070,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@entryPoint_13": {
									"entryPoint": 1585,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getDeposit_175": {
									"entryPoint": 1909,
									"id": 175,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getHash_2846": {
									"entryPoint": 1396,
									"id": 2846,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getSender_903": {
									"entryPoint": 2766,
									"id": 903,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_1092": {
									"entryPoint": 1276,
									"id": 1092,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pack_2810": {
									"entryPoint": 2700,
									"id": 2810,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@parsePaymasterAndData_2969": {
									"entryPoint": 1317,
									"id": 2969,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"@postOp_86": {
									"entryPoint": 1559,
									"id": 86,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@recover_1542": {
									"entryPoint": 3539,
									"id": 1542,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceOwnership_1120": {
									"entryPoint": 1256,
									"id": 1120,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@senderNonce_2794": {
									"entryPoint": 1535,
									"id": 2794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@toEthSignedMessageHash_1726": {
									"entryPoint": 3485,
									"id": 1726,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_1143": {
									"entryPoint": 2212,
									"id": 1143,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tryRecover_1515": {
									"entryPoint": 3635,
									"id": 1515,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@tryRecover_1683": {
									"entryPoint": 4074,
									"id": 1683,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"@unlockStake_187": {
									"entryPoint": 1621,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@validatePaymasterUserOp_50": {
									"entryPoint": 2343,
									"id": 50,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@verifyingSigner_2768": {
									"entryPoint": 1220,
									"id": 2768,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawStake_202": {
									"entryPoint": 1759,
									"id": 202,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawTo_142": {
									"entryPoint": 1067,
									"id": 142,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 4488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 4702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_enum$_PostOpMode_$722": {
									"entryPoint": 5447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_UserOperation_$881_calldata_ptr": {
									"entryPoint": 5061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32": {
									"entryPoint": 4349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint48": {
									"entryPoint": 5116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": 5706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 4563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes_calldata_ptr": {
									"entryPoint": 4788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_enum$_PostOpMode_$722t_bytes_calldata_ptrt_uint256": {
									"entryPoint": 5468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_struct$_UserOperation_$881_calldata_ptrt_bytes32t_uint256": {
									"entryPoint": 5795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_struct$_UserOperation_$881_calldata_ptrt_uint48t_uint48": {
									"entryPoint": 5137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint32": {
									"entryPoint": 4370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint48t_uint48": {
									"entryPoint": 6231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 6106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4947,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 5959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IEntryPoint_$695_to_t_address_fromStack": {
									"entryPoint": 5664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint32_to_t_uint32_fromStack": {
									"entryPoint": 6064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint48_to_t_uint48_fromStack": {
									"entryPoint": 4883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 6399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed": {
									"entryPoint": 6121,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 7795,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 6016,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr_t_uint256_t_address_t_uint256_t_uint48_t_uint48__to_t_bytes_memory_ptr_t_uint256_t_address_t_uint256_t_uint48_t_uint48__fromStack_reversed": {
									"entryPoint": 6295,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IEntryPoint_$695__to_t_address__fromStack_reversed": {
									"entryPoint": 5679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed": {
									"entryPoint": 6079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint48_t_uint48_t_bytes_calldata_ptr__to_t_uint48_t_uint48_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4992,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"access_calldata_tail_t_bytes_calldata_ptr": {
									"entryPoint": 6778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 5906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"calldata_array_index_range_access_t_bytes_calldata_ptr": {
									"entryPoint": 6172,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"cleanup_t_address": {
									"entryPoint": 4627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 4447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 4310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint48": {
									"entryPoint": 4865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IEntryPoint_$695_to_t_address": {
									"entryPoint": 5646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 4915,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5917,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 5584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7239,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 7358,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 4692,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4687,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a": {
									"entryPoint": 6768,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d": {
									"entryPoint": 5056,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad": {
									"entryPoint": 6763,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c": {
									"entryPoint": 6167,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a": {
									"entryPoint": 6162,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 4697,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e": {
									"entryPoint": 6773,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4305,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4300,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be": {
									"entryPoint": 7405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77": {
									"entryPoint": 7513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 6509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9": {
									"entryPoint": 6877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd": {
									"entryPoint": 7621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 6655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7": {
									"entryPoint": 7093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d": {
									"entryPoint": 6985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 4465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_PostOpMode_$722": {
									"entryPoint": 5431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 4326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint48": {
									"entryPoint": 5093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:27846:15",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:49:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:10:15",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:22:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:15",
														"type": ""
													}
												],
												"src": "334:93:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:78:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "531:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "540:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "543:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "533:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "533:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "533:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "498:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "522:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nodeType": "YulIdentifier",
																					"src": "505:16:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "505:23:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "495:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "495:34:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "488:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "488:42:15"
															},
															"nodeType": "YulIf",
															"src": "485:62:15"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "468:5:15",
														"type": ""
													}
												],
												"src": "433:120:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "610:86:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "620:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "642:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "629:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "629:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "620:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "684:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "658:25:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "658:32:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "658:32:15"
														}
													]
												},
												"name": "abi_decode_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "588:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "596:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:15",
														"type": ""
													}
												],
												"src": "559:137:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "767:262:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "813:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "815:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "815:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "815:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "788:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "797:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "784:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "784:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "809:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "780:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "780:32:15"
															},
															"nodeType": "YulIf",
															"src": "777:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "906:116:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "921:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "935:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "925:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "950:62:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "984:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "995:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "980:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "980:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1004:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "960:19:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "960:52:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "950:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "737:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "748:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "760:6:15",
														"type": ""
													}
												],
												"src": "702:327:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1080:81:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1090:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1105:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1112:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1101:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1101:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1090:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1062:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1072:7:15",
														"type": ""
													}
												],
												"src": "1035:126:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1220:51:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1230:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1259:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1241:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1241:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1230:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1202:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1212:7:15",
														"type": ""
													}
												],
												"src": "1167:104:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1328:87:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1393:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1402:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1405:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1395:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1395:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1395:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1351:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1384:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "1358:25:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1358:32:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1348:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1348:43:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1341:51:15"
															},
															"nodeType": "YulIf",
															"src": "1338:71:15"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1321:5:15",
														"type": ""
													}
												],
												"src": "1277:138:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1481:95:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1491:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1513:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1500:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1500:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1491:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1564:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "1529:34:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:41:15"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1459:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1467:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1475:5:15",
														"type": ""
													}
												],
												"src": "1421:155:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1627:32:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1637:16:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1648:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1637:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1609:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1619:7:15",
														"type": ""
													}
												],
												"src": "1582:77:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1708:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1765:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1774:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1777:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1767:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1767:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1767:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1731:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1756:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1738:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1738:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1728:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1728:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1721:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1721:43:15"
															},
															"nodeType": "YulIf",
															"src": "1718:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1701:5:15",
														"type": ""
													}
												],
												"src": "1665:122:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1845:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1855:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1877:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1864:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1855:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1920:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1893:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1893:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1893:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1823:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1831:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1839:5:15",
														"type": ""
													}
												],
												"src": "1793:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2029:399:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2075:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2077:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2077:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2077:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2050:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2059:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2046:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2046:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2071:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2042:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:32:15"
															},
															"nodeType": "YulIf",
															"src": "2039:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "2168:125:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2183:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2197:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2187:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2212:71:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2255:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2266:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2251:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2251:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2275:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "2222:28:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2222:61:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2212:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2303:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2318:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2332:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2322:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2348:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2383:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2394:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2379:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2379:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2403:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2358:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2358:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2348:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1991:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2002:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2014:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2022:6:15",
														"type": ""
													}
												],
												"src": "1938:490:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2479:51:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2489:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2518:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2500:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2500:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2489:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2461:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2471:7:15",
														"type": ""
													}
												],
												"src": "2434:96:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2601:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2618:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2641:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2623:17:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2623:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2611:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2611:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2611:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2589:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2596:3:15",
														"type": ""
													}
												],
												"src": "2536:118:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2758:124:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2768:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2780:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2791:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2776:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2776:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2768:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2848:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2861:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2872:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2857:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2804:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2804:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2730:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2742:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2753:4:15",
														"type": ""
													}
												],
												"src": "2660:222:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2977:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2994:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2997:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2987:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2987:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2987:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "2888:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3100:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3117:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3120:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3110:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3110:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3110:12:15"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "3011:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3223:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3240:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3243:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3233:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3233:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3233:12:15"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "3134:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3344:478:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3393:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3395:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3395:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3395:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3372:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3380:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3368:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3368:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3387:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3364:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3364:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3357:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3357:35:15"
															},
															"nodeType": "YulIf",
															"src": "3354:122:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3485:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3508:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3495:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3495:20:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3485:6:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3558:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "3560:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3560:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3560:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3530:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3538:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3527:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3527:30:15"
															},
															"nodeType": "YulIf",
															"src": "3524:117:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3650:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3666:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3674:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3662:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3662:17:15"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "3650:8:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3733:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "3735:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3735:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3735:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "3698:8:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "3712:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3720:4:15",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3708:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3708:17:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3694:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3694:32:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3728:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3691:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3691:41:15"
															},
															"nodeType": "YulIf",
															"src": "3688:128:15"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3311:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3319:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "3327:8:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3337:6:15",
														"type": ""
													}
												],
												"src": "3270:552:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3913:442:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3959:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3961:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3961:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3961:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3934:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3943:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3930:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3930:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3926:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3926:32:15"
															},
															"nodeType": "YulIf",
															"src": "3923:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "4052:296:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4067:45:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4098:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4109:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4094:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4094:17:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4081:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4081:31:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4071:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4159:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4161:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4161:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4161:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4131:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4139:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4128:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4128:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "4125:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4256:82:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4310:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4321:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4306:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4306:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4330:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4274:31:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4274:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4256:6:15"
																		},
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4264:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3875:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3886:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3898:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3906:6:15",
														"type": ""
													}
												],
												"src": "3828:527:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4405:53:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4415:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4430:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4437:14:15",
																		"type": "",
																		"value": "0xffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4426:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4426:26:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4415:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4387:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4397:7:15",
														"type": ""
													}
												],
												"src": "4361:97:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4527:52:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4544:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4566:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint48",
																			"nodeType": "YulIdentifier",
																			"src": "4549:16:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4549:23:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4537:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4537:36:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4537:36:15"
														}
													]
												},
												"name": "abi_encode_t_uint48_to_t_uint48_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4515:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4522:3:15",
														"type": ""
													}
												],
												"src": "4464:115:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4680:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4697:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4702:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4690:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4690:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4690:19:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4718:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4737:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4742:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4733:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4733:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4718:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4652:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4657:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4668:11:15",
														"type": ""
													}
												],
												"src": "4585:168:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4823:82:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4846:3:15"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4851:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4856:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4833:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4833:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4833:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4883:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4888:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:16:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4897:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4872:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4872:27:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4872:27:15"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4805:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4810:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4815:6:15",
														"type": ""
													}
												],
												"src": "4759:146:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4959:54:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4969:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4987:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4994:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4983:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4983:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5003:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4999:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4999:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4979:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4979:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4969:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4942:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4952:6:15",
														"type": ""
													}
												],
												"src": "4911:102:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5141:214:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5151:77:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5216:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5221:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5158:57:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5158:70:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5151:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5275:5:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5282:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5287:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "5238:36:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5238:56:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5238:56:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5303:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5314:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5341:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5319:21:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5319:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5310:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5310:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5303:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5114:5:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5121:6:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5129:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5137:3:15",
														"type": ""
													}
												],
												"src": "5041:314:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5539:363:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5549:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5561:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5572:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5557:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5557:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5549:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5627:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5640:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5651:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5636:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5636:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint48_to_t_uint48_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5585:41:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5585:69:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5585:69:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5706:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5719:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5730:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5715:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5715:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint48_to_t_uint48_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5664:41:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5664:70:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5664:70:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5755:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5766:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5751:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5751:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5775:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5781:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5771:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5771:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5744:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5744:48:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5744:48:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5801:94:15",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5873:6:15"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5881:6:15"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5890:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5809:63:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5809:86:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5801:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint48_t_uint48_t_bytes_calldata_ptr__to_t_uint48_t_uint48_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5487:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5499:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5507:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5515:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5523:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5534:4:15",
														"type": ""
													}
												],
												"src": "5361:541:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5997:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6014:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6017:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6007:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6007:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6007:12:15"
														}
													]
												},
												"name": "revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d",
												"nodeType": "YulFunctionDefinition",
												"src": "5908:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6143:153:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6183:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d",
																				"nodeType": "YulIdentifier",
																				"src": "6185:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6185:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6185:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6164:3:15"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6169:6:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6160:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6160:16:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6178:3:15",
																		"type": "",
																		"value": "352"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6156:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6156:26:15"
															},
															"nodeType": "YulIf",
															"src": "6153:113:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6275:15:15",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "6284:6:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6275:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_UserOperation_$881_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6121:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6129:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6137:5:15",
														"type": ""
													}
												],
												"src": "6059:237:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6344:78:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6400:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6409:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6412:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6402:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6402:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6402:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6367:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6391:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint48",
																					"nodeType": "YulIdentifier",
																					"src": "6374:16:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6374:23:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6364:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6364:34:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6357:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6357:42:15"
															},
															"nodeType": "YulIf",
															"src": "6354:62:15"
														}
													]
												},
												"name": "validator_revert_t_uint48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6337:5:15",
														"type": ""
													}
												],
												"src": "6302:120:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6479:86:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6489:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6511:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6498:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6498:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6489:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6553:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint48",
																	"nodeType": "YulIdentifier",
																	"src": "6527:25:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6527:32:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6527:32:15"
														}
													]
												},
												"name": "abi_decode_t_uint48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6457:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6465:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6473:5:15",
														"type": ""
													}
												],
												"src": "6428:137:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6701:709:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6747:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6749:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6749:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6749:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6722:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6731:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6718:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6718:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6743:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6714:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6714:32:15"
															},
															"nodeType": "YulIf",
															"src": "6711:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "6840:309:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6855:45:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6897:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6882:17:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6869:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6869:31:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6859:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6947:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6949:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6949:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6949:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6919:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6927:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6916:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6916:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "6913:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7044:95:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7111:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7122:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7107:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7107:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7131:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_UserOperation_$881_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7054:52:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7054:85:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7044:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7159:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7174:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7188:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7178:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7204:62:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7238:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7249:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7234:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7234:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7258:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint48",
																			"nodeType": "YulIdentifier",
																			"src": "7214:19:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7214:52:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7204:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7286:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7301:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7315:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7305:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7331:62:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7365:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7376:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7361:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7361:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7385:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint48",
																			"nodeType": "YulIdentifier",
																			"src": "7341:19:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7341:52:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "7331:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_UserOperation_$881_calldata_ptrt_uint48t_uint48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6655:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6666:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6678:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6686:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6694:6:15",
														"type": ""
													}
												],
												"src": "6571:839:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7461:32:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7471:16:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7482:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7471:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7443:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7453:7:15",
														"type": ""
													}
												],
												"src": "7416:77:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7564:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7581:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7604:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "7586:17:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7586:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7574:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7574:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7574:37:15"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7552:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7559:3:15",
														"type": ""
													}
												],
												"src": "7499:118:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7721:124:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7731:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7743:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7754:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7739:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7739:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7731:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7811:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7824:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7835:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7820:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7820:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7767:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7767:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7767:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7693:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7705:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7716:4:15",
														"type": ""
													}
												],
												"src": "7623:222:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7894:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7951:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7960:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7963:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7953:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7953:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7953:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7917:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7942:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "7924:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7924:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7914:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7914:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7907:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7907:43:15"
															},
															"nodeType": "YulIf",
															"src": "7904:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7887:5:15",
														"type": ""
													}
												],
												"src": "7851:122:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8031:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8041:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8063:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8050:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8050:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8041:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8106:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8079:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8079:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8079:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8009:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8017:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8025:5:15",
														"type": ""
													}
												],
												"src": "7979:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8190:263:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8236:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8238:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8238:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8238:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8211:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8220:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8207:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8207:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8232:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8203:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8203:32:15"
															},
															"nodeType": "YulIf",
															"src": "8200:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "8329:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8344:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8358:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8348:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8373:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8408:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8419:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8404:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8404:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8428:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8383:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8383:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8373:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8160:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8171:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8183:6:15",
														"type": ""
													}
												],
												"src": "8124:329:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8524:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8541:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8564:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8546:17:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8546:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8534:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8534:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8534:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8512:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8519:3:15",
														"type": ""
													}
												],
												"src": "8459:118:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8681:124:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8691:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8703:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8714:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8699:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8699:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8691:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8771:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8784:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8795:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8780:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8780:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8727:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8727:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8727:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8653:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8665:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8676:4:15",
														"type": ""
													}
												],
												"src": "8583:222:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8868:56:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8902:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8911:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8914:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8904:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8904:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8904:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8891:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8898:1:15",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8888:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8888:12:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8881:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8881:20:15"
															},
															"nodeType": "YulIf",
															"src": "8878:40:15"
														}
													]
												},
												"name": "validator_revert_t_enum$_PostOpMode_$722",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8861:5:15",
														"type": ""
													}
												],
												"src": "8811:113:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8996:101:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9006:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9028:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9015:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9015:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9006:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9085:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_PostOpMode_$722",
																	"nodeType": "YulIdentifier",
																	"src": "9044:40:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9044:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9044:47:15"
														}
													]
												},
												"name": "abi_decode_t_enum$_PostOpMode_$722",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8974:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8982:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8990:5:15",
														"type": ""
													}
												],
												"src": "8930:167:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9236:712:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9282:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9284:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9284:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9284:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9257:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9266:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9253:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9253:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9278:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9249:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9249:32:15"
															},
															"nodeType": "YulIf",
															"src": "9246:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "9375:131:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9390:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9404:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9394:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9419:77:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9468:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9479:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9464:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9464:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9488:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_PostOpMode_$722",
																			"nodeType": "YulIdentifier",
																			"src": "9429:34:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9429:67:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9419:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9516:297:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9531:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9562:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9573:2:15",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9558:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9558:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9545:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9545:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9535:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9624:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9626:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9626:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9626:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9596:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9604:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9593:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9593:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "9590:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9721:82:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9775:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9786:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9771:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9771:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9795:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9739:31:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9739:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9721:6:15"
																		},
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9729:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9823:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9838:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9852:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9842:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9868:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9903:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9914:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9899:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9899:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9923:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9878:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9878:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9868:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_PostOpMode_$722t_bytes_calldata_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9182:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9193:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9205:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9213:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9221:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9229:6:15",
														"type": ""
													}
												],
												"src": "9103:845:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9986:28:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9996:12:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10003:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9996:3:15"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9972:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9982:3:15",
														"type": ""
													}
												],
												"src": "9954:60:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10080:82:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10090:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10148:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "10130:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10130:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "10121:8:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10121:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10103:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10103:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "10090:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10060:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "10070:9:15",
														"type": ""
													}
												],
												"src": "10020:142:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10228:66:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10238:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10282:5:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10251:30:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10251:37:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "10238:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10208:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "10218:9:15",
														"type": ""
													}
												],
												"src": "10168:126:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10379:66:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10389:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10433:5:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "10402:30:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10402:37:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "10389:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IEntryPoint_$695_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10359:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "10369:9:15",
														"type": ""
													}
												],
												"src": "10300:145:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10535:85:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10552:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10607:5:15"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IEntryPoint_$695_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10557:49:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10557:56:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10545:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10545:69:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10545:69:15"
														}
													]
												},
												"name": "abi_encode_t_contract$_IEntryPoint_$695_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10523:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10530:3:15",
														"type": ""
													}
												],
												"src": "10451:169:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10743:143:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10753:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10765:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10776:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10761:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10761:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10753:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10852:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10865:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10876:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10861:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10861:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IEntryPoint_$695_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10789:62:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10789:90:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10789:90:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IEntryPoint_$695__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10715:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10727:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10738:4:15",
														"type": ""
													}
												],
												"src": "10626:260:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10966:271:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11012:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11014:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11014:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11014:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10987:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10996:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10983:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10983:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11008:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10979:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10979:32:15"
															},
															"nodeType": "YulIf",
															"src": "10976:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "11105:125:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11120:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11134:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11124:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11149:71:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11192:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11203:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11188:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11188:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11212:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "11159:28:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11159:61:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11149:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10936:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10947:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10959:6:15",
														"type": ""
													}
												],
												"src": "10892:345:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11286:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11343:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11352:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11355:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11345:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11345:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11345:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11309:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11334:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "11316:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11316:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11306:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11306:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11299:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11299:43:15"
															},
															"nodeType": "YulIf",
															"src": "11296:63:15"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11279:5:15",
														"type": ""
													}
												],
												"src": "11243:122:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11423:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11433:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11455:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11442:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11442:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11433:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11498:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "11471:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11471:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11471:33:15"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11401:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11409:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11417:5:15",
														"type": ""
													}
												],
												"src": "11371:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11648:711:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11694:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11696:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11696:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11696:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11669:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11678:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11665:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11665:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11690:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11661:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11661:32:15"
															},
															"nodeType": "YulIf",
															"src": "11658:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "11787:309:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11802:45:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11833:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11844:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11829:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11829:17:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11816:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11816:31:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11806:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11894:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11896:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11896:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11896:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11866:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11874:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11863:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11863:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "11860:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11991:95:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12058:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12069:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12054:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12054:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12078:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_UserOperation_$881_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12001:52:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12001:85:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11991:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12106:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12121:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12135:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12125:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12151:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12186:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12197:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12182:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12182:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12206:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "12161:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12161:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12151:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12234:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12249:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12263:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12253:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12279:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12314:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12325:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12310:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12310:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12334:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12289:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12289:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "12279:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_UserOperation_$881_calldata_ptrt_bytes32t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11602:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11613:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11625:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11633:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11641:6:15",
														"type": ""
													}
												],
												"src": "11516:843:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12423:40:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12434:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12450:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12444:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12444:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12434:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12406:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12416:6:15",
														"type": ""
													}
												],
												"src": "12365:98:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12531:184:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12541:10:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12550:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "12545:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12610:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "12635:3:15"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "12640:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12631:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12631:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "12654:3:15"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "12659:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12650:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12650:11:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "12644:5:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12644:18:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12624:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12624:39:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12624:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12571:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12574:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12568:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12568:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12582:19:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12584:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "12593:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12596:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12589:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12589:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "12584:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12564:3:15",
																"statements": []
															},
															"src": "12560:113:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "12693:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12698:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12689:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12689:16:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12707:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12682:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12682:27:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12682:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "12513:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "12518:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12523:6:15",
														"type": ""
													}
												],
												"src": "12469:246:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12811:283:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12821:52:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12867:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12835:31:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12835:38:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12825:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12882:77:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12947:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12952:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12889:57:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12889:70:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12882:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13007:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13014:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13003:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13003:16:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13021:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13026:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "12968:34:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12968:65:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12968:65:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13042:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13053:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13080:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "13058:21:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13058:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13049:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13049:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13042:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12792:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12799:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12807:3:15",
														"type": ""
													}
												],
												"src": "12721:373:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13244:275:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13254:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13266:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13277:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13262:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13262:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13254:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13301:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13312:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13297:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13297:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13320:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13326:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13316:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13316:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13290:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13290:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13290:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13346:84:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13416:6:15"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13425:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13354:61:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13354:76:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13346:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13484:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13497:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13508:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13493:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13493:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13440:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13440:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13440:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13208:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13220:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13228:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13239:4:15",
														"type": ""
													}
												],
												"src": "13100:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13588:52:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13605:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13627:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "13610:16:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13610:23:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13598:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13598:36:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13598:36:15"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13576:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13583:3:15",
														"type": ""
													}
												],
												"src": "13525:115:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13742:122:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13752:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13764:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13775:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13760:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13760:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13752:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13830:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13843:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13854:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13839:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13839:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13788:41:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13788:69:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13788:69:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13714:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13726:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13737:4:15",
														"type": ""
													}
												],
												"src": "13646:218:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13951:61:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13968:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13999:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "13973:25:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13973:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13961:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13961:45:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13961:45:15"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13939:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13946:3:15",
														"type": ""
													}
												],
												"src": "13870:142:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14160:222:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14170:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14182:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14193:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14178:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14178:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14170:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14266:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14279:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14290:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14275:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14275:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14206:59:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14206:87:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14206:87:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14347:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14360:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14371:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14356:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14356:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14303:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14303:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14303:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14124:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14136:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14144:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14155:4:15",
														"type": ""
													}
												],
												"src": "14018:364:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14477:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14494:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14497:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14487:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14487:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14487:12:15"
														}
													]
												},
												"name": "revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a",
												"nodeType": "YulFunctionDefinition",
												"src": "14388:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14600:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14617:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14620:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14610:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14610:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14610:12:15"
														}
													]
												},
												"name": "revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c",
												"nodeType": "YulFunctionDefinition",
												"src": "14511:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14760:343:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14798:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a",
																				"nodeType": "YulIdentifier",
																				"src": "14800:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14800:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14800:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "startIndex",
																		"nodeType": "YulIdentifier",
																		"src": "14776:10:15"
																	},
																	{
																		"name": "endIndex",
																		"nodeType": "YulIdentifier",
																		"src": "14788:8:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14773:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14773:24:15"
															},
															"nodeType": "YulIf",
															"src": "14770:111:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14914:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c",
																				"nodeType": "YulIdentifier",
																				"src": "14916:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14916:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14916:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "endIndex",
																		"nodeType": "YulIdentifier",
																		"src": "14896:8:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14906:6:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14893:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14893:20:15"
															},
															"nodeType": "YulIf",
															"src": "14890:107:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15006:44:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "15023:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "startIndex",
																				"nodeType": "YulIdentifier",
																				"src": "15035:10:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15047:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "15031:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15031:18:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15019:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15019:31:15"
															},
															"variableNames": [
																{
																	"name": "offsetOut",
																	"nodeType": "YulIdentifier",
																	"src": "15006:9:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15059:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "endIndex",
																		"nodeType": "YulIdentifier",
																		"src": "15076:8:15"
																	},
																	{
																		"name": "startIndex",
																		"nodeType": "YulIdentifier",
																		"src": "15086:10:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15072:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15072:25:15"
															},
															"variableNames": [
																{
																	"name": "lengthOut",
																	"nodeType": "YulIdentifier",
																	"src": "15059:9:15"
																}
															]
														}
													]
												},
												"name": "calldata_array_index_range_access_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14698:6:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14706:6:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "14714:10:15",
														"type": ""
													},
													{
														"name": "endIndex",
														"nodeType": "YulTypedName",
														"src": "14726:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "offsetOut",
														"nodeType": "YulTypedName",
														"src": "14739:9:15",
														"type": ""
													},
													{
														"name": "lengthOut",
														"nodeType": "YulTypedName",
														"src": "14750:9:15",
														"type": ""
													}
												],
												"src": "14634:469:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15190:389:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15236:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15238:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15238:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15238:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15211:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15220:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15207:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15207:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15232:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15203:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15203:32:15"
															},
															"nodeType": "YulIf",
															"src": "15200:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "15329:116:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15344:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15358:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15348:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15373:62:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15407:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15418:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15403:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15403:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15427:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint48",
																			"nodeType": "YulIdentifier",
																			"src": "15383:19:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15383:52:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15373:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15455:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15470:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15484:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15474:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15500:62:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15534:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15545:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15530:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15530:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15554:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint48",
																			"nodeType": "YulIdentifier",
																			"src": "15510:19:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15510:52:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "15500:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint48t_uint48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15152:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15163:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15175:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15183:6:15",
														"type": ""
													}
												],
												"src": "15109:470:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15837:602:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15847:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15859:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15870:3:15",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15855:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15855:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15847:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15895:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15906:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15891:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15891:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15914:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15920:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15910:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15910:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15884:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15884:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15884:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15940:84:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16010:6:15"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16019:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15948:61:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15948:76:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15940:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16078:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16091:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16102:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16087:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16087:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16034:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16034:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16034:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16160:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16173:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16184:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16169:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16169:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16116:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16116:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16116:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16242:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16255:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16266:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16251:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16251:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16198:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16198:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16198:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "16322:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16335:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16346:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16331:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16331:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint48_to_t_uint48_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16280:41:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16280:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16280:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "16403:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16416:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16427:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16412:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16412:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint48_to_t_uint48_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16361:41:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16361:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16361:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr_t_uint256_t_address_t_uint256_t_uint48_t_uint48__to_t_bytes_memory_ptr_t_uint256_t_address_t_uint256_t_uint48_t_uint48__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15769:9:15",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "15781:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15789:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15797:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15805:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15813:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15821:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15832:4:15",
														"type": ""
													}
												],
												"src": "15585:854:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16559:140:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16569:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16581:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16592:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16577:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16577:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16569:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16665:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16678:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16689:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16674:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16674:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16605:59:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16605:87:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16605:87:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16531:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16543:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16554:4:15",
														"type": ""
													}
												],
												"src": "16445:254:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16768:80:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16778:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16793:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16787:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16787:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16778:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16836:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16809:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16809:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16809:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16746:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16754:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16762:5:15",
														"type": ""
													}
												],
												"src": "16705:143:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16931:274:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16977:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "16979:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16979:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16979:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16952:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16961:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16948:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16948:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16973:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16944:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16944:32:15"
															},
															"nodeType": "YulIf",
															"src": "16941:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "17070:128:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17085:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17099:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17089:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17114:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17160:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17171:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17156:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17156:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17180:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "17124:31:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17124:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "17114:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16901:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16912:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16924:6:15",
														"type": ""
													}
												],
												"src": "16854:351:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17307:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17324:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17329:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17317:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17317:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17317:19:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17345:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17364:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17369:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17360:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17360:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "17345:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17279:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17284:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "17295:11:15",
														"type": ""
													}
												],
												"src": "17211:169:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17492:119:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17514:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17522:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17510:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17510:14:15"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17526:34:15",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17503:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17503:58:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17503:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17582:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17590:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17578:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17578:15:15"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17595:8:15",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17571:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17571:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17571:33:15"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17484:6:15",
														"type": ""
													}
												],
												"src": "17386:225:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17763:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17773:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17839:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17844:2:15",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17780:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17780:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17773:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17945:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "17856:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17856:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17856:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17958:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17969:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17974:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17965:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17965:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17958:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17751:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17759:3:15",
														"type": ""
													}
												],
												"src": "17617:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18160:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18170:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18182:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18193:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18178:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18178:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18170:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18217:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18228:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18213:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18213:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18236:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18242:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18232:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18232:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18206:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18206:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18206:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18262:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18396:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18270:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18270:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18262:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18140:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18155:4:15",
														"type": ""
													}
												],
												"src": "17989:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18520:76:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18542:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18550:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18538:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18538:14:15"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18554:34:15",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18531:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18531:58:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18531:58:15"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18512:6:15",
														"type": ""
													}
												],
												"src": "18414:182:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18748:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18758:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18824:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18829:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18765:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18765:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18758:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18930:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "18841:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18841:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18841:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18943:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18954:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18959:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18950:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18950:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18943:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18736:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18744:3:15",
														"type": ""
													}
												],
												"src": "18602:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19145:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19155:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19167:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19178:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19163:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "19163:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19155:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19202:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19213:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19198:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19198:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19221:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19227:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19217:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19217:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19191:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "19191:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19191:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19247:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19381:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19255:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "19255:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19247:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19125:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19140:4:15",
														"type": ""
													}
												],
												"src": "18974:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19488:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19505:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19508:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19498:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "19498:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19498:12:15"
														}
													]
												},
												"name": "revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad",
												"nodeType": "YulFunctionDefinition",
												"src": "19399:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19611:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19628:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19631:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19621:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "19621:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19621:12:15"
														}
													]
												},
												"name": "revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a",
												"nodeType": "YulFunctionDefinition",
												"src": "19522:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19734:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19751:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19754:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19744:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "19744:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19744:12:15"
														}
													]
												},
												"name": "revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e",
												"nodeType": "YulFunctionDefinition",
												"src": "19645:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19858:634:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19868:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr_to_tail",
																		"nodeType": "YulIdentifier",
																		"src": "19907:11:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "19894:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "19894:25:15"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nodeType": "YulTypedName",
																	"src": "19872:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20013:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad",
																				"nodeType": "YulIdentifier",
																				"src": "20015:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20015:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20015:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulIdentifier",
																				"src": "19942:18:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nodeType": "YulIdentifier",
																									"src": "19970:12:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19970:14:15"
																							},
																							{
																								"name": "base_ref",
																								"nodeType": "YulIdentifier",
																								"src": "19986:8:15"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "19966:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "19966:29:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "20001:4:15",
																								"type": "",
																								"value": "0x20"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "20007:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "19997:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "19997:12:15"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "19962:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19962:48:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "19938:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19938:73:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19931:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "19931:81:15"
															},
															"nodeType": "YulIf",
															"src": "19928:168:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20105:41:15",
															"value": {
																"arguments": [
																	{
																		"name": "base_ref",
																		"nodeType": "YulIdentifier",
																		"src": "20117:8:15"
																	},
																	{
																		"name": "rel_offset_of_tail",
																		"nodeType": "YulIdentifier",
																		"src": "20127:18:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20113:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "20113:33:15"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "20105:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20156:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "20179:4:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "20166:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "20166:18:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "20156:6:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20227:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a",
																				"nodeType": "YulIdentifier",
																				"src": "20229:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20229:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20229:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20199:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20207:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20196:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "20196:30:15"
															},
															"nodeType": "YulIf",
															"src": "20193:117:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20319:21:15",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "20331:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20337:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20327:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "20327:13:15"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "20319:4:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20402:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e",
																				"nodeType": "YulIdentifier",
																				"src": "20404:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20404:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20404:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "20356:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "20366:12:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20366:14:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "20386:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20394:4:15",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "20382:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20382:17:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20362:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20362:38:15"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nodeType": "YulIdentifier",
																	"src": "20352:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "20352:49:15"
															},
															"nodeType": "YulIf",
															"src": "20349:136:15"
														}
													]
												},
												"name": "access_calldata_tail_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nodeType": "YulTypedName",
														"src": "19819:8:15",
														"type": ""
													},
													{
														"name": "ptr_to_tail",
														"nodeType": "YulTypedName",
														"src": "19829:11:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "addr",
														"nodeType": "YulTypedName",
														"src": "19845:4:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19851:6:15",
														"type": ""
													}
												],
												"src": "19768:724:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20604:65:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20626:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20634:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20622:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20622:14:15"
																	},
																	{
																		"hexValue": "53656e646572206e6f7420456e747279506f696e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20638:23:15",
																		"type": "",
																		"value": "Sender not EntryPoint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20615:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "20615:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20615:47:15"
														}
													]
												},
												"name": "store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20596:6:15",
														"type": ""
													}
												],
												"src": "20498:171:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20821:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20831:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20897:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20902:2:15",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20838:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "20838:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20831:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21003:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9",
																	"nodeType": "YulIdentifier",
																	"src": "20914:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "20914:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20914:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21016:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21027:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21032:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21023:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21023:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21016:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20809:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20817:3:15",
														"type": ""
													}
												],
												"src": "20675:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21218:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21228:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21240:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21251:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21236:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21236:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21228:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21275:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21286:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21271:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21271:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21294:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21300:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21290:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21290:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21264:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21264:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21264:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21320:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21454:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21328:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21328:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21320:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21198:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21213:4:15",
														"type": ""
													}
												],
												"src": "21047:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21578:57:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21600:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21608:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21596:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21596:14:15"
																	},
																	{
																		"hexValue": "6d757374206f76657272696465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21612:15:15",
																		"type": "",
																		"value": "must override"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21589:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21589:39:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21589:39:15"
														}
													]
												},
												"name": "store_literal_in_memory_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21570:6:15",
														"type": ""
													}
												],
												"src": "21472:163:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21787:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21797:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21863:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21868:2:15",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21804:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21804:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21797:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21969:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d",
																	"nodeType": "YulIdentifier",
																	"src": "21880:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21880:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21880:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21982:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21993:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21998:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21989:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21989:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21982:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21775:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21783:3:15",
														"type": ""
													}
												],
												"src": "21641:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22184:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22194:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22206:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22217:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22202:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22202:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22194:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22241:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22252:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22237:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22237:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22260:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22266:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22256:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22256:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22230:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22230:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22230:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22286:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22420:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22294:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22294:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22286:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22164:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22179:4:15",
														"type": ""
													}
												],
												"src": "22013:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22544:145:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22566:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22574:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22562:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22562:14:15"
																	},
																	{
																		"hexValue": "566572696679696e675061796d61737465723a20696e76616c6964207369676e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22578:34:15",
																		"type": "",
																		"value": "VerifyingPaymaster: invalid sign"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22555:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22555:58:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22555:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22634:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22642:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22630:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22630:15:15"
																	},
																	{
																		"hexValue": "6174757265206c656e67746820696e207061796d6173746572416e6444617461",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22647:34:15",
																		"type": "",
																		"value": "ature length in paymasterAndData"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22623:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22623:59:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22623:59:15"
														}
													]
												},
												"name": "store_literal_in_memory_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22536:6:15",
														"type": ""
													}
												],
												"src": "22438:251:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22841:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22851:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22917:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22922:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22858:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22858:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22851:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23023:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7",
																	"nodeType": "YulIdentifier",
																	"src": "22934:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22934:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22934:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23036:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23047:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23052:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23043:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23043:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23036:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22829:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22837:3:15",
														"type": ""
													}
												],
												"src": "22695:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23238:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23248:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23260:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23271:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23256:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23256:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23248:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23295:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23306:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23291:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23291:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23314:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23320:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23310:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23310:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23284:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23284:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23284:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23340:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23474:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23348:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23348:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23340:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23218:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23233:4:15",
														"type": ""
													}
												],
												"src": "23067:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23520:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23537:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23540:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23530:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23530:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23530:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23634:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23637:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23627:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23627:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23627:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23658:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23661:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "23651:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23651:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23651:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "23492:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23721:190:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23731:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23758:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23740:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23740:24:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "23731:5:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23854:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "23856:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23856:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23856:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23779:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23786:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "23776:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23776:77:15"
															},
															"nodeType": "YulIf",
															"src": "23773:103:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23885:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23896:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23903:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23892:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23892:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "23885:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23707:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "23717:3:15",
														"type": ""
													}
												],
												"src": "23678:233:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23945:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23962:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23965:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23955:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23955:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23955:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24059:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24062:4:15",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24052:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24052:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24052:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24083:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24086:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "24076:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24076:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24076:15:15"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "23917:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24209:68:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24231:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24239:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24227:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24227:14:15"
																	},
																	{
																		"hexValue": "45434453413a20696e76616c6964207369676e6174757265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24243:26:15",
																		"type": "",
																		"value": "ECDSA: invalid signature"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24220:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24220:50:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24220:50:15"
														}
													]
												},
												"name": "store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24201:6:15",
														"type": ""
													}
												],
												"src": "24103:174:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24429:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24439:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24505:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24510:2:15",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24446:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24446:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24439:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24611:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																	"nodeType": "YulIdentifier",
																	"src": "24522:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24522:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24522:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24624:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24635:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24640:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24631:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24631:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24624:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24417:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24425:3:15",
														"type": ""
													}
												],
												"src": "24283:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24826:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24836:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24848:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24859:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24844:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24844:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24836:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24883:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24894:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24879:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24879:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24902:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24908:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24898:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24898:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24872:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24872:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24872:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24928:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25062:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24936:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24936:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24928:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24806:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24821:4:15",
														"type": ""
													}
												],
												"src": "24655:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25186:75:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25208:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25216:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25204:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25204:14:15"
																	},
																	{
																		"hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25220:33:15",
																		"type": "",
																		"value": "ECDSA: invalid signature length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25197:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25197:57:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25197:57:15"
														}
													]
												},
												"name": "store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25178:6:15",
														"type": ""
													}
												],
												"src": "25080:181:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25413:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25423:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25489:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25494:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25430:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25430:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25423:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25595:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																	"nodeType": "YulIdentifier",
																	"src": "25506:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25506:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25506:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25608:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25619:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25624:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25615:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25615:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25608:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25401:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25409:3:15",
														"type": ""
													}
												],
												"src": "25267:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25810:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25820:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25832:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25843:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25828:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25828:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25820:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25867:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25878:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25863:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25863:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25886:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25892:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25882:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25882:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25856:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25856:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25856:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25912:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26046:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25920:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25920:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25912:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25790:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25805:4:15",
														"type": ""
													}
												],
												"src": "25639:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26170:115:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26192:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26200:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26188:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26188:14:15"
																	},
																	{
																		"hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26204:34:15",
																		"type": "",
																		"value": "ECDSA: invalid signature 's' val"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26181:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26181:58:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26181:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26260:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26268:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26256:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26256:15:15"
																	},
																	{
																		"hexValue": "7565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26273:4:15",
																		"type": "",
																		"value": "ue"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26249:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26249:29:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26249:29:15"
														}
													]
												},
												"name": "store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26162:6:15",
														"type": ""
													}
												],
												"src": "26064:221:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26437:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26447:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26513:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26518:2:15",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26454:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26454:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26447:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26619:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																	"nodeType": "YulIdentifier",
																	"src": "26530:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26530:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26530:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26632:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26643:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26648:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26639:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26639:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26632:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26425:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26433:3:15",
														"type": ""
													}
												],
												"src": "26291:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26834:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26844:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26856:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26867:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26852:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26852:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26844:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26891:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26902:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26887:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26887:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26910:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26916:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26906:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26906:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26880:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26880:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26880:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26936:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27070:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26944:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26944:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26936:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26814:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26829:4:15",
														"type": ""
													}
												],
												"src": "26663:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27131:43:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27141:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27156:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27163:4:15",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "27152:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27152:16:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "27141:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27113:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "27123:7:15",
														"type": ""
													}
												],
												"src": "27088:86:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27241:51:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27258:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27279:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "27263:15:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27263:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27251:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27251:35:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27251:35:15"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27229:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27236:3:15",
														"type": ""
													}
												],
												"src": "27180:112:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27476:367:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27486:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27498:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27509:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27494:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27494:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27486:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27567:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27580:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27591:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27576:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27576:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27523:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27523:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27523:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "27644:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27657:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27668:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27653:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27653:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27604:39:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27604:68:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27604:68:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "27726:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27739:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27750:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27735:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27735:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27682:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27682:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27682:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "27808:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27821:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27832:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27817:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27817:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27764:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27764:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27764:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27424:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "27436:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "27444:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "27452:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27460:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27471:4:15",
														"type": ""
													}
												],
												"src": "27298:545:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint48(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffff)\n    }\n\n    function abi_encode_t_uint48_to_t_uint48_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint48_t_uint48_t_bytes_calldata_ptr__to_t_uint48_t_uint48_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value2, value3,  tail)\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct UserOperation\n    function abi_decode_t_struct$_UserOperation_$881_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 352) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function validator_revert_t_uint48(value) {\n        if iszero(eq(value, cleanup_t_uint48(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint48(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint48(value)\n    }\n\n    function abi_decode_tuple_t_struct$_UserOperation_$881_calldata_ptrt_uint48t_uint48(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_UserOperation_$881_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint48(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint48(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_enum$_PostOpMode_$722(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_PostOpMode_$722(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_PostOpMode_$722(value)\n    }\n\n    function abi_decode_tuple_t_enum$_PostOpMode_$722t_bytes_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_PostOpMode_$722(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IEntryPoint_$695_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IEntryPoint_$695_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IEntryPoint_$695_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IEntryPoint_$695__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IEntryPoint_$695_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_struct$_UserOperation_$881_calldata_ptrt_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_UserOperation_$881_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() {\n        revert(0, 0)\n    }\n\n    function revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() {\n        revert(0, 0)\n    }\n\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut {\n        if gt(startIndex, endIndex) { revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() }\n        if gt(endIndex, length) { revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() }\n        offsetOut := add(offset, mul(startIndex, 1))\n        lengthOut := sub(endIndex, startIndex)\n    }\n\n    function abi_decode_tuple_t_uint48t_uint48(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint48(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint48(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr_t_uint256_t_address_t_uint256_t_uint48_t_uint48__to_t_bytes_memory_ptr_t_uint256_t_address_t_uint256_t_uint48_t_uint48__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender not EntryPoint\")\n\n    }\n\n    function abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d(memPtr) {\n\n        mstore(add(memPtr, 0), \"must override\")\n\n    }\n\n    function abi_encode_t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7(memPtr) {\n\n        mstore(add(memPtr, 0), \"VerifyingPaymaster: invalid sign\")\n\n        mstore(add(memPtr, 32), \"ature length in paymasterAndData\")\n\n    }\n\n    function abi_encode_t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 64)\n        store_literal_in_memory_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature length\")\n\n    }\n\n    function abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature 's' val\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"13": [
									{
										"length": 32,
										"start": 926
									},
									{
										"length": 32,
										"start": 1077
									},
									{
										"length": 32,
										"start": 1587
									},
									{
										"length": 32,
										"start": 1631
									},
									{
										"length": 32,
										"start": 1769
									},
									{
										"length": 32,
										"start": 1913
									},
									{
										"length": 32,
										"start": 2072
									},
									{
										"length": 32,
										"start": 2784
									}
								],
								"2768": [
									{
										"length": 32,
										"start": 1222
									},
									{
										"length": 32,
										"start": 3329
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100f35760003560e01c8063a9a234091161008a578063c399ec8811610059578063c399ec88146102f8578063d0e30db014610323578063f2fde38b1461032d578063f465c77e14610356576100f3565b8063a9a2340914610264578063b0d691fe1461028d578063bb9fe6bf146102b8578063c23a5cea146102cf576100f3565b80638da5cb5b116100c65780638da5cb5b1461017f57806394d4ad60146101aa57806394e1fc19146101ea5780639c90b44314610227576100f3565b80630396cb60146100f8578063205c28781461011457806323d9ac9b1461013d578063715018a614610168575b600080fd5b610112600480360381019061010d9190611112565b610394565b005b34801561012057600080fd5b5061013b600480360381019061013691906111d3565b61042b565b005b34801561014957600080fd5b506101526104c4565b60405161015f9190611234565b60405180910390f35b34801561017457600080fd5b5061017d6104e8565b005b34801561018b57600080fd5b506101946104fc565b6040516101a19190611234565b60405180910390f35b3480156101b657600080fd5b506101d160048036038101906101cc91906112b4565b610525565b6040516101e19493929190611380565b60405180910390f35b3480156101f657600080fd5b50610211600480360381019061020c9190611411565b610574565b60405161021e9190611499565b60405180910390f35b34801561023357600080fd5b5061024e600480360381019061024991906114e0565b6105ff565b60405161025b919061151c565b60405180910390f35b34801561027057600080fd5b5061028b6004803603810190610286919061155c565b610617565b005b34801561029957600080fd5b506102a2610631565b6040516102af919061162f565b60405180910390f35b3480156102c457600080fd5b506102cd610655565b005b3480156102db57600080fd5b506102f660048036038101906102f1919061164a565b6106df565b005b34801561030457600080fd5b5061030d610775565b60405161031a919061151c565b60405180910390f35b61032b610816565b005b34801561033957600080fd5b50610354600480360381019061034f91906114e0565b6108a4565b005b34801561036257600080fd5b5061037d600480360381019061037891906116a3565b610927565b60405161038b929190611780565b60405180910390f35b61039c61094a565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b81526004016103f691906117bf565b6000604051808303818588803b15801561040f57600080fd5b505af1158015610423573d6000803e3d6000fd5b505050505050565b61043361094a565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b815260040161048e9291906117e9565b600060405180830381600087803b1580156104a857600080fd5b505af11580156104bc573d6000803e3d6000fd5b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6104f061094a565b6104fa60006109c8565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080366000858560149060549261053f9392919061181c565b81019061054c9190611857565b8094508195505050858560549080926105679392919061181c565b9150915092959194509250565b600061057f84610a8c565b46306001600061058e89610ace565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205486866040516020016105e096959493929190611897565b6040516020818303038152906040528051906020012090509392505050565b60016020528060005260406000206000915090505481565b61061f610ade565b61062b84848484610b6e565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61065d61094a565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106c557600080fd5b505af11580156106d9573d6000803e3d6000fd5b50505050565b6106e761094a565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c23a5cea826040518263ffffffff1660e01b815260040161074091906118ff565b600060405180830381600087803b15801561075a57600080fd5b505af115801561076e573d6000803e3d6000fd5b5050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107d09190611234565b602060405180830381865afa1580156107ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610811919061192f565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b81526004016108709190611234565b6000604051808303818588803b15801561088957600080fd5b505af115801561089d573d6000803e3d6000fd5b5050505050565b6108ac61094a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361091b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610912906119df565b60405180910390fd5b610924816109c8565b50565b60606000610933610ade565b61093e858585610ba9565b91509150935093915050565b610952610d95565b73ffffffffffffffffffffffffffffffffffffffff166109706104fc565b73ffffffffffffffffffffffffffffffffffffffff16146109c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bd90611a4b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b606036600083806101200190610aa29190611a7a565b915091508360208184030360405194506020810185016040528085528082602087013750505050919050565b6000808235905080915050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6390611b29565b60405180910390fd5b565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba090611b95565b60405180910390fd5b606060008080366000610bcb89806101200190610bc69190611a7a565b610525565b93509350935093506040828290501480610be85750604182829050145b610c27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1e90611c27565b60405180910390fd5b6000610c3c610c378b8787610574565b610d9d565b905060016000610c4b8c610ace565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190610c9690611c76565b9190505550610ce98184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610dd3565b73ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610d6657610d4760018686610dfa565b6040518060200160405280600081525090965096505050505050610d8d565b610d7260008686610dfa565b60405180602001604052806000815250909650965050505050505b935093915050565b600033905090565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b6000806000610de28585610e33565b91509150610def81610e84565b819250505092915050565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b85610e22576000610e25565b60015b60ff16171790509392505050565b6000806041835103610e745760008060006020860151925060408601519150606086015160001a9050610e6887828585610fea565b94509450505050610e7d565b60006002915091505b9250929050565b60006004811115610e9857610e97611cbe565b5b816004811115610eab57610eaa611cbe565b5b0315610fe75760016004811115610ec557610ec4611cbe565b5b816004811115610ed857610ed7611cbe565b5b03610f18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0f90611d39565b60405180910390fd5b60026004811115610f2c57610f2b611cbe565b5b816004811115610f3f57610f3e611cbe565b5b03610f7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7690611da5565b60405180910390fd5b60036004811115610f9357610f92611cbe565b5b816004811115610fa657610fa5611cbe565b5b03610fe6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fdd90611e37565b60405180910390fd5b5b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156110255760006003915091506110c3565b60006001878787876040516000815260200160405260405161104a9493929190611e73565b6020604051602081039080840390855afa15801561106c573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110ba576000600192509250506110c3565b80600092509250505b94509492505050565b600080fd5b600080fd5b600063ffffffff82169050919050565b6110ef816110d6565b81146110fa57600080fd5b50565b60008135905061110c816110e6565b92915050565b600060208284031215611128576111276110cc565b5b6000611136848285016110fd565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061116a8261113f565b9050919050565b61117a8161115f565b811461118557600080fd5b50565b60008135905061119781611171565b92915050565b6000819050919050565b6111b08161119d565b81146111bb57600080fd5b50565b6000813590506111cd816111a7565b92915050565b600080604083850312156111ea576111e96110cc565b5b60006111f885828601611188565b9250506020611209858286016111be565b9150509250929050565b600061121e8261113f565b9050919050565b61122e81611213565b82525050565b60006020820190506112496000830184611225565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126112745761127361124f565b5b8235905067ffffffffffffffff81111561129157611290611254565b5b6020830191508360018202830111156112ad576112ac611259565b5b9250929050565b600080602083850312156112cb576112ca6110cc565b5b600083013567ffffffffffffffff8111156112e9576112e86110d1565b5b6112f58582860161125e565b92509250509250929050565b600065ffffffffffff82169050919050565b61131c81611301565b82525050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b600061135f8385611322565b935061136c838584611333565b61137583611342565b840190509392505050565b60006060820190506113956000830187611313565b6113a26020830186611313565b81810360408301526113b5818486611353565b905095945050505050565b600080fd5b600061016082840312156113dc576113db6113c0565b5b81905092915050565b6113ee81611301565b81146113f957600080fd5b50565b60008135905061140b816113e5565b92915050565b60008060006060848603121561142a576114296110cc565b5b600084013567ffffffffffffffff811115611448576114476110d1565b5b611454868287016113c5565b9350506020611465868287016113fc565b9250506040611476868287016113fc565b9150509250925092565b6000819050919050565b61149381611480565b82525050565b60006020820190506114ae600083018461148a565b92915050565b6114bd81611213565b81146114c857600080fd5b50565b6000813590506114da816114b4565b92915050565b6000602082840312156114f6576114f56110cc565b5b6000611504848285016114cb565b91505092915050565b6115168161119d565b82525050565b6000602082019050611531600083018461150d565b92915050565b6003811061154457600080fd5b50565b60008135905061155681611537565b92915050565b60008060008060608587031215611576576115756110cc565b5b600061158487828801611547565b945050602085013567ffffffffffffffff8111156115a5576115a46110d1565b5b6115b18782880161125e565b935093505060406115c4878288016111be565b91505092959194509250565b6000819050919050565b60006115f56115f06115eb8461113f565b6115d0565b61113f565b9050919050565b6000611607826115da565b9050919050565b6000611619826115fc565b9050919050565b6116298161160e565b82525050565b60006020820190506116446000830184611620565b92915050565b6000602082840312156116605761165f6110cc565b5b600061166e84828501611188565b91505092915050565b61168081611480565b811461168b57600080fd5b50565b60008135905061169d81611677565b92915050565b6000806000606084860312156116bc576116bb6110cc565b5b600084013567ffffffffffffffff8111156116da576116d96110d1565b5b6116e6868287016113c5565b93505060206116f78682870161168e565b9250506040611708868287016111be565b9150509250925092565b600081519050919050565b60005b8381101561173b578082015181840152602081019050611720565b60008484015250505050565b600061175282611712565b61175c8185611322565b935061176c81856020860161171d565b61177581611342565b840191505092915050565b6000604082019050818103600083015261179a8185611747565b90506117a9602083018461150d565b9392505050565b6117b9816110d6565b82525050565b60006020820190506117d460008301846117b0565b92915050565b6117e38161115f565b82525050565b60006040820190506117fe60008301856117da565b61180b602083018461150d565b9392505050565b600080fd5b600080fd5b600080858511156118305761182f611812565b5b8386111561184157611840611817565b5b6001850283019150848603905094509492505050565b6000806040838503121561186e5761186d6110cc565b5b600061187c858286016113fc565b925050602061188d858286016113fc565b9150509250929050565b600060c08201905081810360008301526118b18189611747565b90506118c0602083018861150d565b6118cd6040830187611225565b6118da606083018661150d565b6118e76080830185611313565b6118f460a0830184611313565b979650505050505050565b600060208201905061191460008301846117da565b92915050565b600081519050611929816111a7565b92915050565b600060208284031215611945576119446110cc565b5b60006119538482850161191a565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006119c960268361195c565b91506119d48261196d565b604082019050919050565b600060208201905081810360008301526119f8816119bc565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611a3560208361195c565b9150611a40826119ff565b602082019050919050565b60006020820190508181036000830152611a6481611a28565b9050919050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611a9757611a96611a6b565b5b80840192508235915067ffffffffffffffff821115611ab957611ab8611a70565b5b602083019250600182023603831315611ad557611ad4611a75565b5b509250929050565b7f53656e646572206e6f7420456e747279506f696e740000000000000000000000600082015250565b6000611b1360158361195c565b9150611b1e82611add565b602082019050919050565b60006020820190508181036000830152611b4281611b06565b9050919050565b7f6d757374206f7665727269646500000000000000000000000000000000000000600082015250565b6000611b7f600d8361195c565b9150611b8a82611b49565b602082019050919050565b60006020820190508181036000830152611bae81611b72565b9050919050565b7f566572696679696e675061796d61737465723a20696e76616c6964207369676e60008201527f6174757265206c656e67746820696e207061796d6173746572416e6444617461602082015250565b6000611c1160408361195c565b9150611c1c82611bb5565b604082019050919050565b60006020820190508181036000830152611c4081611c04565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c818261119d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611cb357611cb2611c47565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000611d2360188361195c565b9150611d2e82611ced565b602082019050919050565b60006020820190508181036000830152611d5281611d16565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000611d8f601f8361195c565b9150611d9a82611d59565b602082019050919050565b60006020820190508181036000830152611dbe81611d82565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000611e2160228361195c565b9150611e2c82611dc5565b604082019050919050565b60006020820190508181036000830152611e5081611e14565b9050919050565b600060ff82169050919050565b611e6d81611e57565b82525050565b6000608082019050611e88600083018761148a565b611e956020830186611e64565b611ea2604083018561148a565b611eaf606083018461148a565b9594505050505056fea2646970667358221220119ea8ec0d636f8697246c1dfd6f969f6623f1c34e05158d6c4fd6ef0d4063ab64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA9A23409 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC399EC88 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xF465C77E EQ PUSH2 0x356 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0xA9A23409 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xBB9FE6BF EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x2CF JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x94D4AD60 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x94E1FC19 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x9C90B443 EQ PUSH2 0x227 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x396CB60 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x205C2878 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x23D9AC9B EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x168 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x1112 JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x42B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x152 PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x4E8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1411 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x155C JUMP JUMPDEST PUSH2 0x617 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A2 PUSH2 0x631 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x162F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x655 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x164A JUMP JUMPDEST PUSH2 0x6DF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0x775 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32B PUSH2 0x816 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST PUSH2 0x8A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP3 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39C PUSH2 0x94A JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x396CB60 CALLVALUE DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x17BF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x423 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x433 PUSH2 0x94A JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x205C2878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48E SWAP3 SWAP2 SWAP1 PUSH2 0x17E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x4F0 PUSH2 0x94A JUMP JUMPDEST PUSH2 0x4FA PUSH1 0x0 PUSH2 0x9C8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP6 DUP6 PUSH1 0x14 SWAP1 PUSH1 0x54 SWAP3 PUSH2 0x53F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x181C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x54C SWAP2 SWAP1 PUSH2 0x1857 JUMP JUMPDEST DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP DUP6 DUP6 PUSH1 0x54 SWAP1 DUP1 SWAP3 PUSH2 0x567 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x181C JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57F DUP5 PUSH2 0xA8C JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x1 PUSH1 0x0 PUSH2 0x58E DUP10 PUSH2 0xACE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5E0 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x61F PUSH2 0xADE JUMP JUMPDEST PUSH2 0x62B DUP5 DUP5 DUP5 DUP5 PUSH2 0xB6E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x65D PUSH2 0x94A JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBB9FE6BF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6E7 PUSH2 0x94A JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC23A5CEA DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x740 SWAP2 SWAP1 PUSH2 0x18FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x75A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x76E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x811 SWAP2 SWAP1 PUSH2 0x192F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB760FAF9 CALLVALUE ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x870 SWAP2 SWAP1 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x89D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8AC PUSH2 0x94A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x91B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x912 SWAP1 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x924 DUP2 PUSH2 0x9C8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x933 PUSH2 0xADE JUMP JUMPDEST PUSH2 0x93E DUP6 DUP6 DUP6 PUSH2 0xBA9 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x952 PUSH2 0xD95 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x970 PUSH2 0x4FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BD SWAP1 PUSH2 0x1A4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x0 DUP4 DUP1 PUSH2 0x120 ADD SWAP1 PUSH2 0xAA2 SWAP2 SWAP1 PUSH2 0x1A7A JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH1 0x20 DUP2 DUP5 SUB SUB PUSH1 0x40 MLOAD SWAP5 POP PUSH1 0x20 DUP2 ADD DUP6 ADD PUSH1 0x40 MSTORE DUP1 DUP6 MSTORE DUP1 DUP3 PUSH1 0x20 DUP8 ADD CALLDATACOPY POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 CALLDATALOAD SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB63 SWAP1 PUSH2 0x1B29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA0 SWAP1 PUSH2 0x1B95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP1 CALLDATASIZE PUSH1 0x0 PUSH2 0xBCB DUP10 DUP1 PUSH2 0x120 ADD SWAP1 PUSH2 0xBC6 SWAP2 SWAP1 PUSH2 0x1A7A JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x40 DUP3 DUP3 SWAP1 POP EQ DUP1 PUSH2 0xBE8 JUMPI POP PUSH1 0x41 DUP3 DUP3 SWAP1 POP EQ JUMPDEST PUSH2 0xC27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1E SWAP1 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC3C PUSH2 0xC37 DUP12 DUP8 DUP8 PUSH2 0x574 JUMP JUMPDEST PUSH2 0xD9D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 PUSH2 0xC4B DUP13 PUSH2 0xACE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xC96 SWAP1 PUSH2 0x1C76 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xCE9 DUP2 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xDD3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD66 JUMPI PUSH2 0xD47 PUSH1 0x1 DUP7 DUP7 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 SWAP7 POP SWAP7 POP POP POP POP POP POP PUSH2 0xD8D JUMP JUMPDEST PUSH2 0xD72 PUSH1 0x0 DUP7 DUP7 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 SWAP7 POP SWAP7 POP POP POP POP POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xDE2 DUP6 DUP6 PUSH2 0xE33 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xDEF DUP2 PUSH2 0xE84 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD0 DUP3 PUSH6 0xFFFFFFFFFFFF AND SWAP1 SHL PUSH1 0xA0 DUP5 PUSH6 0xFFFFFFFFFFFF AND SWAP1 SHL DUP6 PUSH2 0xE22 JUMPI PUSH1 0x0 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND OR OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x41 DUP4 MLOAD SUB PUSH2 0xE74 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0xE68 DUP8 DUP3 DUP6 DUP6 PUSH2 0xFEA JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE98 JUMPI PUSH2 0xE97 PUSH2 0x1CBE JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xEAB JUMPI PUSH2 0xEAA PUSH2 0x1CBE JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0xFE7 JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xEC5 JUMPI PUSH2 0xEC4 PUSH2 0x1CBE JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xED8 JUMPI PUSH2 0xED7 PUSH2 0x1CBE JUMP JUMPDEST JUMPDEST SUB PUSH2 0xF18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0F SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF2C JUMPI PUSH2 0xF2B PUSH2 0x1CBE JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF3F JUMPI PUSH2 0xF3E PUSH2 0x1CBE JUMP JUMPDEST JUMPDEST SUB PUSH2 0xF7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF76 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF93 JUMPI PUSH2 0xF92 PUSH2 0x1CBE JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xFA6 JUMPI PUSH2 0xFA5 PUSH2 0x1CBE JUMP JUMPDEST JUMPDEST SUB PUSH2 0xFE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDD SWAP1 PUSH2 0x1E37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1025 JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x104A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E73 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x106C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10BA JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x10C3 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10EF DUP2 PUSH2 0x10D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x10FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x110C DUP2 PUSH2 0x10E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1128 JUMPI PUSH2 0x1127 PUSH2 0x10CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1136 DUP5 DUP3 DUP6 ADD PUSH2 0x10FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x116A DUP3 PUSH2 0x113F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x117A DUP2 PUSH2 0x115F JUMP JUMPDEST DUP2 EQ PUSH2 0x1185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1197 DUP2 PUSH2 0x1171 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B0 DUP2 PUSH2 0x119D JUMP JUMPDEST DUP2 EQ PUSH2 0x11BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11CD DUP2 PUSH2 0x11A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11EA JUMPI PUSH2 0x11E9 PUSH2 0x10CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11F8 DUP6 DUP3 DUP7 ADD PUSH2 0x1188 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1209 DUP6 DUP3 DUP7 ADD PUSH2 0x11BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x121E DUP3 PUSH2 0x113F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x122E DUP2 PUSH2 0x1213 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1249 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1225 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1274 JUMPI PUSH2 0x1273 PUSH2 0x124F JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1291 JUMPI PUSH2 0x1290 PUSH2 0x1254 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x12AD JUMPI PUSH2 0x12AC PUSH2 0x1259 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12CB JUMPI PUSH2 0x12CA PUSH2 0x10CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12E9 JUMPI PUSH2 0x12E8 PUSH2 0x10D1 JUMP JUMPDEST JUMPDEST PUSH2 0x12F5 DUP6 DUP3 DUP7 ADD PUSH2 0x125E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x131C DUP2 PUSH2 0x1301 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x135F DUP4 DUP6 PUSH2 0x1322 JUMP JUMPDEST SWAP4 POP PUSH2 0x136C DUP4 DUP6 DUP5 PUSH2 0x1333 JUMP JUMPDEST PUSH2 0x1375 DUP4 PUSH2 0x1342 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1395 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x13A2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1313 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x13B5 DUP2 DUP5 DUP7 PUSH2 0x1353 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13DC JUMPI PUSH2 0x13DB PUSH2 0x13C0 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13EE DUP2 PUSH2 0x1301 JUMP JUMPDEST DUP2 EQ PUSH2 0x13F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x140B DUP2 PUSH2 0x13E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x142A JUMPI PUSH2 0x1429 PUSH2 0x10CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1448 JUMPI PUSH2 0x1447 PUSH2 0x10D1 JUMP JUMPDEST JUMPDEST PUSH2 0x1454 DUP7 DUP3 DUP8 ADD PUSH2 0x13C5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1465 DUP7 DUP3 DUP8 ADD PUSH2 0x13FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1476 DUP7 DUP3 DUP8 ADD PUSH2 0x13FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1493 DUP2 PUSH2 0x1480 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14AE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x148A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14BD DUP2 PUSH2 0x1213 JUMP JUMPDEST DUP2 EQ PUSH2 0x14C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14DA DUP2 PUSH2 0x14B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14F6 JUMPI PUSH2 0x14F5 PUSH2 0x10CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1504 DUP5 DUP3 DUP6 ADD PUSH2 0x14CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1516 DUP2 PUSH2 0x119D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1531 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x150D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1556 DUP2 PUSH2 0x1537 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1576 JUMPI PUSH2 0x1575 PUSH2 0x10CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1584 DUP8 DUP3 DUP9 ADD PUSH2 0x1547 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15A5 JUMPI PUSH2 0x15A4 PUSH2 0x10D1 JUMP JUMPDEST JUMPDEST PUSH2 0x15B1 DUP8 DUP3 DUP9 ADD PUSH2 0x125E JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x40 PUSH2 0x15C4 DUP8 DUP3 DUP9 ADD PUSH2 0x11BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F5 PUSH2 0x15F0 PUSH2 0x15EB DUP5 PUSH2 0x113F JUMP JUMPDEST PUSH2 0x15D0 JUMP JUMPDEST PUSH2 0x113F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1607 DUP3 PUSH2 0x15DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1619 DUP3 PUSH2 0x15FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1629 DUP2 PUSH2 0x160E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1644 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1620 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1660 JUMPI PUSH2 0x165F PUSH2 0x10CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x166E DUP5 DUP3 DUP6 ADD PUSH2 0x1188 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1680 DUP2 PUSH2 0x1480 JUMP JUMPDEST DUP2 EQ PUSH2 0x168B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x169D DUP2 PUSH2 0x1677 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16BC JUMPI PUSH2 0x16BB PUSH2 0x10CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16DA JUMPI PUSH2 0x16D9 PUSH2 0x10D1 JUMP JUMPDEST JUMPDEST PUSH2 0x16E6 DUP7 DUP3 DUP8 ADD PUSH2 0x13C5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16F7 DUP7 DUP3 DUP8 ADD PUSH2 0x168E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1708 DUP7 DUP3 DUP8 ADD PUSH2 0x11BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x173B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1720 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1752 DUP3 PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x175C DUP2 DUP6 PUSH2 0x1322 JUMP JUMPDEST SWAP4 POP PUSH2 0x176C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x171D JUMP JUMPDEST PUSH2 0x1775 DUP2 PUSH2 0x1342 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x179A DUP2 DUP6 PUSH2 0x1747 JUMP JUMPDEST SWAP1 POP PUSH2 0x17A9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x150D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x17B9 DUP2 PUSH2 0x10D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E3 DUP2 PUSH2 0x115F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17FE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x17DA JUMP JUMPDEST PUSH2 0x180B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x150D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x1830 JUMPI PUSH2 0x182F PUSH2 0x1812 JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x1841 JUMPI PUSH2 0x1840 PUSH2 0x1817 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x186E JUMPI PUSH2 0x186D PUSH2 0x10CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x187C DUP6 DUP3 DUP7 ADD PUSH2 0x13FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x188D DUP6 DUP3 DUP7 ADD PUSH2 0x13FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18B1 DUP2 DUP10 PUSH2 0x1747 JUMP JUMPDEST SWAP1 POP PUSH2 0x18C0 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x150D JUMP JUMPDEST PUSH2 0x18CD PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1225 JUMP JUMPDEST PUSH2 0x18DA PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x150D JUMP JUMPDEST PUSH2 0x18E7 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x18F4 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1313 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1914 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1929 DUP2 PUSH2 0x11A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1945 JUMPI PUSH2 0x1944 PUSH2 0x10CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1953 DUP5 DUP3 DUP6 ADD PUSH2 0x191A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C9 PUSH1 0x26 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x19D4 DUP3 PUSH2 0x196D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19F8 DUP2 PUSH2 0x19BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A35 PUSH1 0x20 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A40 DUP3 PUSH2 0x19FF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A64 DUP2 PUSH2 0x1A28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x1A97 JUMPI PUSH2 0x1A96 PUSH2 0x1A6B JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1AB9 JUMPI PUSH2 0x1AB8 PUSH2 0x1A70 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x1AD5 JUMPI PUSH2 0x1AD4 PUSH2 0x1A75 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E646572206E6F7420456E747279506F696E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B13 PUSH1 0x15 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1B1E DUP3 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B42 DUP2 PUSH2 0x1B06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D757374206F7665727269646500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B7F PUSH1 0xD DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8A DUP3 PUSH2 0x1B49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BAE DUP2 PUSH2 0x1B72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x566572696679696E675061796D61737465723A20696E76616C6964207369676E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6174757265206C656E67746820696E207061796D6173746572416E6444617461 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C11 PUSH1 0x40 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C1C DUP3 PUSH2 0x1BB5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C40 DUP2 PUSH2 0x1C04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C81 DUP3 PUSH2 0x119D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1CB3 JUMPI PUSH2 0x1CB2 PUSH2 0x1C47 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D23 PUSH1 0x18 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2E DUP3 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D52 DUP2 PUSH2 0x1D16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8F PUSH1 0x1F DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D9A DUP3 PUSH2 0x1D59 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DBE DUP2 PUSH2 0x1D82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E21 PUSH1 0x22 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1E2C DUP3 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E50 DUP2 PUSH2 0x1E14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E6D DUP2 PUSH2 0x1E57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1E88 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x148A JUMP JUMPDEST PUSH2 0x1E95 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1E64 JUMP JUMPDEST PUSH2 0x1EA2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x148A JUMP JUMPDEST PUSH2 0x1EAF PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x148A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT SWAP15 0xA8 0xEC 0xD PUSH4 0x6F869724 PUSH13 0x1DFD6F969F6623F1C34E05158D PUSH13 0x4FD6EF0D4063AB64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "751:4199:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3094:141:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2721:149;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;884:40:14;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:8;;;;;;;;;;;;;:::i;:::-;;1201:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4613:335:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2498:377;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1190:46;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1143:186:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;471:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3588:83;;;;;;;;;;;;;:::i;:::-;;3890:133;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3318:111;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2474:105;;;:::i;:::-;;2074:198:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;632:290:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3094:141;1094:13:8;:11;:13::i;:::-;3173:10:0::1;:19;;;3201:9;3212:15;3173:55;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;3094:141:::0;:::o;2721:149::-;1094:13:8;:11;:13::i;:::-;2817:10:0::1;:21;;;2839:15;2856:6;2817:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2721:149:::0;;:::o;884:40:14:-;;;:::o;1824:101:8:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;4613:335:14:-;4697:17;4716;4735:24;;4809:16;;981:2;4809:57;1034:2;4809:57;;;;;;;:::i;:::-;4798:86;;;;;;;:::i;:::-;4771:113;;;;;;;;4906:16;;1034:2;4906:35;;;;;;;;;:::i;:::-;4894:47;;;;4613:335;;;;;;;:::o;2498:377::-;2609:7;2674:12;2679:6;2674:4;:12::i;:::-;2704:13;2743:4;2766:11;:31;2778:18;:6;:16;:18::i;:::-;2766:31;;;;;;;;;;;;;;;;2815:10;2843;2646:221;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2636:232;;;;;;2629:239;;2498:377;;;;;:::o;1190:46::-;;;;;;;;;;;;;;;;;:::o;1143:186:0:-;1251:24;:22;:24::i;:::-;1285:37;1293:4;1299:7;;1308:13;1285:7;:37::i;:::-;1143:186;;;;:::o;471:39::-;;;:::o;3588:83::-;1094:13:8;:11;:13::i;:::-;3640:10:0::1;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3588:83::o:0;3890:133::-;1094:13:8;:11;:13::i;:::-;3975:10:0::1;:24;;;4000:15;3975:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3890:133:::0;:::o;3318:111::-;3361:7;3387:10;:20;;;3416:4;3387:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3380:42;;3318:111;:::o;2474:105::-;2518:10;:20;;;2547:9;2566:4;2518:54;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2474:105::o;2074:198:8:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;632:290:0:-;764:20;786:22;821:24;:22;:24::i;:::-;862:53;887:6;895:10;907:7;862:24;:53::i;:::-;855:60;;;;632:290;;;;;;:::o;1359:130:8:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;1520:419:14:-;1588:16;1617:18;;1638:6;:23;;;;;;;;:::i;:::-;1617:44;;;;1706:6;1762:2;1756:3;1744:10;1740:20;1736:29;1791:4;1785:11;1778:18;;1840:2;1835:3;1831:12;1826:3;1822:22;1816:4;1809:36;1870:3;1865;1858:16;1919:3;1914;1909:2;1904:3;1900:12;1887:36;1681:252;;;;1520:419;;;:::o;1662:281:7:-;1735:7;1754:12;1890:6;1877:20;1869:28;;1930:4;1907:29;;;1662:281;;;:::o;4087:135:0:-;4178:10;4156:33;;:10;:33;;;4148:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;4087:135::o;2089:285::-;2344:23;;;;;;;;;;:::i;:::-;;;;;;;;3660:841:14;3805:20;3827:22;3890:17;3909;3928:24;;3956:46;3978:6;:23;;;;;;;;:::i;:::-;3956:21;:46::i;:::-;3889:113;;;;;;;;4041:2;4021:9;;:16;;:22;:48;;;;4067:2;4047:9;;:16;;:22;4021:48;4013:125;;;;;;;;;;;;:::i;:::-;;;;;;;;;4148:12;4163:69;4192:39;4200:6;4208:10;4220;4192:7;:39::i;:::-;4163:28;:69::i;:::-;4148:84;;4242:11;:31;4254:18;:6;:16;:18::i;:::-;4242:31;;;;;;;;;;;;;;;;:33;;;;;;;;;:::i;:::-;;;;;;4309:30;4323:4;4329:9;;4309:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;:30::i;:::-;4290:49;;:15;:49;;;4286:139;;4366:47;4386:4;4391:10;4402;4366:19;:47::i;:::-;4355:59;;;;;;;;;;;;;;;;;;;;;;;;4286:139;4445:48;4465:5;4471:10;4482;4445:19;:48::i;:::-;4434:60;;;;;;;;;;;;;;;;;;;;;;3660:841;;;;;;;:::o;640:96:9:-;693:7;719:10;712:17;;640:96;:::o;7120:396:11:-;7189:15;7389:34;7383:4;7376:48;7450:4;7444;7437:18;7495:4;7489;7479:21;7468:32;;7120:396;;;:::o;3661:227::-;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;:::-;3872:9;3865:16;;;;3661:227;;;;:::o;2956:218:1:-;3053:7;3157:8;3141:10;3133:19;;:33;;3125:3;3110:10;3102:19;;:26;;3080:9;:17;;3096:1;3080:17;;;3092:1;3080:17;3079:50;;;:88;3072:95;;2956:218;;;;;:::o;2145:730:11:-;2226:7;2235:12;2283:2;2263:9;:16;:22;2259:610;;2301:9;2324;2347:7;2599:4;2588:9;2584:20;2578:27;2573:32;;2648:4;2637:9;2633:20;2627:27;2622:32;;2705:4;2694:9;2690:20;2684:27;2681:1;2676:36;2671:41;;2746:25;2757:4;2763:1;2766;2769;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;2818:1;2822:35;2802:56;;;;2145:730;;;;;;:::o;570:511::-;647:20;638:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;634:441;683:7;634:441;743:29;734:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;730:345;;788:34;;;;;;;;;;:::i;:::-;;;;;;;;730:345;852:35;843:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;839:236;;903:41;;;;;;;;;;:::i;:::-;;;;;;;;839:236;974:30;965:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;961:114;;1020:44;;;;;;;;;;:::i;:::-;;;;;;;;961:114;570:511;;:::o;5009:1456::-;5097:7;5106:12;6021:66;6016:1;6008:10;;:79;6004:161;;;6119:1;6123:30;6103:51;;;;;;6004:161;6259:14;6276:24;6286:4;6292:1;6295;6298;6276:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6259:41;;6332:1;6314:20;;:6;:20;;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;6437:20;6421:37;;;;;5009:1456;;;;;;;;:::o;88:117:15:-;197:1;194;187:12;211:117;320:1;317;310:12;334:93;370:7;410:10;403:5;399:22;388:33;;334:93;;;:::o;433:120::-;505:23;522:5;505:23;:::i;:::-;498:5;495:34;485:62;;543:1;540;533:12;485:62;433:120;:::o;559:137::-;604:5;642:6;629:20;620:29;;658:32;684:5;658:32;:::i;:::-;559:137;;;;:::o;702:327::-;760:6;809:2;797:9;788:7;784:23;780:32;777:119;;;815:79;;:::i;:::-;777:119;935:1;960:52;1004:7;995:6;984:9;980:22;960:52;:::i;:::-;950:62;;906:116;702:327;;;;:::o;1035:126::-;1072:7;1112:42;1105:5;1101:54;1090:65;;1035:126;;;:::o;1167:104::-;1212:7;1241:24;1259:5;1241:24;:::i;:::-;1230:35;;1167:104;;;:::o;1277:138::-;1358:32;1384:5;1358:32;:::i;:::-;1351:5;1348:43;1338:71;;1405:1;1402;1395:12;1338:71;1277:138;:::o;1421:155::-;1475:5;1513:6;1500:20;1491:29;;1529:41;1564:5;1529:41;:::i;:::-;1421:155;;;;:::o;1582:77::-;1619:7;1648:5;1637:16;;1582:77;;;:::o;1665:122::-;1738:24;1756:5;1738:24;:::i;:::-;1731:5;1728:35;1718:63;;1777:1;1774;1767:12;1718:63;1665:122;:::o;1793:139::-;1839:5;1877:6;1864:20;1855:29;;1893:33;1920:5;1893:33;:::i;:::-;1793:139;;;;:::o;1938:490::-;2014:6;2022;2071:2;2059:9;2050:7;2046:23;2042:32;2039:119;;;2077:79;;:::i;:::-;2039:119;2197:1;2222:61;2275:7;2266:6;2255:9;2251:22;2222:61;:::i;:::-;2212:71;;2168:125;2332:2;2358:53;2403:7;2394:6;2383:9;2379:22;2358:53;:::i;:::-;2348:63;;2303:118;1938:490;;;;;:::o;2434:96::-;2471:7;2500:24;2518:5;2500:24;:::i;:::-;2489:35;;2434:96;;;:::o;2536:118::-;2623:24;2641:5;2623:24;:::i;:::-;2618:3;2611:37;2536:118;;:::o;2660:222::-;2753:4;2791:2;2780:9;2776:18;2768:26;;2804:71;2872:1;2861:9;2857:17;2848:6;2804:71;:::i;:::-;2660:222;;;;:::o;2888:117::-;2997:1;2994;2987:12;3011:117;3120:1;3117;3110:12;3134:117;3243:1;3240;3233:12;3270:552;3327:8;3337:6;3387:3;3380:4;3372:6;3368:17;3364:27;3354:122;;3395:79;;:::i;:::-;3354:122;3508:6;3495:20;3485:30;;3538:18;3530:6;3527:30;3524:117;;;3560:79;;:::i;:::-;3524:117;3674:4;3666:6;3662:17;3650:29;;3728:3;3720:4;3712:6;3708:17;3698:8;3694:32;3691:41;3688:128;;;3735:79;;:::i;:::-;3688:128;3270:552;;;;;:::o;3828:527::-;3898:6;3906;3955:2;3943:9;3934:7;3930:23;3926:32;3923:119;;;3961:79;;:::i;:::-;3923:119;4109:1;4098:9;4094:17;4081:31;4139:18;4131:6;4128:30;4125:117;;;4161:79;;:::i;:::-;4125:117;4274:64;4330:7;4321:6;4310:9;4306:22;4274:64;:::i;:::-;4256:82;;;;4052:296;3828:527;;;;;:::o;4361:97::-;4397:7;4437:14;4430:5;4426:26;4415:37;;4361:97;;;:::o;4464:115::-;4549:23;4566:5;4549:23;:::i;:::-;4544:3;4537:36;4464:115;;:::o;4585:168::-;4668:11;4702:6;4697:3;4690:19;4742:4;4737:3;4733:14;4718:29;;4585:168;;;;:::o;4759:146::-;4856:6;4851:3;4846;4833:30;4897:1;4888:6;4883:3;4879:16;4872:27;4759:146;;;:::o;4911:102::-;4952:6;5003:2;4999:7;4994:2;4987:5;4983:14;4979:28;4969:38;;4911:102;;;:::o;5041:314::-;5137:3;5158:70;5221:6;5216:3;5158:70;:::i;:::-;5151:77;;5238:56;5287:6;5282:3;5275:5;5238:56;:::i;:::-;5319:29;5341:6;5319:29;:::i;:::-;5314:3;5310:39;5303:46;;5041:314;;;;;:::o;5361:541::-;5534:4;5572:2;5561:9;5557:18;5549:26;;5585:69;5651:1;5640:9;5636:17;5627:6;5585:69;:::i;:::-;5664:70;5730:2;5719:9;5715:18;5706:6;5664:70;:::i;:::-;5781:9;5775:4;5771:20;5766:2;5755:9;5751:18;5744:48;5809:86;5890:4;5881:6;5873;5809:86;:::i;:::-;5801:94;;5361:541;;;;;;;:::o;5908:117::-;6017:1;6014;6007:12;6059:237;6137:5;6178:3;6169:6;6164:3;6160:16;6156:26;6153:113;;;6185:79;;:::i;:::-;6153:113;6284:6;6275:15;;6059:237;;;;:::o;6302:120::-;6374:23;6391:5;6374:23;:::i;:::-;6367:5;6364:34;6354:62;;6412:1;6409;6402:12;6354:62;6302:120;:::o;6428:137::-;6473:5;6511:6;6498:20;6489:29;;6527:32;6553:5;6527:32;:::i;:::-;6428:137;;;;:::o;6571:839::-;6678:6;6686;6694;6743:2;6731:9;6722:7;6718:23;6714:32;6711:119;;;6749:79;;:::i;:::-;6711:119;6897:1;6886:9;6882:17;6869:31;6927:18;6919:6;6916:30;6913:117;;;6949:79;;:::i;:::-;6913:117;7054:85;7131:7;7122:6;7111:9;7107:22;7054:85;:::i;:::-;7044:95;;6840:309;7188:2;7214:52;7258:7;7249:6;7238:9;7234:22;7214:52;:::i;:::-;7204:62;;7159:117;7315:2;7341:52;7385:7;7376:6;7365:9;7361:22;7341:52;:::i;:::-;7331:62;;7286:117;6571:839;;;;;:::o;7416:77::-;7453:7;7482:5;7471:16;;7416:77;;;:::o;7499:118::-;7586:24;7604:5;7586:24;:::i;:::-;7581:3;7574:37;7499:118;;:::o;7623:222::-;7716:4;7754:2;7743:9;7739:18;7731:26;;7767:71;7835:1;7824:9;7820:17;7811:6;7767:71;:::i;:::-;7623:222;;;;:::o;7851:122::-;7924:24;7942:5;7924:24;:::i;:::-;7917:5;7914:35;7904:63;;7963:1;7960;7953:12;7904:63;7851:122;:::o;7979:139::-;8025:5;8063:6;8050:20;8041:29;;8079:33;8106:5;8079:33;:::i;:::-;7979:139;;;;:::o;8124:329::-;8183:6;8232:2;8220:9;8211:7;8207:23;8203:32;8200:119;;;8238:79;;:::i;:::-;8200:119;8358:1;8383:53;8428:7;8419:6;8408:9;8404:22;8383:53;:::i;:::-;8373:63;;8329:117;8124:329;;;;:::o;8459:118::-;8546:24;8564:5;8546:24;:::i;:::-;8541:3;8534:37;8459:118;;:::o;8583:222::-;8676:4;8714:2;8703:9;8699:18;8691:26;;8727:71;8795:1;8784:9;8780:17;8771:6;8727:71;:::i;:::-;8583:222;;;;:::o;8811:113::-;8898:1;8891:5;8888:12;8878:40;;8914:1;8911;8904:12;8878:40;8811:113;:::o;8930:167::-;8990:5;9028:6;9015:20;9006:29;;9044:47;9085:5;9044:47;:::i;:::-;8930:167;;;;:::o;9103:845::-;9205:6;9213;9221;9229;9278:2;9266:9;9257:7;9253:23;9249:32;9246:119;;;9284:79;;:::i;:::-;9246:119;9404:1;9429:67;9488:7;9479:6;9468:9;9464:22;9429:67;:::i;:::-;9419:77;;9375:131;9573:2;9562:9;9558:18;9545:32;9604:18;9596:6;9593:30;9590:117;;;9626:79;;:::i;:::-;9590:117;9739:64;9795:7;9786:6;9775:9;9771:22;9739:64;:::i;:::-;9721:82;;;;9516:297;9852:2;9878:53;9923:7;9914:6;9903:9;9899:22;9878:53;:::i;:::-;9868:63;;9823:118;9103:845;;;;;;;:::o;9954:60::-;9982:3;10003:5;9996:12;;9954:60;;;:::o;10020:142::-;10070:9;10103:53;10121:34;10130:24;10148:5;10130:24;:::i;:::-;10121:34;:::i;:::-;10103:53;:::i;:::-;10090:66;;10020:142;;;:::o;10168:126::-;10218:9;10251:37;10282:5;10251:37;:::i;:::-;10238:50;;10168:126;;;:::o;10300:145::-;10369:9;10402:37;10433:5;10402:37;:::i;:::-;10389:50;;10300:145;;;:::o;10451:169::-;10557:56;10607:5;10557:56;:::i;:::-;10552:3;10545:69;10451:169;;:::o;10626:260::-;10738:4;10776:2;10765:9;10761:18;10753:26;;10789:90;10876:1;10865:9;10861:17;10852:6;10789:90;:::i;:::-;10626:260;;;;:::o;10892:345::-;10959:6;11008:2;10996:9;10987:7;10983:23;10979:32;10976:119;;;11014:79;;:::i;:::-;10976:119;11134:1;11159:61;11212:7;11203:6;11192:9;11188:22;11159:61;:::i;:::-;11149:71;;11105:125;10892:345;;;;:::o;11243:122::-;11316:24;11334:5;11316:24;:::i;:::-;11309:5;11306:35;11296:63;;11355:1;11352;11345:12;11296:63;11243:122;:::o;11371:139::-;11417:5;11455:6;11442:20;11433:29;;11471:33;11498:5;11471:33;:::i;:::-;11371:139;;;;:::o;11516:843::-;11625:6;11633;11641;11690:2;11678:9;11669:7;11665:23;11661:32;11658:119;;;11696:79;;:::i;:::-;11658:119;11844:1;11833:9;11829:17;11816:31;11874:18;11866:6;11863:30;11860:117;;;11896:79;;:::i;:::-;11860:117;12001:85;12078:7;12069:6;12058:9;12054:22;12001:85;:::i;:::-;11991:95;;11787:309;12135:2;12161:53;12206:7;12197:6;12186:9;12182:22;12161:53;:::i;:::-;12151:63;;12106:118;12263:2;12289:53;12334:7;12325:6;12314:9;12310:22;12289:53;:::i;:::-;12279:63;;12234:118;11516:843;;;;;:::o;12365:98::-;12416:6;12450:5;12444:12;12434:22;;12365:98;;;:::o;12469:246::-;12550:1;12560:113;12574:6;12571:1;12568:13;12560:113;;;12659:1;12654:3;12650:11;12644:18;12640:1;12635:3;12631:11;12624:39;12596:2;12593:1;12589:10;12584:15;;12560:113;;;12707:1;12698:6;12693:3;12689:16;12682:27;12531:184;12469:246;;;:::o;12721:373::-;12807:3;12835:38;12867:5;12835:38;:::i;:::-;12889:70;12952:6;12947:3;12889:70;:::i;:::-;12882:77;;12968:65;13026:6;13021:3;13014:4;13007:5;13003:16;12968:65;:::i;:::-;13058:29;13080:6;13058:29;:::i;:::-;13053:3;13049:39;13042:46;;12811:283;12721:373;;;;:::o;13100:419::-;13239:4;13277:2;13266:9;13262:18;13254:26;;13326:9;13320:4;13316:20;13312:1;13301:9;13297:17;13290:47;13354:76;13425:4;13416:6;13354:76;:::i;:::-;13346:84;;13440:72;13508:2;13497:9;13493:18;13484:6;13440:72;:::i;:::-;13100:419;;;;;:::o;13525:115::-;13610:23;13627:5;13610:23;:::i;:::-;13605:3;13598:36;13525:115;;:::o;13646:218::-;13737:4;13775:2;13764:9;13760:18;13752:26;;13788:69;13854:1;13843:9;13839:17;13830:6;13788:69;:::i;:::-;13646:218;;;;:::o;13870:142::-;13973:32;13999:5;13973:32;:::i;:::-;13968:3;13961:45;13870:142;;:::o;14018:364::-;14155:4;14193:2;14182:9;14178:18;14170:26;;14206:87;14290:1;14279:9;14275:17;14266:6;14206:87;:::i;:::-;14303:72;14371:2;14360:9;14356:18;14347:6;14303:72;:::i;:::-;14018:364;;;;;:::o;14388:117::-;14497:1;14494;14487:12;14511:117;14620:1;14617;14610:12;14634:469;14739:9;14750;14788:8;14776:10;14773:24;14770:111;;;14800:79;;:::i;:::-;14770:111;14906:6;14896:8;14893:20;14890:107;;;14916:79;;:::i;:::-;14890:107;15047:1;15035:10;15031:18;15023:6;15019:31;15006:44;;15086:10;15076:8;15072:25;15059:38;;14634:469;;;;;;;:::o;15109:470::-;15175:6;15183;15232:2;15220:9;15211:7;15207:23;15203:32;15200:119;;;15238:79;;:::i;:::-;15200:119;15358:1;15383:52;15427:7;15418:6;15407:9;15403:22;15383:52;:::i;:::-;15373:62;;15329:116;15484:2;15510:52;15554:7;15545:6;15534:9;15530:22;15510:52;:::i;:::-;15500:62;;15455:117;15109:470;;;;;:::o;15585:854::-;15832:4;15870:3;15859:9;15855:19;15847:27;;15920:9;15914:4;15910:20;15906:1;15895:9;15891:17;15884:47;15948:76;16019:4;16010:6;15948:76;:::i;:::-;15940:84;;16034:72;16102:2;16091:9;16087:18;16078:6;16034:72;:::i;:::-;16116;16184:2;16173:9;16169:18;16160:6;16116:72;:::i;:::-;16198;16266:2;16255:9;16251:18;16242:6;16198:72;:::i;:::-;16280:71;16346:3;16335:9;16331:19;16322:6;16280:71;:::i;:::-;16361;16427:3;16416:9;16412:19;16403:6;16361:71;:::i;:::-;15585:854;;;;;;;;;:::o;16445:254::-;16554:4;16592:2;16581:9;16577:18;16569:26;;16605:87;16689:1;16678:9;16674:17;16665:6;16605:87;:::i;:::-;16445:254;;;;:::o;16705:143::-;16762:5;16793:6;16787:13;16778:22;;16809:33;16836:5;16809:33;:::i;:::-;16705:143;;;;:::o;16854:351::-;16924:6;16973:2;16961:9;16952:7;16948:23;16944:32;16941:119;;;16979:79;;:::i;:::-;16941:119;17099:1;17124:64;17180:7;17171:6;17160:9;17156:22;17124:64;:::i;:::-;17114:74;;17070:128;16854:351;;;;:::o;17211:169::-;17295:11;17329:6;17324:3;17317:19;17369:4;17364:3;17360:14;17345:29;;17211:169;;;;:::o;17386:225::-;17526:34;17522:1;17514:6;17510:14;17503:58;17595:8;17590:2;17582:6;17578:15;17571:33;17386:225;:::o;17617:366::-;17759:3;17780:67;17844:2;17839:3;17780:67;:::i;:::-;17773:74;;17856:93;17945:3;17856:93;:::i;:::-;17974:2;17969:3;17965:12;17958:19;;17617:366;;;:::o;17989:419::-;18155:4;18193:2;18182:9;18178:18;18170:26;;18242:9;18236:4;18232:20;18228:1;18217:9;18213:17;18206:47;18270:131;18396:4;18270:131;:::i;:::-;18262:139;;17989:419;;;:::o;18414:182::-;18554:34;18550:1;18542:6;18538:14;18531:58;18414:182;:::o;18602:366::-;18744:3;18765:67;18829:2;18824:3;18765:67;:::i;:::-;18758:74;;18841:93;18930:3;18841:93;:::i;:::-;18959:2;18954:3;18950:12;18943:19;;18602:366;;;:::o;18974:419::-;19140:4;19178:2;19167:9;19163:18;19155:26;;19227:9;19221:4;19217:20;19213:1;19202:9;19198:17;19191:47;19255:131;19381:4;19255:131;:::i;:::-;19247:139;;18974:419;;;:::o;19399:117::-;19508:1;19505;19498:12;19522:117;19631:1;19628;19621:12;19645:117;19754:1;19751;19744:12;19768:724;19845:4;19851:6;19907:11;19894:25;20007:1;20001:4;19997:12;19986:8;19970:14;19966:29;19962:48;19942:18;19938:73;19928:168;;20015:79;;:::i;:::-;19928:168;20127:18;20117:8;20113:33;20105:41;;20179:4;20166:18;20156:28;;20207:18;20199:6;20196:30;20193:117;;;20229:79;;:::i;:::-;20193:117;20337:2;20331:4;20327:13;20319:21;;20394:4;20386:6;20382:17;20366:14;20362:38;20356:4;20352:49;20349:136;;;20404:79;;:::i;:::-;20349:136;19858:634;19768:724;;;;;:::o;20498:171::-;20638:23;20634:1;20626:6;20622:14;20615:47;20498:171;:::o;20675:366::-;20817:3;20838:67;20902:2;20897:3;20838:67;:::i;:::-;20831:74;;20914:93;21003:3;20914:93;:::i;:::-;21032:2;21027:3;21023:12;21016:19;;20675:366;;;:::o;21047:419::-;21213:4;21251:2;21240:9;21236:18;21228:26;;21300:9;21294:4;21290:20;21286:1;21275:9;21271:17;21264:47;21328:131;21454:4;21328:131;:::i;:::-;21320:139;;21047:419;;;:::o;21472:163::-;21612:15;21608:1;21600:6;21596:14;21589:39;21472:163;:::o;21641:366::-;21783:3;21804:67;21868:2;21863:3;21804:67;:::i;:::-;21797:74;;21880:93;21969:3;21880:93;:::i;:::-;21998:2;21993:3;21989:12;21982:19;;21641:366;;;:::o;22013:419::-;22179:4;22217:2;22206:9;22202:18;22194:26;;22266:9;22260:4;22256:20;22252:1;22241:9;22237:17;22230:47;22294:131;22420:4;22294:131;:::i;:::-;22286:139;;22013:419;;;:::o;22438:251::-;22578:34;22574:1;22566:6;22562:14;22555:58;22647:34;22642:2;22634:6;22630:15;22623:59;22438:251;:::o;22695:366::-;22837:3;22858:67;22922:2;22917:3;22858:67;:::i;:::-;22851:74;;22934:93;23023:3;22934:93;:::i;:::-;23052:2;23047:3;23043:12;23036:19;;22695:366;;;:::o;23067:419::-;23233:4;23271:2;23260:9;23256:18;23248:26;;23320:9;23314:4;23310:20;23306:1;23295:9;23291:17;23284:47;23348:131;23474:4;23348:131;:::i;:::-;23340:139;;23067:419;;;:::o;23492:180::-;23540:77;23537:1;23530:88;23637:4;23634:1;23627:15;23661:4;23658:1;23651:15;23678:233;23717:3;23740:24;23758:5;23740:24;:::i;:::-;23731:33;;23786:66;23779:5;23776:77;23773:103;;23856:18;;:::i;:::-;23773:103;23903:1;23896:5;23892:13;23885:20;;23678:233;;;:::o;23917:180::-;23965:77;23962:1;23955:88;24062:4;24059:1;24052:15;24086:4;24083:1;24076:15;24103:174;24243:26;24239:1;24231:6;24227:14;24220:50;24103:174;:::o;24283:366::-;24425:3;24446:67;24510:2;24505:3;24446:67;:::i;:::-;24439:74;;24522:93;24611:3;24522:93;:::i;:::-;24640:2;24635:3;24631:12;24624:19;;24283:366;;;:::o;24655:419::-;24821:4;24859:2;24848:9;24844:18;24836:26;;24908:9;24902:4;24898:20;24894:1;24883:9;24879:17;24872:47;24936:131;25062:4;24936:131;:::i;:::-;24928:139;;24655:419;;;:::o;25080:181::-;25220:33;25216:1;25208:6;25204:14;25197:57;25080:181;:::o;25267:366::-;25409:3;25430:67;25494:2;25489:3;25430:67;:::i;:::-;25423:74;;25506:93;25595:3;25506:93;:::i;:::-;25624:2;25619:3;25615:12;25608:19;;25267:366;;;:::o;25639:419::-;25805:4;25843:2;25832:9;25828:18;25820:26;;25892:9;25886:4;25882:20;25878:1;25867:9;25863:17;25856:47;25920:131;26046:4;25920:131;:::i;:::-;25912:139;;25639:419;;;:::o;26064:221::-;26204:34;26200:1;26192:6;26188:14;26181:58;26273:4;26268:2;26260:6;26256:15;26249:29;26064:221;:::o;26291:366::-;26433:3;26454:67;26518:2;26513:3;26454:67;:::i;:::-;26447:74;;26530:93;26619:3;26530:93;:::i;:::-;26648:2;26643:3;26639:12;26632:19;;26291:366;;;:::o;26663:419::-;26829:4;26867:2;26856:9;26852:18;26844:26;;26916:9;26910:4;26906:20;26902:1;26891:9;26887:17;26880:47;26944:131;27070:4;26944:131;:::i;:::-;26936:139;;26663:419;;;:::o;27088:86::-;27123:7;27163:4;27156:5;27152:16;27141:27;;27088:86;;;:::o;27180:112::-;27263:22;27279:5;27263:22;:::i;:::-;27258:3;27251:35;27180:112;;:::o;27298:545::-;27471:4;27509:3;27498:9;27494:19;27486:27;;27523:71;27591:1;27580:9;27576:17;27567:6;27523:71;:::i;:::-;27604:68;27668:2;27657:9;27653:18;27644:6;27604:68;:::i;:::-;27682:72;27750:2;27739:9;27735:18;27726:6;27682:72;:::i;:::-;27764;27832:2;27821:9;27817:18;27808:6;27764:72;:::i;:::-;27298:545;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1583600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addStake(uint32)": "infinite",
								"deposit()": "infinite",
								"entryPoint()": "infinite",
								"getDeposit()": "infinite",
								"getHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint48,uint48)": "infinite",
								"owner()": "2545",
								"parsePaymasterAndData(bytes)": "infinite",
								"postOp(uint8,bytes,uint256)": "infinite",
								"renounceOwnership()": "30488",
								"senderNonce(address)": "2903",
								"transferOwnership(address)": "30810",
								"unlockStake()": "infinite",
								"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "infinite",
								"verifyingSigner()": "infinite",
								"withdrawStake(address)": "infinite",
								"withdrawTo(address,uint256)": "infinite"
							},
							"internal": {
								"_validatePaymasterUserOp(struct UserOperation calldata,bytes32,uint256)": "infinite",
								"pack(struct UserOperation calldata)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 4950,
									"name": "PUSH",
									"source": 14,
									"value": "C0"
								},
								{
									"begin": 751,
									"end": 4950,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 751,
									"end": 4950,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "CODESIZE",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 1043,
									"end": 1184,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "tag",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1120,
									"end": 1131,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 577,
									"end": 588,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 564,
									"end": 588,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 564,
									"end": 588,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 564,
									"end": 588,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 564,
									"end": 588,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 564,
									"end": 588,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 564,
									"end": 588,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 564,
									"end": 588,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 564,
									"end": 588,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 564,
									"end": 588,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 564,
									"end": 588,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 517,
									"end": 595,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1161,
									"end": 1177,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1143,
									"end": 1177,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1143,
									"end": 1177,
									"modifierDepth": 1,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1143,
									"end": 1177,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "A0"
								},
								{
									"begin": 1143,
									"end": 1177,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1143,
									"end": 1177,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1143,
									"end": 1177,
									"modifierDepth": 1,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1143,
									"end": 1177,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1143,
									"end": 1177,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1143,
									"end": 1177,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1143,
									"end": 1177,
									"modifierDepth": 1,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1184,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 751,
									"end": 4950,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 751,
									"end": 4950,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2543,
									"end": 2551,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2597,
									"end": 2605,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2587,
									"end": 2595,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 8,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 8
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 683,
									"name": "tag",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 568,
									"end": 683,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 624,
									"end": 631,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 671,
									"end": 676,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 653,
									"end": 677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 653,
									"end": 677,
									"name": "tag",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 642,
									"end": 677,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 642,
									"end": 677,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 568,
									"end": 683,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 689,
									"end": 849,
									"name": "tag",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 689,
									"end": 849,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 818,
									"end": 823,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 781,
									"end": 824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 781,
									"end": 824,
									"name": "tag",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 781,
									"end": 824,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 774,
									"end": 779,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 771,
									"end": 825,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 761,
									"end": 843,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 839,
									"end": 840,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 829,
									"end": 841,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 761,
									"end": 843,
									"name": "tag",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 689,
									"end": 849,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 689,
									"end": 849,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "tag",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 931,
									"end": 936,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 962,
									"end": 968,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 956,
									"end": 969,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 947,
									"end": 969,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 947,
									"end": 969,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1024,
									"end": 1029,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 978,
									"end": 1030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "tag",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 855,
									"end": 1036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1042,
									"end": 1164,
									"name": "tag",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 1042,
									"end": 1164,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1115,
									"end": 1139,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 1133,
									"end": 1138,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1115,
									"end": 1139,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 1115,
									"end": 1139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1115,
									"end": 1139,
									"name": "tag",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 1115,
									"end": 1139,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1108,
									"end": 1113,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1105,
									"end": 1140,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 1095,
									"end": 1158,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 1095,
									"end": 1158,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1154,
									"end": 1155,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1151,
									"end": 1152,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1144,
									"end": 1156,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1095,
									"end": 1158,
									"name": "tag",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 1095,
									"end": 1158,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1042,
									"end": 1164,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1042,
									"end": 1164,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "tag",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1227,
									"end": 1232,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1258,
									"end": 1264,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1252,
									"end": 1265,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 1243,
									"end": 1265,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1243,
									"end": 1265,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1274,
									"end": 1307,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 1301,
									"end": 1306,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1274,
									"end": 1307,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 1274,
									"end": 1307,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1274,
									"end": 1307,
									"name": "tag",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 1274,
									"end": 1307,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1170,
									"end": 1313,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1319,
									"end": 1864,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 1319,
									"end": 1864,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1417,
									"end": 1423,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1425,
									"end": 1431,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1474,
									"end": 1476,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1462,
									"end": 1471,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1453,
									"end": 1460,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1449,
									"end": 1472,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 1445,
									"end": 1477,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 1442,
									"end": 1561,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1442,
									"end": 1561,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 1442,
									"end": 1561,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1480,
									"end": 1559,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "48"
								},
								{
									"begin": 1480,
									"end": 1559,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 1480,
									"end": 1559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1480,
									"end": 1559,
									"name": "tag",
									"source": 15,
									"value": "48"
								},
								{
									"begin": 1480,
									"end": 1559,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1442,
									"end": 1561,
									"name": "tag",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 1442,
									"end": 1561,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1600,
									"end": 1601,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1625,
									"end": 1708,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1691,
									"end": 1697,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1680,
									"end": 1689,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1676,
									"end": 1698,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1625,
									"end": 1708,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1625,
									"end": 1708,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1625,
									"end": 1708,
									"name": "tag",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 1625,
									"end": 1708,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1615,
									"end": 1708,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1615,
									"end": 1708,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1571,
									"end": 1718,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1757,
									"end": 1759,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1783,
									"end": 1847,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "50"
								},
								{
									"begin": 1839,
									"end": 1846,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1830,
									"end": 1836,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1819,
									"end": 1828,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1815,
									"end": 1837,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1783,
									"end": 1847,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 1783,
									"end": 1847,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1783,
									"end": 1847,
									"name": "tag",
									"source": 15,
									"value": "50"
								},
								{
									"begin": 1783,
									"end": 1847,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1773,
									"end": 1847,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1773,
									"end": 1847,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1728,
									"end": 1857,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1319,
									"end": 1864,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1319,
									"end": 1864,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1319,
									"end": 1864,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1319,
									"end": 1864,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1319,
									"end": 1864,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1319,
									"end": 1864,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 751,
									"end": 4950,
									"name": "tag",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 751,
									"end": 4950,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 751,
									"end": 4950,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 751,
									"end": 4950,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 751,
									"end": 4950,
									"name": "PUSH",
									"source": 14,
									"value": "A0"
								},
								{
									"begin": 751,
									"end": 4950,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 751,
									"end": 4950,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 4950,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 4950,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 4950,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 751,
									"end": 4950,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 4950,
									"name": "ASSIGNIMMUTABLE",
									"source": 14,
									"value": "2768"
								},
								{
									"begin": 751,
									"end": 4950,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 4950,
									"name": "ASSIGNIMMUTABLE",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 751,
									"end": 4950,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 4950,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 4950,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220119ea8ec0d636f8697246c1dfd6f969f6623f1c34e05158d6c4fd6ef0d4063ab64736f6c63430008120033",
									".code": [
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "A9A23409"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "C399EC88"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "C399EC88"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "D0E30DB0"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "F2FDE38B"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "F465C77E"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "tag",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "A9A23409"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "B0D691FE"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "BB9FE6BF"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "C23A5CEA"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "tag",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "94D4AD60"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "94E1FC19"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "9C90B443"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "tag",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "396CB60"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "205C2878"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "23D9AC9B"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "715018A6"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 751,
											"end": 4950,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3094,
											"end": 3235,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3094,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3094,
											"end": 3235,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3094,
											"end": 3235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3235,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3235,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3094,
											"end": 3235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3094,
											"end": 3235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3235,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3094,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3094,
											"end": 3235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3235,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3094,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3235,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2721,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2721,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 884,
											"end": 924,
											"name": "tag",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 884,
											"end": 924,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 884,
											"end": 924,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 884,
											"end": 924,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 884,
											"end": 924,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 884,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 884,
											"end": 924,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 884,
											"end": 924,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 884,
											"end": 924,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 884,
											"end": 924,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 884,
											"end": 924,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 884,
											"end": 924,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 884,
											"end": 924,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 884,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 884,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 884,
											"end": 924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 884,
											"end": 924,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 884,
											"end": 924,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 884,
											"end": 924,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 884,
											"end": 924,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 884,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 884,
											"end": 924,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 884,
											"end": 924,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 884,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 884,
											"end": 924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 884,
											"end": 924,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 884,
											"end": 924,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 884,
											"end": 924,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 884,
											"end": 924,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 884,
											"end": 924,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 884,
											"end": 924,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 884,
											"end": 924,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 884,
											"end": 924,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 884,
											"end": 924,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "tag",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "tag",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 4613,
											"end": 4948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 4613,
											"end": 4948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "tag",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 4613,
											"end": 4948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "tag",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "tag",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 2498,
											"end": 2875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "tag",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 2498,
											"end": 2875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "tag",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 2498,
											"end": 2875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "tag",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "tag",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "tag",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 1190,
											"end": 1236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "tag",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1190,
											"end": 1236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "tag",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 1190,
											"end": 1236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "tag",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1143,
											"end": 1329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1143,
											"end": 1329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 471,
											"end": 510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 471,
											"end": 510,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 471,
											"end": 510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 471,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 471,
											"end": 510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 471,
											"end": 510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 471,
											"end": 510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 471,
											"end": 510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 471,
											"end": 510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 471,
											"end": 510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 471,
											"end": 510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3671,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3588,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3671,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3671,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3588,
											"end": 3671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3588,
											"end": 3671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3671,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3671,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3588,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3588,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3588,
											"end": 3671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3671,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3588,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3671,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3890,
											"end": 4023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3890,
											"end": 4023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3318,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3318,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2474,
											"end": 2579,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2474,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2474,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2474,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2474,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2474,
											"end": 2579,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2474,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2474,
											"end": 2579,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 922,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 632,
											"end": 922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 632,
											"end": 922,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 632,
											"end": 922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 632,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 632,
											"end": 922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 632,
											"end": 922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 632,
											"end": 922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 632,
											"end": 922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 632,
											"end": 922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 632,
											"end": 922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 632,
											"end": 922,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 632,
											"end": 922,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 632,
											"end": 922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 632,
											"end": 922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 632,
											"end": 922,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3235,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3094,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3183,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3173,
											"end": 3192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3173,
											"end": 3192,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "396CB60"
										},
										{
											"begin": 3201,
											"end": 3210,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3212,
											"end": 3227,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3173,
											"end": 3228,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3228,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2817,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2817,
											"end": 2838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2817,
											"end": 2838,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "205C2878"
										},
										{
											"begin": 2839,
											"end": 2854,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2856,
											"end": 2862,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2817,
											"end": 2863,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2863,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 884,
											"end": 924,
											"name": "tag",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 884,
											"end": 924,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 884,
											"end": 924,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2768"
										},
										{
											"begin": 884,
											"end": 924,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 884,
											"end": 924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "tag",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4697,
											"end": 4714,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4716,
											"end": 4733,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4735,
											"end": 4759,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4735,
											"end": 4759,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4809,
											"end": 4825,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4809,
											"end": 4825,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 981,
											"end": 983,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 4809,
											"end": 4866,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1034,
											"end": 1036,
											"name": "PUSH",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 4809,
											"end": 4866,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4809,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 4809,
											"end": 4866,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4809,
											"end": 4866,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4809,
											"end": 4866,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4809,
											"end": 4866,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4809,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 4809,
											"end": 4866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4809,
											"end": 4866,
											"name": "tag",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 4809,
											"end": 4866,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4798,
											"end": 4884,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4798,
											"end": 4884,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4798,
											"end": 4884,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4798,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 4798,
											"end": 4884,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4798,
											"end": 4884,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4798,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 4798,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4798,
											"end": 4884,
											"name": "tag",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 4798,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4771,
											"end": 4884,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4771,
											"end": 4884,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 4771,
											"end": 4884,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4771,
											"end": 4884,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4771,
											"end": 4884,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4771,
											"end": 4884,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4771,
											"end": 4884,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4771,
											"end": 4884,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4906,
											"end": 4922,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4906,
											"end": 4922,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1034,
											"end": 1036,
											"name": "PUSH",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 4906,
											"end": 4941,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4906,
											"end": 4941,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4906,
											"end": 4941,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4906,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 4906,
											"end": 4941,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4906,
											"end": 4941,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4906,
											"end": 4941,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4906,
											"end": 4941,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4906,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 4906,
											"end": 4941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4906,
											"end": 4941,
											"name": "tag",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 4906,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4894,
											"end": 4941,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4894,
											"end": 4941,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4894,
											"end": 4941,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4894,
											"end": 4941,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "tag",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2616,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2674,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 2679,
											"end": 2685,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2674,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 2674,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2674,
											"end": 2686,
											"name": "tag",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 2674,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2704,
											"end": 2717,
											"name": "CHAINID",
											"source": 14
										},
										{
											"begin": 2743,
											"end": 2747,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 2766,
											"end": 2777,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2766,
											"end": 2797,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2778,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 2778,
											"end": 2784,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 2778,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 2778,
											"end": 2796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2778,
											"end": 2796,
											"name": "tag",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 2778,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2766,
											"end": 2797,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2766,
											"end": 2797,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2766,
											"end": 2797,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2766,
											"end": 2797,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2766,
											"end": 2797,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2766,
											"end": 2797,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2766,
											"end": 2797,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2766,
											"end": 2797,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2766,
											"end": 2797,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2766,
											"end": 2797,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2766,
											"end": 2797,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2766,
											"end": 2797,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2766,
											"end": 2797,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2766,
											"end": 2797,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2797,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2766,
											"end": 2797,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2815,
											"end": 2825,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2843,
											"end": 2853,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 2646,
											"end": 2867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "tag",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2636,
											"end": 2868,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2636,
											"end": 2868,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2636,
											"end": 2868,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2636,
											"end": 2868,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2636,
											"end": 2868,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2636,
											"end": 2868,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2629,
											"end": 2868,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2629,
											"end": 2868,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1251,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1251,
											"end": 1275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1275,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1251,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1293,
											"end": 1297,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1306,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1306,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1285,
											"end": 1322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1322,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1285,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 471,
											"end": 510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 471,
											"end": 510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 471,
											"end": 510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3671,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3588,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3640,
											"end": 3650,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3640,
											"end": 3662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3640,
											"end": 3662,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "BB9FE6BF"
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3640,
											"end": 3664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3640,
											"end": 3664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3664,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3975,
											"end": 3985,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3975,
											"end": 3999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 3999,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 3999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C23A5CEA"
										},
										{
											"begin": 4000,
											"end": 4015,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3975,
											"end": 4016,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3975,
											"end": 4016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3975,
											"end": 4016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4016,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3397,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3387,
											"end": 3407,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3387,
											"end": 3407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3407,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 3416,
											"end": 3420,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3387,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3387,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3387,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2474,
											"end": 2579,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2474,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2528,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2518,
											"end": 2538,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2518,
											"end": 2538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2538,
											"name": "PUSH",
											"source": 0,
											"value": "B760FAF9"
										},
										{
											"begin": 2547,
											"end": 2556,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2570,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2518,
											"end": 2572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2474,
											"end": 2579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2182,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 2154,
											"end": 2227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 922,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 632,
											"end": 922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 764,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 786,
											"end": 808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 821,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 821,
											"end": 845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 821,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 862,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 887,
											"end": 893,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 895,
											"end": 905,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 907,
											"end": 914,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 862,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 862,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 862,
											"end": 915,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 862,
											"end": 915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 855,
											"end": 915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 855,
											"end": 915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 855,
											"end": 915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 855,
											"end": 915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2551,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2597,
											"end": 2605,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2587,
											"end": 2595,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 8,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1939,
											"name": "tag",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 1520,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1604,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1617,
											"end": 1635,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1617,
											"end": 1635,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1644,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1638,
											"end": 1661,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1638,
											"end": 1661,
											"name": "PUSH",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 1638,
											"end": 1661,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1638,
											"end": 1661,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1638,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "184"
										},
										{
											"begin": 1638,
											"end": 1661,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1638,
											"end": 1661,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1638,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 1638,
											"end": 1661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1638,
											"end": 1661,
											"name": "tag",
											"source": 14,
											"value": "184"
										},
										{
											"begin": 1638,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1706,
											"end": 1712,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1762,
											"end": 1764,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1756,
											"end": 1759,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1744,
											"end": 1754,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1740,
											"end": 1760,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1736,
											"end": 1765,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1791,
											"end": 1795,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1785,
											"end": 1796,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1840,
											"end": 1842,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1831,
											"end": 1843,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1826,
											"end": 1829,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1822,
											"end": 1844,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1816,
											"end": 1820,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1809,
											"end": 1845,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1870,
											"end": 1873,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1865,
											"end": 1868,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1858,
											"end": 1874,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1919,
											"end": 1922,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1909,
											"end": 1911,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1904,
											"end": 1907,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1900,
											"end": 1912,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1887,
											"end": 1923,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 1681,
											"end": 1933,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1681,
											"end": 1933,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1681,
											"end": 1933,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1681,
											"end": 1933,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1520,
											"end": 1939,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1520,
											"end": 1939,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1520,
											"end": 1939,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1520,
											"end": 1939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1662,
											"end": 1943,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1662,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1742,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1877,
											"end": 1897,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1897,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1897,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 1934,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1936,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1943,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1943,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1943,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4087,
											"end": 4222,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4087,
											"end": 4222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4178,
											"end": 4188,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4156,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4156,
											"end": 4189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4156,
											"end": 4166,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4156,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4156,
											"end": 4189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4156,
											"end": 4189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 4148,
											"end": 4215,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4148,
											"end": 4215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4215,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4148,
											"end": 4215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4215,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4148,
											"end": 4215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 4148,
											"end": 4215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 4148,
											"end": 4215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4215,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 4148,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4148,
											"end": 4215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4215,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4215,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4215,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 4148,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2374,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2089,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2344,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 4501,
											"name": "tag",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 3660,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3805,
											"end": 3825,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3827,
											"end": 3849,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3890,
											"end": 3907,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3909,
											"end": 3926,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3928,
											"end": 3952,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 3928,
											"end": 3952,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3956,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "195"
										},
										{
											"begin": 3978,
											"end": 3984,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "PUSH",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "196"
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 3978,
											"end": 4001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "tag",
											"source": 14,
											"value": "196"
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3956,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 3956,
											"end": 4002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3956,
											"end": 4002,
											"name": "tag",
											"source": 14,
											"value": "195"
										},
										{
											"begin": 3956,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3889,
											"end": 4002,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3889,
											"end": 4002,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3889,
											"end": 4002,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3889,
											"end": 4002,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3889,
											"end": 4002,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3889,
											"end": 4002,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3889,
											"end": 4002,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3889,
											"end": 4002,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4043,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4021,
											"end": 4030,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4021,
											"end": 4030,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4021,
											"end": 4037,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4021,
											"end": 4037,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4021,
											"end": 4043,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4021,
											"end": 4069,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4021,
											"end": 4069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "197"
										},
										{
											"begin": 4021,
											"end": 4069,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4021,
											"end": 4069,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4067,
											"end": 4069,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 4047,
											"end": 4056,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4047,
											"end": 4056,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4047,
											"end": 4063,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4047,
											"end": 4063,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4021,
											"end": 4069,
											"name": "tag",
											"source": 14,
											"value": "197"
										},
										{
											"begin": 4021,
											"end": 4069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "198"
										},
										{
											"begin": 4013,
											"end": 4138,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4138,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4013,
											"end": 4138,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4138,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4013,
											"end": 4138,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4138,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4138,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4013,
											"end": 4138,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 4013,
											"end": 4138,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 4013,
											"end": 4138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4138,
											"name": "tag",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 4013,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4138,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4013,
											"end": 4138,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4138,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4138,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4138,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4138,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4138,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4138,
											"name": "tag",
											"source": 14,
											"value": "198"
										},
										{
											"begin": 4013,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4148,
											"end": 4160,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4163,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 4192,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "202"
										},
										{
											"begin": 4200,
											"end": 4206,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 4208,
											"end": 4218,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4220,
											"end": 4230,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4192,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 4192,
											"end": 4231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4192,
											"end": 4231,
											"name": "tag",
											"source": 14,
											"value": "202"
										},
										{
											"begin": 4192,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4163,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 4163,
											"end": 4232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4163,
											"end": 4232,
											"name": "tag",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 4163,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4148,
											"end": 4232,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4148,
											"end": 4232,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4253,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4254,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 4254,
											"end": 4260,
											"name": "DUP13",
											"source": 14
										},
										{
											"begin": 4254,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 4254,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4254,
											"end": 4272,
											"name": "tag",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 4254,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4275,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4275,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4275,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4275,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4275,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 4242,
											"end": 4275,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 4242,
											"end": 4275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4275,
											"name": "tag",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 4242,
											"end": 4275,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4275,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4275,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4275,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4275,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4275,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "207"
										},
										{
											"begin": 4323,
											"end": 4327,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4329,
											"end": 4338,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4329,
											"end": 4338,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "208"
										},
										{
											"begin": 4309,
											"end": 4339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "tag",
											"source": 14,
											"value": "207"
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4290,
											"end": 4339,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4290,
											"end": 4339,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4290,
											"end": 4305,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2768"
										},
										{
											"begin": 4290,
											"end": 4339,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4290,
											"end": 4339,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4290,
											"end": 4339,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4286,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 4286,
											"end": 4425,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4366,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 4386,
											"end": 4390,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4391,
											"end": 4401,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4402,
											"end": 4412,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4366,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 4366,
											"end": 4413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4366,
											"end": 4413,
											"name": "tag",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 4366,
											"end": 4413,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 4355,
											"end": 4414,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4286,
											"end": 4425,
											"name": "tag",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 4286,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4445,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 4465,
											"end": 4470,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4471,
											"end": 4481,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4482,
											"end": 4492,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4445,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 4445,
											"end": 4493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4445,
											"end": 4493,
											"name": "tag",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 4445,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4434,
											"end": 4494,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4434,
											"end": 4494,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4434,
											"end": 4494,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4434,
											"end": 4494,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4434,
											"end": 4494,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4434,
											"end": 4494,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4434,
											"end": 4494,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4434,
											"end": 4494,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4434,
											"end": 4494,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4434,
											"end": 4494,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4434,
											"end": 4494,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4434,
											"end": 4494,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4434,
											"end": 4494,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4434,
											"end": 4494,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 4434,
											"end": 4494,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4434,
											"end": 4494,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 4434,
											"end": 4494,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4434,
											"end": 4494,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4434,
											"end": 4494,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4434,
											"end": 4494,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4434,
											"end": 4494,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4434,
											"end": 4494,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3660,
											"end": 4501,
											"name": "tag",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 3660,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3660,
											"end": 4501,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3660,
											"end": 4501,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3660,
											"end": 4501,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3660,
											"end": 4501,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3660,
											"end": 4501,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3660,
											"end": 4501,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3660,
											"end": 4501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7120,
											"end": 7516,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 7120,
											"end": 7516,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7189,
											"end": 7204,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7389,
											"end": 7423,
											"name": "PUSH",
											"source": 11,
											"value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
										},
										{
											"begin": 7383,
											"end": 7387,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7376,
											"end": 7424,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7450,
											"end": 7454,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7444,
											"end": 7448,
											"name": "PUSH",
											"source": 11,
											"value": "1C"
										},
										{
											"begin": 7437,
											"end": 7455,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7495,
											"end": 7499,
											"name": "PUSH",
											"source": 11,
											"value": "3C"
										},
										{
											"begin": 7489,
											"end": 7493,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7479,
											"end": 7500,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7468,
											"end": 7500,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7468,
											"end": 7500,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7120,
											"end": 7516,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7120,
											"end": 7516,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7120,
											"end": 7516,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7120,
											"end": 7516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3661,
											"end": 3888,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 3661,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3739,
											"end": 3746,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3759,
											"end": 3776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3796,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 3811,
											"end": 3815,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 3826,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3800,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 3800,
											"end": 3827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3800,
											"end": 3827,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 3800,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3758,
											"end": 3827,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3758,
											"end": 3827,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3758,
											"end": 3827,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3758,
											"end": 3827,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 3849,
											"end": 3854,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3837,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 3837,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3872,
											"end": 3881,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3865,
											"end": 3881,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3865,
											"end": 3881,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3865,
											"end": 3881,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3865,
											"end": 3881,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3661,
											"end": 3888,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3661,
											"end": 3888,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3661,
											"end": 3888,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3661,
											"end": 3888,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3661,
											"end": 3888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 3174,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2956,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "D0"
										},
										{
											"begin": 3141,
											"end": 3151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3152,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 3133,
											"end": 3152,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3166,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3128,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 3110,
											"end": 3120,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3102,
											"end": 3121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 3102,
											"end": 3121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3102,
											"end": 3128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3102,
											"end": 3128,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3080,
											"end": 3089,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3080,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3080,
											"end": 3097,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3080,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 3080,
											"end": 3097,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3080,
											"end": 3097,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3080,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3093,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3080,
											"end": 3097,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 3080,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3129,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3079,
											"end": 3129,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3129,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3167,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3072,
											"end": 3167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3072,
											"end": 3167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2956,
											"end": 3174,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2956,
											"end": 3174,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2956,
											"end": 3174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2956,
											"end": 3174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2956,
											"end": 3174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2956,
											"end": 3174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2226,
											"end": 2233,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2263,
											"end": 2285,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2259,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 2259,
											"end": 2869,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2301,
											"end": 2310,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2333,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2347,
											"end": 2354,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2603,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2588,
											"end": 2597,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2584,
											"end": 2604,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2578,
											"end": 2605,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2573,
											"end": 2605,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2573,
											"end": 2605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2648,
											"end": 2652,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2637,
											"end": 2646,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2633,
											"end": 2653,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2627,
											"end": 2654,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2654,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2654,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2709,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2694,
											"end": 2703,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2710,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2711,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2681,
											"end": 2682,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2712,
											"name": "BYTE",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2712,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 2757,
											"end": 2761,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2763,
											"end": 2764,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2767,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2769,
											"end": 2770,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2746,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 2746,
											"end": 2771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2259,
											"end": 2869,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 2259,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2818,
											"end": 2819,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2857,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2802,
											"end": 2858,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2858,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2858,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2858,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 570,
											"end": 1081,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 570,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 647,
											"end": 667,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 638,
											"end": 667,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 638,
											"end": 667,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 638,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 638,
											"end": 667,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 638,
											"end": 667,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 638,
											"end": 643,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 638,
											"end": 667,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 638,
											"end": 667,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 638,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 638,
											"end": 667,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 638,
											"end": 667,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 638,
											"end": 667,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 634,
											"end": 1075,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 683,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 634,
											"end": 1075,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 743,
											"end": 772,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 734,
											"end": 772,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 734,
											"end": 772,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 734,
											"end": 772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 734,
											"end": 772,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 734,
											"end": 772,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 734,
											"end": 739,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 734,
											"end": 772,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 734,
											"end": 772,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 734,
											"end": 772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 734,
											"end": 772,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 734,
											"end": 772,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 734,
											"end": 772,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 730,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 730,
											"end": 1075,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 788,
											"end": 822,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 822,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 822,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 788,
											"end": 822,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 788,
											"end": 822,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 788,
											"end": 822,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 788,
											"end": 822,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 788,
											"end": 822,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 788,
											"end": 822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 788,
											"end": 822,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 788,
											"end": 822,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 788,
											"end": 822,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 822,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 822,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 822,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 788,
											"end": 822,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 788,
											"end": 822,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 822,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 730,
											"end": 1075,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 730,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 852,
											"end": 887,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 843,
											"end": 887,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 843,
											"end": 887,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 843,
											"end": 887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 843,
											"end": 887,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 843,
											"end": 887,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 843,
											"end": 848,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 843,
											"end": 887,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 843,
											"end": 887,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 843,
											"end": 887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 843,
											"end": 887,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 843,
											"end": 887,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 843,
											"end": 887,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 839,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 839,
											"end": 1075,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 903,
											"end": 944,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 903,
											"end": 944,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 903,
											"end": 944,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 903,
											"end": 944,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 903,
											"end": 944,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 903,
											"end": 944,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 903,
											"end": 944,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 903,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 903,
											"end": 944,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 903,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 903,
											"end": 944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 903,
											"end": 944,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 903,
											"end": 944,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 903,
											"end": 944,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 903,
											"end": 944,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 903,
											"end": 944,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 903,
											"end": 944,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 903,
											"end": 944,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 903,
											"end": 944,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 903,
											"end": 944,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 839,
											"end": 1075,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 839,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 974,
											"end": 1004,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 965,
											"end": 1004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 965,
											"end": 970,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 965,
											"end": 1004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 961,
											"end": 1075,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 1020,
											"end": 1064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1075,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 961,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 570,
											"end": 1081,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 570,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 570,
											"end": 1081,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 570,
											"end": 1081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5097,
											"end": 5104,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5118,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6021,
											"end": 6087,
											"name": "PUSH",
											"source": 11,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6016,
											"end": 6017,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6008,
											"end": 6018,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6008,
											"end": 6018,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 6008,
											"end": 6087,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6165,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 6004,
											"end": 6165,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6119,
											"end": 6120,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6123,
											"end": 6153,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6165,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 6004,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6259,
											"end": 6273,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6286,
											"end": 6290,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6292,
											"end": 6293,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6295,
											"end": 6296,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6298,
											"end": 6299,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 6276,
											"end": 6300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6259,
											"end": 6300,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6259,
											"end": 6300,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6332,
											"end": 6333,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6334,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6314,
											"end": 6334,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6314,
											"end": 6320,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6314,
											"end": 6334,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6314,
											"end": 6334,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6314,
											"end": 6334,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 6310,
											"end": 6411,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6366,
											"end": 6367,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6370,
											"end": 6399,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6411,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 6310,
											"end": 6411,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6429,
											"end": 6435,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6437,
											"end": 6457,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6421,
											"end": 6458,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6421,
											"end": 6458,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6421,
											"end": 6458,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6421,
											"end": 6458,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6421,
											"end": 6458,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5009,
											"end": 6465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 334,
											"end": 427,
											"name": "tag",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 334,
											"end": 427,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 420,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 399,
											"end": 421,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 388,
											"end": 421,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 388,
											"end": 421,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 427,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 334,
											"end": 427,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 427,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 433,
											"end": 553,
											"name": "tag",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 433,
											"end": 553,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 505,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 505,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 505,
											"end": 528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 505,
											"end": 528,
											"name": "tag",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 505,
											"end": 528,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 498,
											"end": 503,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 495,
											"end": 529,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 485,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 485,
											"end": 547,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 543,
											"end": 544,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 541,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 533,
											"end": 545,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 485,
											"end": 547,
											"name": "tag",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 485,
											"end": 547,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 433,
											"end": 553,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 433,
											"end": 553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 559,
											"end": 696,
											"name": "tag",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 559,
											"end": 696,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 604,
											"end": 609,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 648,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 629,
											"end": 649,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 620,
											"end": 649,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 620,
											"end": 649,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 658,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 684,
											"end": 689,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 658,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 658,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 658,
											"end": 690,
											"name": "tag",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 658,
											"end": 690,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 559,
											"end": 696,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 559,
											"end": 696,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 559,
											"end": 696,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 559,
											"end": 696,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 559,
											"end": 696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "tag",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 760,
											"end": 766,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 811,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 797,
											"end": 806,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 788,
											"end": 795,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 784,
											"end": 807,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 780,
											"end": 812,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 777,
											"end": 896,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 777,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 777,
											"end": 896,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 815,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 815,
											"end": 894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 815,
											"end": 894,
											"name": "tag",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 777,
											"end": 896,
											"name": "tag",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 777,
											"end": 896,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 935,
											"end": 936,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 1004,
											"end": 1011,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 995,
											"end": 1001,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 984,
											"end": 993,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 980,
											"end": 1002,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 960,
											"end": 1012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "tag",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 950,
											"end": 1012,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 950,
											"end": 1012,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 906,
											"end": 1022,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 702,
											"end": 1029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1035,
											"end": 1161,
											"name": "tag",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 1035,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1079,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1154,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1105,
											"end": 1110,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1101,
											"end": 1155,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1090,
											"end": 1155,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1090,
											"end": 1155,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1035,
											"end": 1161,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1035,
											"end": 1161,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1035,
											"end": 1161,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1035,
											"end": 1161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1167,
											"end": 1271,
											"name": "tag",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 1167,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1212,
											"end": 1219,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 1259,
											"end": 1264,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1241,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 1241,
											"end": 1265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1241,
											"end": 1265,
											"name": "tag",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 1241,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1230,
											"end": 1265,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1230,
											"end": 1265,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1167,
											"end": 1271,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1167,
											"end": 1271,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1167,
											"end": 1271,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1167,
											"end": 1271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1277,
											"end": 1415,
											"name": "tag",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 1277,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1358,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 1384,
											"end": 1389,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1358,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 1358,
											"end": 1390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1358,
											"end": 1390,
											"name": "tag",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 1358,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1348,
											"end": 1391,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 1338,
											"end": 1409,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1405,
											"end": 1406,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1402,
											"end": 1403,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1395,
											"end": 1407,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1409,
											"name": "tag",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 1338,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1277,
											"end": 1415,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1277,
											"end": 1415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1421,
											"end": 1576,
											"name": "tag",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 1421,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1475,
											"end": 1480,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1500,
											"end": 1520,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1491,
											"end": 1520,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1491,
											"end": 1520,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1529,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1529,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 1529,
											"end": 1570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1529,
											"end": 1570,
											"name": "tag",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 1529,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1421,
											"end": 1576,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1421,
											"end": 1576,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1421,
											"end": 1576,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1421,
											"end": 1576,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1421,
											"end": 1576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1582,
											"end": 1659,
											"name": "tag",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 1582,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1619,
											"end": 1626,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1653,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1653,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1653,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1582,
											"end": 1659,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1582,
											"end": 1659,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1582,
											"end": 1659,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1582,
											"end": 1659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1787,
											"name": "tag",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 1665,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1738,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1738,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 1738,
											"end": 1762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1738,
											"end": 1762,
											"name": "tag",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 1738,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1731,
											"end": 1736,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1728,
											"end": 1763,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1777,
											"end": 1778,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1774,
											"end": 1775,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1779,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "tag",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1787,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1793,
											"end": 1932,
											"name": "tag",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 1793,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1839,
											"end": 1844,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1877,
											"end": 1883,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1864,
											"end": 1884,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1855,
											"end": 1884,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1855,
											"end": 1884,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1893,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 1920,
											"end": 1925,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1893,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 1893,
											"end": 1926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1893,
											"end": 1926,
											"name": "tag",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 1893,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1793,
											"end": 1932,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1793,
											"end": 1932,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1793,
											"end": 1932,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1793,
											"end": 1932,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1793,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1938,
											"end": 2428,
											"name": "tag",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 1938,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2014,
											"end": 2020,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2028,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2071,
											"end": 2073,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2068,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2050,
											"end": 2057,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2046,
											"end": 2069,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2042,
											"end": 2074,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2039,
											"end": 2158,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2039,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 2039,
											"end": 2158,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2077,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 2077,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 2077,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2077,
											"end": 2156,
											"name": "tag",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 2077,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2039,
											"end": 2158,
											"name": "tag",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 2039,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2197,
											"end": 2198,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2222,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 2275,
											"end": 2282,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2266,
											"end": 2272,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2255,
											"end": 2264,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2222,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 2222,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2222,
											"end": 2283,
											"name": "tag",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 2222,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2212,
											"end": 2283,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2212,
											"end": 2283,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2168,
											"end": 2293,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2332,
											"end": 2334,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2358,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 2403,
											"end": 2410,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2394,
											"end": 2400,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2383,
											"end": 2392,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2379,
											"end": 2401,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2358,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 2358,
											"end": 2411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2358,
											"end": 2411,
											"name": "tag",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 2358,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2348,
											"end": 2411,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2348,
											"end": 2411,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2303,
											"end": 2421,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1938,
											"end": 2428,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1938,
											"end": 2428,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1938,
											"end": 2428,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1938,
											"end": 2428,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1938,
											"end": 2428,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1938,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2434,
											"end": 2530,
											"name": "tag",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 2434,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2471,
											"end": 2478,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 2518,
											"end": 2523,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2500,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 2500,
											"end": 2524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2500,
											"end": 2524,
											"name": "tag",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 2500,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2489,
											"end": 2524,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2489,
											"end": 2524,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2434,
											"end": 2530,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2434,
											"end": 2530,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2434,
											"end": 2530,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2434,
											"end": 2530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2536,
											"end": 2654,
											"name": "tag",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 2536,
											"end": 2654,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2623,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 2641,
											"end": 2646,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2623,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 2623,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2623,
											"end": 2647,
											"name": "tag",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 2623,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2618,
											"end": 2621,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2611,
											"end": 2648,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2536,
											"end": 2654,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2536,
											"end": 2654,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2536,
											"end": 2654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2660,
											"end": 2882,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 2660,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2753,
											"end": 2757,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2791,
											"end": 2793,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2780,
											"end": 2789,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2776,
											"end": 2794,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2768,
											"end": 2794,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2768,
											"end": 2794,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2804,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 2872,
											"end": 2873,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2857,
											"end": 2874,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2848,
											"end": 2854,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2804,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 2804,
											"end": 2875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2804,
											"end": 2875,
											"name": "tag",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 2804,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2660,
											"end": 2882,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2660,
											"end": 2882,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2660,
											"end": 2882,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2660,
											"end": 2882,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2660,
											"end": 2882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2888,
											"end": 3005,
											"name": "tag",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 2888,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 2998,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2994,
											"end": 2995,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2987,
											"end": 2999,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3011,
											"end": 3128,
											"name": "tag",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 3011,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3120,
											"end": 3121,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3118,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3110,
											"end": 3122,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3134,
											"end": 3251,
											"name": "tag",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 3134,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3243,
											"end": 3244,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3241,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3233,
											"end": 3245,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3270,
											"end": 3822,
											"name": "tag",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 3270,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3327,
											"end": 3335,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3343,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3387,
											"end": 3390,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3380,
											"end": 3384,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 3372,
											"end": 3378,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3368,
											"end": 3385,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3364,
											"end": 3391,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3354,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 3354,
											"end": 3476,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3395,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 3395,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 3395,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3395,
											"end": 3474,
											"name": "tag",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 3395,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3354,
											"end": 3476,
											"name": "tag",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 3354,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3495,
											"end": 3515,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3515,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3515,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3538,
											"end": 3556,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3530,
											"end": 3536,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3527,
											"end": 3557,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3524,
											"end": 3641,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3524,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 3524,
											"end": 3641,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 3560,
											"end": 3639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "tag",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3524,
											"end": 3641,
											"name": "tag",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 3524,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3674,
											"end": 3678,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3666,
											"end": 3672,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3662,
											"end": 3679,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3650,
											"end": 3679,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3650,
											"end": 3679,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3728,
											"end": 3731,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3720,
											"end": 3724,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 3712,
											"end": 3718,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3708,
											"end": 3725,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 3698,
											"end": 3706,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3694,
											"end": 3726,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3691,
											"end": 3732,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3688,
											"end": 3816,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3688,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 3688,
											"end": 3816,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3735,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 3735,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 3735,
											"end": 3814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3735,
											"end": 3814,
											"name": "tag",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 3735,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3688,
											"end": 3816,
											"name": "tag",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 3688,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3270,
											"end": 3822,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3270,
											"end": 3822,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3270,
											"end": 3822,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3270,
											"end": 3822,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3270,
											"end": 3822,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3270,
											"end": 3822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 4355,
											"name": "tag",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 3828,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3898,
											"end": 3904,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 3912,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3955,
											"end": 3957,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3943,
											"end": 3952,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3934,
											"end": 3941,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3930,
											"end": 3953,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3926,
											"end": 3958,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3961,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 3961,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 3961,
											"end": 4040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3961,
											"end": 4040,
											"name": "tag",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 3961,
											"end": 4040,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "tag",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4109,
											"end": 4110,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4098,
											"end": 4107,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4094,
											"end": 4111,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4081,
											"end": 4112,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4131,
											"end": 4137,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4125,
											"end": 4242,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4125,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 4125,
											"end": 4242,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4161,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 4161,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 4161,
											"end": 4240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4161,
											"end": 4240,
											"name": "tag",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 4161,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4125,
											"end": 4242,
											"name": "tag",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 4125,
											"end": 4242,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4274,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 4330,
											"end": 4337,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4321,
											"end": 4327,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4310,
											"end": 4319,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4306,
											"end": 4328,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4274,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 4274,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4274,
											"end": 4338,
											"name": "tag",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 4274,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4256,
											"end": 4338,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4256,
											"end": 4338,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4256,
											"end": 4338,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4256,
											"end": 4338,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4052,
											"end": 4348,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 4355,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 4355,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 4355,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 4355,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 4355,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 4355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4458,
											"name": "tag",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 4361,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4397,
											"end": 4404,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4451,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 4430,
											"end": 4435,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4426,
											"end": 4452,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4415,
											"end": 4452,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4415,
											"end": 4452,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4458,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4458,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4458,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4464,
											"end": 4579,
											"name": "tag",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 4464,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4549,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 4566,
											"end": 4571,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4549,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 4549,
											"end": 4572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4549,
											"end": 4572,
											"name": "tag",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 4549,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4544,
											"end": 4547,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4537,
											"end": 4573,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4464,
											"end": 4579,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4464,
											"end": 4579,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4464,
											"end": 4579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4585,
											"end": 4753,
											"name": "tag",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 4585,
											"end": 4753,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4668,
											"end": 4679,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4702,
											"end": 4708,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4697,
											"end": 4700,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4690,
											"end": 4709,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4742,
											"end": 4746,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4737,
											"end": 4740,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4733,
											"end": 4747,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4718,
											"end": 4747,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4718,
											"end": 4747,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4585,
											"end": 4753,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4585,
											"end": 4753,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4585,
											"end": 4753,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4585,
											"end": 4753,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4585,
											"end": 4753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4759,
											"end": 4905,
											"name": "tag",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 4759,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4856,
											"end": 4862,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4851,
											"end": 4854,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4846,
											"end": 4849,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4833,
											"end": 4863,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 4897,
											"end": 4898,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4888,
											"end": 4894,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4883,
											"end": 4886,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4879,
											"end": 4895,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4872,
											"end": 4899,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4759,
											"end": 4905,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4759,
											"end": 4905,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4759,
											"end": 4905,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4759,
											"end": 4905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4911,
											"end": 5013,
											"name": "tag",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 4911,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4952,
											"end": 4958,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5003,
											"end": 5005,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4999,
											"end": 5006,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 4994,
											"end": 4996,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4987,
											"end": 4992,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4979,
											"end": 5007,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4969,
											"end": 5007,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4969,
											"end": 5007,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4911,
											"end": 5013,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4911,
											"end": 5013,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4911,
											"end": 5013,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4911,
											"end": 5013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5041,
											"end": 5355,
											"name": "tag",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 5041,
											"end": 5355,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5137,
											"end": 5140,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5158,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 5221,
											"end": 5227,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5216,
											"end": 5219,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5158,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 5158,
											"end": 5228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5158,
											"end": 5228,
											"name": "tag",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 5158,
											"end": 5228,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5151,
											"end": 5228,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5151,
											"end": 5228,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5238,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5282,
											"end": 5285,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5275,
											"end": 5280,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5238,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 5238,
											"end": 5294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5238,
											"end": 5294,
											"name": "tag",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 5238,
											"end": 5294,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5319,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5319,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 5319,
											"end": 5348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5319,
											"end": 5348,
											"name": "tag",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 5319,
											"end": 5348,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5314,
											"end": 5317,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5310,
											"end": 5349,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5303,
											"end": 5349,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5303,
											"end": 5349,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5041,
											"end": 5355,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5041,
											"end": 5355,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5041,
											"end": 5355,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5041,
											"end": 5355,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5041,
											"end": 5355,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5041,
											"end": 5355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5361,
											"end": 5902,
											"name": "tag",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 5361,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5534,
											"end": 5538,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5572,
											"end": 5574,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5561,
											"end": 5570,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5557,
											"end": 5575,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5549,
											"end": 5575,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5549,
											"end": 5575,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5585,
											"end": 5654,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 5651,
											"end": 5652,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5649,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5636,
											"end": 5653,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5627,
											"end": 5633,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5585,
											"end": 5654,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 5585,
											"end": 5654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5585,
											"end": 5654,
											"name": "tag",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 5585,
											"end": 5654,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5664,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 5730,
											"end": 5732,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5719,
											"end": 5728,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5715,
											"end": 5733,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5706,
											"end": 5712,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5664,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 5664,
											"end": 5734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5664,
											"end": 5734,
											"name": "tag",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 5664,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5781,
											"end": 5790,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5775,
											"end": 5779,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5771,
											"end": 5791,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5766,
											"end": 5768,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5755,
											"end": 5764,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5744,
											"end": 5792,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5809,
											"end": 5895,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 5890,
											"end": 5894,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5881,
											"end": 5887,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5809,
											"end": 5895,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 5809,
											"end": 5895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5809,
											"end": 5895,
											"name": "tag",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 5809,
											"end": 5895,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5801,
											"end": 5895,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5801,
											"end": 5895,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5361,
											"end": 5902,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5361,
											"end": 5902,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 5361,
											"end": 5902,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5361,
											"end": 5902,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5361,
											"end": 5902,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5361,
											"end": 5902,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5361,
											"end": 5902,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5361,
											"end": 5902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5908,
											"end": 6025,
											"name": "tag",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 5908,
											"end": 6025,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6014,
											"end": 6015,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6007,
											"end": 6019,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6059,
											"end": 6296,
											"name": "tag",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 6059,
											"end": 6296,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6137,
											"end": 6142,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6178,
											"end": 6181,
											"name": "PUSH",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 6169,
											"end": 6175,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6164,
											"end": 6167,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6160,
											"end": 6176,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6156,
											"end": 6182,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6153,
											"end": 6266,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6153,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 6153,
											"end": 6266,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6185,
											"end": 6264,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 6185,
											"end": 6264,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 6185,
											"end": 6264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6185,
											"end": 6264,
											"name": "tag",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 6185,
											"end": 6264,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6153,
											"end": 6266,
											"name": "tag",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 6153,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6284,
											"end": 6290,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6275,
											"end": 6290,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6275,
											"end": 6290,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6059,
											"end": 6296,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6059,
											"end": 6296,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6059,
											"end": 6296,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6059,
											"end": 6296,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6059,
											"end": 6296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6302,
											"end": 6422,
											"name": "tag",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 6302,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6374,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 6391,
											"end": 6396,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6374,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 6374,
											"end": 6397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6374,
											"end": 6397,
											"name": "tag",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 6374,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6364,
											"end": 6398,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 6354,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 6354,
											"end": 6416,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6412,
											"end": 6413,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6409,
											"end": 6410,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6402,
											"end": 6414,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6354,
											"end": 6416,
											"name": "tag",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 6354,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6302,
											"end": 6422,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6302,
											"end": 6422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6428,
											"end": 6565,
											"name": "tag",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 6428,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6511,
											"end": 6517,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6498,
											"end": 6518,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6489,
											"end": 6518,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6489,
											"end": 6518,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6527,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 6553,
											"end": 6558,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6527,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 6527,
											"end": 6559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6527,
											"end": 6559,
											"name": "tag",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 6527,
											"end": 6559,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6428,
											"end": 6565,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6428,
											"end": 6565,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6428,
											"end": 6565,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6428,
											"end": 6565,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6428,
											"end": 6565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6571,
											"end": 7410,
											"name": "tag",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 6571,
											"end": 7410,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6678,
											"end": 6684,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6686,
											"end": 6692,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6694,
											"end": 6700,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6743,
											"end": 6745,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 6731,
											"end": 6740,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6722,
											"end": 6729,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6718,
											"end": 6741,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6714,
											"end": 6746,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6711,
											"end": 6830,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6711,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 6711,
											"end": 6830,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6749,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 6749,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 6749,
											"end": 6828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6749,
											"end": 6828,
											"name": "tag",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 6749,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6711,
											"end": 6830,
											"name": "tag",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 6711,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6897,
											"end": 6898,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6882,
											"end": 6899,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6869,
											"end": 6900,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6927,
											"end": 6945,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6919,
											"end": 6925,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6916,
											"end": 6946,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6913,
											"end": 7030,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6913,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 6913,
											"end": 7030,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6949,
											"end": 7028,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 6949,
											"end": 7028,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 6949,
											"end": 7028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6949,
											"end": 7028,
											"name": "tag",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 6949,
											"end": 7028,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6913,
											"end": 7030,
											"name": "tag",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 6913,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7054,
											"end": 7139,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 7131,
											"end": 7138,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7122,
											"end": 7128,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7111,
											"end": 7120,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 7107,
											"end": 7129,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7054,
											"end": 7139,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 7054,
											"end": 7139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7054,
											"end": 7139,
											"name": "tag",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 7054,
											"end": 7139,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7044,
											"end": 7139,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 7044,
											"end": 7139,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6840,
											"end": 7149,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7188,
											"end": 7190,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7214,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 7258,
											"end": 7265,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7249,
											"end": 7255,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7238,
											"end": 7247,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 7234,
											"end": 7256,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7214,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 7214,
											"end": 7266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7214,
											"end": 7266,
											"name": "tag",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 7214,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7204,
											"end": 7266,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7204,
											"end": 7266,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7159,
											"end": 7276,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7315,
											"end": 7317,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7341,
											"end": 7393,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 7385,
											"end": 7392,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7376,
											"end": 7382,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7365,
											"end": 7374,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 7361,
											"end": 7383,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7341,
											"end": 7393,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 7341,
											"end": 7393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7341,
											"end": 7393,
											"name": "tag",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 7341,
											"end": 7393,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7331,
											"end": 7393,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7331,
											"end": 7393,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7286,
											"end": 7403,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6571,
											"end": 7410,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6571,
											"end": 7410,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6571,
											"end": 7410,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6571,
											"end": 7410,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6571,
											"end": 7410,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6571,
											"end": 7410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7416,
											"end": 7493,
											"name": "tag",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 7416,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7453,
											"end": 7460,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7482,
											"end": 7487,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7471,
											"end": 7487,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7471,
											"end": 7487,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7416,
											"end": 7493,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7416,
											"end": 7493,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7416,
											"end": 7493,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7416,
											"end": 7493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7499,
											"end": 7617,
											"name": "tag",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 7499,
											"end": 7617,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7586,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 7604,
											"end": 7609,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7586,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 7586,
											"end": 7610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7586,
											"end": 7610,
											"name": "tag",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 7586,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7581,
											"end": 7584,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7574,
											"end": 7611,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7499,
											"end": 7617,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7499,
											"end": 7617,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7499,
											"end": 7617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7623,
											"end": 7845,
											"name": "tag",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 7623,
											"end": 7845,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7716,
											"end": 7720,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7754,
											"end": 7756,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7743,
											"end": 7752,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7739,
											"end": 7757,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7731,
											"end": 7757,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7731,
											"end": 7757,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7767,
											"end": 7838,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 7835,
											"end": 7836,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7824,
											"end": 7833,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7820,
											"end": 7837,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7811,
											"end": 7817,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7767,
											"end": 7838,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 7767,
											"end": 7838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7767,
											"end": 7838,
											"name": "tag",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 7767,
											"end": 7838,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7623,
											"end": 7845,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7623,
											"end": 7845,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7623,
											"end": 7845,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7623,
											"end": 7845,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7623,
											"end": 7845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7851,
											"end": 7973,
											"name": "tag",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 7851,
											"end": 7973,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7924,
											"end": 7948,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 7942,
											"end": 7947,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7924,
											"end": 7948,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 7924,
											"end": 7948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7924,
											"end": 7948,
											"name": "tag",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 7924,
											"end": 7948,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7917,
											"end": 7922,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7914,
											"end": 7949,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 7904,
											"end": 7967,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 7904,
											"end": 7967,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7963,
											"end": 7964,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7960,
											"end": 7961,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7953,
											"end": 7965,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7904,
											"end": 7967,
											"name": "tag",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 7904,
											"end": 7967,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7851,
											"end": 7973,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7851,
											"end": 7973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7979,
											"end": 8118,
											"name": "tag",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 7979,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8025,
											"end": 8030,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8063,
											"end": 8069,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8050,
											"end": 8070,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8041,
											"end": 8070,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8041,
											"end": 8070,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8079,
											"end": 8112,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 8106,
											"end": 8111,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8079,
											"end": 8112,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 8079,
											"end": 8112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8079,
											"end": 8112,
											"name": "tag",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 8079,
											"end": 8112,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7979,
											"end": 8118,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7979,
											"end": 8118,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7979,
											"end": 8118,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7979,
											"end": 8118,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7979,
											"end": 8118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8124,
											"end": 8453,
											"name": "tag",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 8124,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8183,
											"end": 8189,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8234,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8220,
											"end": 8229,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8211,
											"end": 8218,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8207,
											"end": 8230,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8203,
											"end": 8235,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8200,
											"end": 8319,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8200,
											"end": 8319,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "437"
										},
										{
											"begin": 8200,
											"end": 8319,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8238,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 8238,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 8238,
											"end": 8317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8238,
											"end": 8317,
											"name": "tag",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 8238,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8200,
											"end": 8319,
											"name": "tag",
											"source": 15,
											"value": "437"
										},
										{
											"begin": 8200,
											"end": 8319,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8383,
											"end": 8436,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 8428,
											"end": 8435,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8419,
											"end": 8425,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8408,
											"end": 8417,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8404,
											"end": 8426,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8383,
											"end": 8436,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 8383,
											"end": 8436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8383,
											"end": 8436,
											"name": "tag",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 8383,
											"end": 8436,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8373,
											"end": 8436,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8373,
											"end": 8436,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8446,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8124,
											"end": 8453,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8124,
											"end": 8453,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8124,
											"end": 8453,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8124,
											"end": 8453,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8124,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8459,
											"end": 8577,
											"name": "tag",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 8459,
											"end": 8577,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8546,
											"end": 8570,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 8564,
											"end": 8569,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8546,
											"end": 8570,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 8546,
											"end": 8570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8546,
											"end": 8570,
											"name": "tag",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 8546,
											"end": 8570,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8541,
											"end": 8544,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8534,
											"end": 8571,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8459,
											"end": 8577,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8459,
											"end": 8577,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8459,
											"end": 8577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8583,
											"end": 8805,
											"name": "tag",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 8583,
											"end": 8805,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8676,
											"end": 8680,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8714,
											"end": 8716,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8703,
											"end": 8712,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8699,
											"end": 8717,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8691,
											"end": 8717,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8691,
											"end": 8717,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8727,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 8795,
											"end": 8796,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8784,
											"end": 8793,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8780,
											"end": 8797,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8771,
											"end": 8777,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8727,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 8727,
											"end": 8798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8727,
											"end": 8798,
											"name": "tag",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 8727,
											"end": 8798,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8583,
											"end": 8805,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8583,
											"end": 8805,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8583,
											"end": 8805,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8583,
											"end": 8805,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8583,
											"end": 8805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8811,
											"end": 8924,
											"name": "tag",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 8811,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8898,
											"end": 8899,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 8891,
											"end": 8896,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8888,
											"end": 8900,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 8878,
											"end": 8918,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 8878,
											"end": 8918,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8914,
											"end": 8915,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8911,
											"end": 8912,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8904,
											"end": 8916,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8878,
											"end": 8918,
											"name": "tag",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 8878,
											"end": 8918,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8811,
											"end": 8924,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8811,
											"end": 8924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8930,
											"end": 9097,
											"name": "tag",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 8930,
											"end": 9097,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8990,
											"end": 8995,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9028,
											"end": 9034,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9015,
											"end": 9035,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 9006,
											"end": 9035,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9006,
											"end": 9035,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9044,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 9085,
											"end": 9090,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9044,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 9044,
											"end": 9091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9044,
											"end": 9091,
											"name": "tag",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 9044,
											"end": 9091,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8930,
											"end": 9097,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8930,
											"end": 9097,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8930,
											"end": 9097,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8930,
											"end": 9097,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8930,
											"end": 9097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9103,
											"end": 9948,
											"name": "tag",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 9103,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9205,
											"end": 9211,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9213,
											"end": 9219,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9221,
											"end": 9227,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9229,
											"end": 9235,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9278,
											"end": 9280,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 9266,
											"end": 9275,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9257,
											"end": 9264,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9253,
											"end": 9276,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9249,
											"end": 9281,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 9246,
											"end": 9365,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9246,
											"end": 9365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 9246,
											"end": 9365,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9284,
											"end": 9363,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 9284,
											"end": 9363,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 9284,
											"end": 9363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9284,
											"end": 9363,
											"name": "tag",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 9284,
											"end": 9363,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9246,
											"end": 9365,
											"name": "tag",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 9246,
											"end": 9365,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9404,
											"end": 9405,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9429,
											"end": 9496,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 9488,
											"end": 9495,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9479,
											"end": 9485,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9468,
											"end": 9477,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9464,
											"end": 9486,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9429,
											"end": 9496,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 9429,
											"end": 9496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9429,
											"end": 9496,
											"name": "tag",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 9429,
											"end": 9496,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9419,
											"end": 9496,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 9419,
											"end": 9496,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9375,
											"end": 9506,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9573,
											"end": 9575,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9562,
											"end": 9571,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9545,
											"end": 9577,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 9604,
											"end": 9622,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9596,
											"end": 9602,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9593,
											"end": 9623,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9590,
											"end": 9707,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9590,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 9590,
											"end": 9707,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9626,
											"end": 9705,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 9626,
											"end": 9705,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 9626,
											"end": 9705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9626,
											"end": 9705,
											"name": "tag",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 9626,
											"end": 9705,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9590,
											"end": 9707,
											"name": "tag",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 9590,
											"end": 9707,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9739,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 9795,
											"end": 9802,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9786,
											"end": 9792,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9775,
											"end": 9784,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9771,
											"end": 9793,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9739,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 9739,
											"end": 9803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9739,
											"end": 9803,
											"name": "tag",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 9739,
											"end": 9803,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9721,
											"end": 9803,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 9721,
											"end": 9803,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9721,
											"end": 9803,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 9721,
											"end": 9803,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9516,
											"end": 9813,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9852,
											"end": 9854,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9878,
											"end": 9931,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 9923,
											"end": 9930,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9914,
											"end": 9920,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9903,
											"end": 9912,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9899,
											"end": 9921,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9878,
											"end": 9931,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 9878,
											"end": 9931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9878,
											"end": 9931,
											"name": "tag",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 9878,
											"end": 9931,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9868,
											"end": 9931,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9868,
											"end": 9931,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9823,
											"end": 9941,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9103,
											"end": 9948,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9103,
											"end": 9948,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 9103,
											"end": 9948,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9103,
											"end": 9948,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 9103,
											"end": 9948,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9103,
											"end": 9948,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9103,
											"end": 9948,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9103,
											"end": 9948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9954,
											"end": 10014,
											"name": "tag",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 9954,
											"end": 10014,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9982,
											"end": 9985,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10003,
											"end": 10008,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9996,
											"end": 10008,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9996,
											"end": 10008,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9954,
											"end": 10014,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9954,
											"end": 10014,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9954,
											"end": 10014,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9954,
											"end": 10014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10020,
											"end": 10162,
											"name": "tag",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 10020,
											"end": 10162,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10070,
											"end": 10079,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 10121,
											"end": 10155,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 10130,
											"end": 10154,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "460"
										},
										{
											"begin": 10148,
											"end": 10153,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10130,
											"end": 10154,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 10130,
											"end": 10154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10130,
											"end": 10154,
											"name": "tag",
											"source": 15,
											"value": "460"
										},
										{
											"begin": 10130,
											"end": 10154,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10121,
											"end": 10155,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 10121,
											"end": 10155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10121,
											"end": 10155,
											"name": "tag",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 10121,
											"end": 10155,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10103,
											"end": 10156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 10103,
											"end": 10156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10103,
											"end": 10156,
											"name": "tag",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 10103,
											"end": 10156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10090,
											"end": 10156,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10090,
											"end": 10156,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10020,
											"end": 10162,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10020,
											"end": 10162,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10020,
											"end": 10162,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10020,
											"end": 10162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10168,
											"end": 10294,
											"name": "tag",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 10168,
											"end": 10294,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10218,
											"end": 10227,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 10282,
											"end": 10287,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 10251,
											"end": 10288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "tag",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10238,
											"end": 10288,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10238,
											"end": 10288,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10168,
											"end": 10294,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10168,
											"end": 10294,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10168,
											"end": 10294,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10168,
											"end": 10294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10300,
											"end": 10445,
											"name": "tag",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 10300,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10369,
											"end": 10378,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10402,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 10433,
											"end": 10438,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10402,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 10402,
											"end": 10439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10402,
											"end": 10439,
											"name": "tag",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 10402,
											"end": 10439,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10389,
											"end": 10439,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10389,
											"end": 10439,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10300,
											"end": 10445,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10300,
											"end": 10445,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10300,
											"end": 10445,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10300,
											"end": 10445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10451,
											"end": 10620,
											"name": "tag",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 10451,
											"end": 10620,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10557,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "466"
										},
										{
											"begin": 10607,
											"end": 10612,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10557,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 10557,
											"end": 10613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10557,
											"end": 10613,
											"name": "tag",
											"source": 15,
											"value": "466"
										},
										{
											"begin": 10557,
											"end": 10613,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10552,
											"end": 10555,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10545,
											"end": 10614,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10451,
											"end": 10620,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10451,
											"end": 10620,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10451,
											"end": 10620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10626,
											"end": 10886,
											"name": "tag",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 10626,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10738,
											"end": 10742,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10776,
											"end": 10778,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10765,
											"end": 10774,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10761,
											"end": 10779,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10753,
											"end": 10779,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10753,
											"end": 10779,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10789,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 10876,
											"end": 10877,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10865,
											"end": 10874,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10861,
											"end": 10878,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10852,
											"end": 10858,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10789,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 10789,
											"end": 10879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10789,
											"end": 10879,
											"name": "tag",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 10789,
											"end": 10879,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10626,
											"end": 10886,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10626,
											"end": 10886,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10626,
											"end": 10886,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10626,
											"end": 10886,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10626,
											"end": 10886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10892,
											"end": 11237,
											"name": "tag",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 10892,
											"end": 11237,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10959,
											"end": 10965,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11008,
											"end": 11010,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10996,
											"end": 11005,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10987,
											"end": 10994,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10983,
											"end": 11006,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10979,
											"end": 11011,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 10976,
											"end": 11095,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10976,
											"end": 11095,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 10976,
											"end": 11095,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11014,
											"end": 11093,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 11014,
											"end": 11093,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 11014,
											"end": 11093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11014,
											"end": 11093,
											"name": "tag",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 11014,
											"end": 11093,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10976,
											"end": 11095,
											"name": "tag",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 10976,
											"end": 11095,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11134,
											"end": 11135,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11159,
											"end": 11220,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "472"
										},
										{
											"begin": 11212,
											"end": 11219,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11203,
											"end": 11209,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11192,
											"end": 11201,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11188,
											"end": 11210,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11159,
											"end": 11220,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 11159,
											"end": 11220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11159,
											"end": 11220,
											"name": "tag",
											"source": 15,
											"value": "472"
										},
										{
											"begin": 11159,
											"end": 11220,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11149,
											"end": 11220,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11149,
											"end": 11220,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11105,
											"end": 11230,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10892,
											"end": 11237,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10892,
											"end": 11237,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10892,
											"end": 11237,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10892,
											"end": 11237,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10892,
											"end": 11237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11243,
											"end": 11365,
											"name": "tag",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 11243,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11316,
											"end": 11340,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 11334,
											"end": 11339,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11316,
											"end": 11340,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 11316,
											"end": 11340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11316,
											"end": 11340,
											"name": "tag",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 11316,
											"end": 11340,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11309,
											"end": 11314,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11306,
											"end": 11341,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 11296,
											"end": 11359,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 11296,
											"end": 11359,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11355,
											"end": 11356,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11352,
											"end": 11353,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11345,
											"end": 11357,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11296,
											"end": 11359,
											"name": "tag",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 11296,
											"end": 11359,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11243,
											"end": 11365,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11243,
											"end": 11365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11371,
											"end": 11510,
											"name": "tag",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 11371,
											"end": 11510,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11417,
											"end": 11422,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11455,
											"end": 11461,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11442,
											"end": 11462,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 11433,
											"end": 11462,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11433,
											"end": 11462,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11471,
											"end": 11504,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 11498,
											"end": 11503,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11471,
											"end": 11504,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 11471,
											"end": 11504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11471,
											"end": 11504,
											"name": "tag",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 11471,
											"end": 11504,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11371,
											"end": 11510,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11371,
											"end": 11510,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11371,
											"end": 11510,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11371,
											"end": 11510,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11371,
											"end": 11510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11516,
											"end": 12359,
											"name": "tag",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 11516,
											"end": 12359,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11625,
											"end": 11631,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11633,
											"end": 11639,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11641,
											"end": 11647,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11690,
											"end": 11692,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 11678,
											"end": 11687,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11669,
											"end": 11676,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11665,
											"end": 11688,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 11661,
											"end": 11693,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 11658,
											"end": 11777,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11658,
											"end": 11777,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 11658,
											"end": 11777,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11696,
											"end": 11775,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "480"
										},
										{
											"begin": 11696,
											"end": 11775,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 11696,
											"end": 11775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11696,
											"end": 11775,
											"name": "tag",
											"source": 15,
											"value": "480"
										},
										{
											"begin": 11696,
											"end": 11775,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11658,
											"end": 11777,
											"name": "tag",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 11658,
											"end": 11777,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11844,
											"end": 11845,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11833,
											"end": 11842,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11829,
											"end": 11846,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11816,
											"end": 11847,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 11874,
											"end": 11892,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11866,
											"end": 11872,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11863,
											"end": 11893,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 11860,
											"end": 11977,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11860,
											"end": 11977,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 11860,
											"end": 11977,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11896,
											"end": 11975,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 11896,
											"end": 11975,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 11896,
											"end": 11975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11896,
											"end": 11975,
											"name": "tag",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 11896,
											"end": 11975,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11860,
											"end": 11977,
											"name": "tag",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 11860,
											"end": 11977,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12001,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "483"
										},
										{
											"begin": 12078,
											"end": 12085,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12069,
											"end": 12075,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12058,
											"end": 12067,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 12054,
											"end": 12076,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12001,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 12001,
											"end": 12086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12001,
											"end": 12086,
											"name": "tag",
											"source": 15,
											"value": "483"
										},
										{
											"begin": 12001,
											"end": 12086,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11991,
											"end": 12086,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 11991,
											"end": 12086,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11787,
											"end": 12096,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12135,
											"end": 12137,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12161,
											"end": 12214,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 12206,
											"end": 12213,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12197,
											"end": 12203,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12186,
											"end": 12195,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 12182,
											"end": 12204,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12161,
											"end": 12214,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 12161,
											"end": 12214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12161,
											"end": 12214,
											"name": "tag",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 12161,
											"end": 12214,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12151,
											"end": 12214,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12151,
											"end": 12214,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12106,
											"end": 12224,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12263,
											"end": 12265,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12289,
											"end": 12342,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 12334,
											"end": 12341,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12325,
											"end": 12331,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12314,
											"end": 12323,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 12310,
											"end": 12332,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12289,
											"end": 12342,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 12289,
											"end": 12342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12289,
											"end": 12342,
											"name": "tag",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 12289,
											"end": 12342,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12279,
											"end": 12342,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12279,
											"end": 12342,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12234,
											"end": 12352,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11516,
											"end": 12359,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11516,
											"end": 12359,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11516,
											"end": 12359,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11516,
											"end": 12359,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11516,
											"end": 12359,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11516,
											"end": 12359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12365,
											"end": 12463,
											"name": "tag",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 12365,
											"end": 12463,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12416,
											"end": 12422,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12450,
											"end": 12455,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12444,
											"end": 12456,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 12434,
											"end": 12456,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12434,
											"end": 12456,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12365,
											"end": 12463,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12365,
											"end": 12463,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12365,
											"end": 12463,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12365,
											"end": 12463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12469,
											"end": 12715,
											"name": "tag",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 12469,
											"end": 12715,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12550,
											"end": 12551,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12560,
											"end": 12673,
											"name": "tag",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 12560,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12574,
											"end": 12580,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12571,
											"end": 12572,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12568,
											"end": 12581,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12560,
											"end": 12673,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12560,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 12560,
											"end": 12673,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12659,
											"end": 12660,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12654,
											"end": 12657,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12650,
											"end": 12661,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12644,
											"end": 12662,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 12640,
											"end": 12641,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12635,
											"end": 12638,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12631,
											"end": 12642,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12624,
											"end": 12663,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12596,
											"end": 12598,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12593,
											"end": 12594,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12589,
											"end": 12599,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12584,
											"end": 12599,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12584,
											"end": 12599,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12560,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 12560,
											"end": 12673,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12560,
											"end": 12673,
											"name": "tag",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 12560,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12707,
											"end": 12708,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12698,
											"end": 12704,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12693,
											"end": 12696,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12689,
											"end": 12705,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12682,
											"end": 12709,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12531,
											"end": 12715,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12469,
											"end": 12715,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12469,
											"end": 12715,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12469,
											"end": 12715,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12469,
											"end": 12715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12721,
											"end": 13094,
											"name": "tag",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 12721,
											"end": 13094,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12807,
											"end": 12810,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12835,
											"end": 12873,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 12867,
											"end": 12872,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12835,
											"end": 12873,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 12835,
											"end": 12873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12835,
											"end": 12873,
											"name": "tag",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 12835,
											"end": 12873,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12889,
											"end": 12959,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 12952,
											"end": 12958,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12947,
											"end": 12950,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12889,
											"end": 12959,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 12889,
											"end": 12959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12889,
											"end": 12959,
											"name": "tag",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 12889,
											"end": 12959,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12882,
											"end": 12959,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 12882,
											"end": 12959,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12968,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 13026,
											"end": 13032,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13021,
											"end": 13024,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13014,
											"end": 13018,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13007,
											"end": 13012,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 13003,
											"end": 13019,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12968,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 12968,
											"end": 13033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12968,
											"end": 13033,
											"name": "tag",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 12968,
											"end": 13033,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13058,
											"end": 13087,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 13080,
											"end": 13086,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13058,
											"end": 13087,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 13058,
											"end": 13087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13058,
											"end": 13087,
											"name": "tag",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 13058,
											"end": 13087,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13053,
											"end": 13056,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13049,
											"end": 13088,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13042,
											"end": 13088,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13042,
											"end": 13088,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12811,
											"end": 13094,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12721,
											"end": 13094,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12721,
											"end": 13094,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12721,
											"end": 13094,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12721,
											"end": 13094,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12721,
											"end": 13094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13100,
											"end": 13519,
											"name": "tag",
											"source": 15,
											"value": "97"
										},
										{
											"begin": 13100,
											"end": 13519,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13239,
											"end": 13243,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13277,
											"end": 13279,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 13266,
											"end": 13275,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13262,
											"end": 13280,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13254,
											"end": 13280,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13254,
											"end": 13280,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13326,
											"end": 13335,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13320,
											"end": 13324,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13316,
											"end": 13336,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 13312,
											"end": 13313,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13301,
											"end": 13310,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13297,
											"end": 13314,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13290,
											"end": 13337,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13354,
											"end": 13430,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 13425,
											"end": 13429,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13416,
											"end": 13422,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13354,
											"end": 13430,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 13354,
											"end": 13430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13354,
											"end": 13430,
											"name": "tag",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 13354,
											"end": 13430,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13346,
											"end": 13430,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13346,
											"end": 13430,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13440,
											"end": 13512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 13508,
											"end": 13510,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13497,
											"end": 13506,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13493,
											"end": 13511,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13484,
											"end": 13490,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13440,
											"end": 13512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 13440,
											"end": 13512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13440,
											"end": 13512,
											"name": "tag",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 13440,
											"end": 13512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13100,
											"end": 13519,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 13100,
											"end": 13519,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13100,
											"end": 13519,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13100,
											"end": 13519,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13100,
											"end": 13519,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13100,
											"end": 13519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13525,
											"end": 13640,
											"name": "tag",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 13525,
											"end": 13640,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13610,
											"end": 13633,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 13627,
											"end": 13632,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13610,
											"end": 13633,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 13610,
											"end": 13633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13610,
											"end": 13633,
											"name": "tag",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 13610,
											"end": 13633,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13605,
											"end": 13608,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13598,
											"end": 13634,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13525,
											"end": 13640,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13525,
											"end": 13640,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13525,
											"end": 13640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13646,
											"end": 13864,
											"name": "tag",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 13646,
											"end": 13864,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13737,
											"end": 13741,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13775,
											"end": 13777,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13764,
											"end": 13773,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13760,
											"end": 13778,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13752,
											"end": 13778,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13752,
											"end": 13778,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13788,
											"end": 13857,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 13854,
											"end": 13855,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13843,
											"end": 13852,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13839,
											"end": 13856,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13830,
											"end": 13836,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13788,
											"end": 13857,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 13788,
											"end": 13857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13788,
											"end": 13857,
											"name": "tag",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 13788,
											"end": 13857,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13646,
											"end": 13864,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13646,
											"end": 13864,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13646,
											"end": 13864,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13646,
											"end": 13864,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13646,
											"end": 13864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13870,
											"end": 14012,
											"name": "tag",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 13870,
											"end": 14012,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13973,
											"end": 14005,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "504"
										},
										{
											"begin": 13999,
											"end": 14004,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13973,
											"end": 14005,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 13973,
											"end": 14005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13973,
											"end": 14005,
											"name": "tag",
											"source": 15,
											"value": "504"
										},
										{
											"begin": 13973,
											"end": 14005,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13968,
											"end": 13971,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13961,
											"end": 14006,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13870,
											"end": 14012,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13870,
											"end": 14012,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13870,
											"end": 14012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14018,
											"end": 14382,
											"name": "tag",
											"source": 15,
											"value": "111"
										},
										{
											"begin": 14018,
											"end": 14382,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14155,
											"end": 14159,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14193,
											"end": 14195,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 14182,
											"end": 14191,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14178,
											"end": 14196,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14170,
											"end": 14196,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14170,
											"end": 14196,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14206,
											"end": 14293,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 14290,
											"end": 14291,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14279,
											"end": 14288,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14275,
											"end": 14292,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14266,
											"end": 14272,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14206,
											"end": 14293,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 14206,
											"end": 14293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14206,
											"end": 14293,
											"name": "tag",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 14206,
											"end": 14293,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14303,
											"end": 14375,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 14371,
											"end": 14373,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14360,
											"end": 14369,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14356,
											"end": 14374,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14347,
											"end": 14353,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14303,
											"end": 14375,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 14303,
											"end": 14375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14303,
											"end": 14375,
											"name": "tag",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 14303,
											"end": 14375,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14018,
											"end": 14382,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 14018,
											"end": 14382,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14018,
											"end": 14382,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14018,
											"end": 14382,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14018,
											"end": 14382,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14018,
											"end": 14382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14388,
											"end": 14505,
											"name": "tag",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 14388,
											"end": 14505,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14497,
											"end": 14498,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14494,
											"end": 14495,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 14487,
											"end": 14499,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 14511,
											"end": 14628,
											"name": "tag",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 14511,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14620,
											"end": 14621,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14617,
											"end": 14618,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 14610,
											"end": 14622,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 14634,
											"end": 15103,
											"name": "tag",
											"source": 15,
											"value": "123"
										},
										{
											"begin": 14634,
											"end": 15103,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14739,
											"end": 14748,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14750,
											"end": 14759,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 14788,
											"end": 14796,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14776,
											"end": 14786,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14773,
											"end": 14797,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 14770,
											"end": 14881,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14770,
											"end": 14881,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 14770,
											"end": 14881,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14800,
											"end": 14879,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 14800,
											"end": 14879,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 14800,
											"end": 14879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14800,
											"end": 14879,
											"name": "tag",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 14800,
											"end": 14879,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14770,
											"end": 14881,
											"name": "tag",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 14770,
											"end": 14881,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14906,
											"end": 14912,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14896,
											"end": 14904,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 14893,
											"end": 14913,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 14890,
											"end": 14997,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14890,
											"end": 14997,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 14890,
											"end": 14997,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14916,
											"end": 14995,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 14916,
											"end": 14995,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 14916,
											"end": 14995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14916,
											"end": 14995,
											"name": "tag",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 14916,
											"end": 14995,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14890,
											"end": 14997,
											"name": "tag",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 14890,
											"end": 14997,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15047,
											"end": 15048,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 15035,
											"end": 15045,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15031,
											"end": 15049,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 15023,
											"end": 15029,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15019,
											"end": 15050,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15006,
											"end": 15050,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15006,
											"end": 15050,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15086,
											"end": 15096,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15076,
											"end": 15084,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 15072,
											"end": 15097,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 15059,
											"end": 15097,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15059,
											"end": 15097,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14634,
											"end": 15103,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 14634,
											"end": 15103,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14634,
											"end": 15103,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 14634,
											"end": 15103,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14634,
											"end": 15103,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14634,
											"end": 15103,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14634,
											"end": 15103,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14634,
											"end": 15103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15109,
											"end": 15579,
											"name": "tag",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 15109,
											"end": 15579,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15175,
											"end": 15181,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15183,
											"end": 15189,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 15232,
											"end": 15234,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 15220,
											"end": 15229,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15211,
											"end": 15218,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15207,
											"end": 15230,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 15203,
											"end": 15235,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 15200,
											"end": 15319,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 15200,
											"end": 15319,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 15200,
											"end": 15319,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15238,
											"end": 15317,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 15238,
											"end": 15317,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 15238,
											"end": 15317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15238,
											"end": 15317,
											"name": "tag",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 15238,
											"end": 15317,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15200,
											"end": 15319,
											"name": "tag",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 15200,
											"end": 15319,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15358,
											"end": 15359,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15383,
											"end": 15435,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "518"
										},
										{
											"begin": 15427,
											"end": 15434,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15418,
											"end": 15424,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15407,
											"end": 15416,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 15403,
											"end": 15425,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15383,
											"end": 15435,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 15383,
											"end": 15435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15383,
											"end": 15435,
											"name": "tag",
											"source": 15,
											"value": "518"
										},
										{
											"begin": 15383,
											"end": 15435,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15373,
											"end": 15435,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15373,
											"end": 15435,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15329,
											"end": 15445,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15484,
											"end": 15486,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15510,
											"end": 15562,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 15554,
											"end": 15561,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15545,
											"end": 15551,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15534,
											"end": 15543,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 15530,
											"end": 15552,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15510,
											"end": 15562,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 15510,
											"end": 15562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15510,
											"end": 15562,
											"name": "tag",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 15510,
											"end": 15562,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15500,
											"end": 15562,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15500,
											"end": 15562,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15455,
											"end": 15572,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15109,
											"end": 15579,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15109,
											"end": 15579,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15109,
											"end": 15579,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15109,
											"end": 15579,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15109,
											"end": 15579,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15109,
											"end": 15579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15585,
											"end": 16439,
											"name": "tag",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 15585,
											"end": 16439,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15832,
											"end": 15836,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15870,
											"end": 15873,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 15859,
											"end": 15868,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15855,
											"end": 15874,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15847,
											"end": 15874,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15847,
											"end": 15874,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15920,
											"end": 15929,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15914,
											"end": 15918,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15910,
											"end": 15930,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 15906,
											"end": 15907,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15895,
											"end": 15904,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15891,
											"end": 15908,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15884,
											"end": 15931,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15948,
											"end": 16024,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 16019,
											"end": 16023,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16010,
											"end": 16016,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 15948,
											"end": 16024,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 15948,
											"end": 16024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15948,
											"end": 16024,
											"name": "tag",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 15948,
											"end": 16024,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15940,
											"end": 16024,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15940,
											"end": 16024,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16034,
											"end": 16106,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "522"
										},
										{
											"begin": 16102,
											"end": 16104,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16091,
											"end": 16100,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16087,
											"end": 16105,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16078,
											"end": 16084,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 16034,
											"end": 16106,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 16034,
											"end": 16106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16034,
											"end": 16106,
											"name": "tag",
											"source": 15,
											"value": "522"
										},
										{
											"begin": 16034,
											"end": 16106,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16116,
											"end": 16188,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "523"
										},
										{
											"begin": 16184,
											"end": 16186,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 16173,
											"end": 16182,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16169,
											"end": 16187,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16160,
											"end": 16166,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 16116,
											"end": 16188,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 16116,
											"end": 16188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16116,
											"end": 16188,
											"name": "tag",
											"source": 15,
											"value": "523"
										},
										{
											"begin": 16116,
											"end": 16188,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16198,
											"end": 16270,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "524"
										},
										{
											"begin": 16266,
											"end": 16268,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 16255,
											"end": 16264,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16251,
											"end": 16269,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16242,
											"end": 16248,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16198,
											"end": 16270,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 16198,
											"end": 16270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16198,
											"end": 16270,
											"name": "tag",
											"source": 15,
											"value": "524"
										},
										{
											"begin": 16198,
											"end": 16270,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16280,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 16346,
											"end": 16349,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 16335,
											"end": 16344,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16331,
											"end": 16350,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16322,
											"end": 16328,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16280,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 16280,
											"end": 16351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16280,
											"end": 16351,
											"name": "tag",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 16280,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16361,
											"end": 16432,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "526"
										},
										{
											"begin": 16427,
											"end": 16430,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 16416,
											"end": 16425,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16412,
											"end": 16431,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16403,
											"end": 16409,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16361,
											"end": 16432,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 16361,
											"end": 16432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16361,
											"end": 16432,
											"name": "tag",
											"source": 15,
											"value": "526"
										},
										{
											"begin": 16361,
											"end": 16432,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15585,
											"end": 16439,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 15585,
											"end": 16439,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 15585,
											"end": 16439,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15585,
											"end": 16439,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15585,
											"end": 16439,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15585,
											"end": 16439,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15585,
											"end": 16439,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15585,
											"end": 16439,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15585,
											"end": 16439,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15585,
											"end": 16439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16445,
											"end": 16699,
											"name": "tag",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 16445,
											"end": 16699,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16554,
											"end": 16558,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16592,
											"end": 16594,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16581,
											"end": 16590,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16577,
											"end": 16595,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16569,
											"end": 16595,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16569,
											"end": 16595,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16605,
											"end": 16692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "528"
										},
										{
											"begin": 16689,
											"end": 16690,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16678,
											"end": 16687,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16674,
											"end": 16691,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16665,
											"end": 16671,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16605,
											"end": 16692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 16605,
											"end": 16692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16605,
											"end": 16692,
											"name": "tag",
											"source": 15,
											"value": "528"
										},
										{
											"begin": 16605,
											"end": 16692,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16445,
											"end": 16699,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16445,
											"end": 16699,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16445,
											"end": 16699,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16445,
											"end": 16699,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16445,
											"end": 16699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16705,
											"end": 16848,
											"name": "tag",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 16705,
											"end": 16848,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16762,
											"end": 16767,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16793,
											"end": 16799,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16787,
											"end": 16800,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 16778,
											"end": 16800,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16778,
											"end": 16800,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16809,
											"end": 16842,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 16836,
											"end": 16841,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16809,
											"end": 16842,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 16809,
											"end": 16842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16809,
											"end": 16842,
											"name": "tag",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 16809,
											"end": 16842,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16705,
											"end": 16848,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16705,
											"end": 16848,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16705,
											"end": 16848,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16705,
											"end": 16848,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16705,
											"end": 16848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16854,
											"end": 17205,
											"name": "tag",
											"source": 15,
											"value": "158"
										},
										{
											"begin": 16854,
											"end": 17205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16924,
											"end": 16930,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16973,
											"end": 16975,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16961,
											"end": 16970,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16952,
											"end": 16959,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16948,
											"end": 16971,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 16944,
											"end": 16976,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 16941,
											"end": 17060,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 16941,
											"end": 17060,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 16941,
											"end": 17060,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16979,
											"end": 17058,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 16979,
											"end": 17058,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 16979,
											"end": 17058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16979,
											"end": 17058,
											"name": "tag",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 16979,
											"end": 17058,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16941,
											"end": 17060,
											"name": "tag",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 16941,
											"end": 17060,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17099,
											"end": 17100,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17124,
											"end": 17188,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "534"
										},
										{
											"begin": 17180,
											"end": 17187,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 17171,
											"end": 17177,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17160,
											"end": 17169,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 17156,
											"end": 17178,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17124,
											"end": 17188,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 17124,
											"end": 17188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17124,
											"end": 17188,
											"name": "tag",
											"source": 15,
											"value": "534"
										},
										{
											"begin": 17124,
											"end": 17188,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17114,
											"end": 17188,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17114,
											"end": 17188,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17070,
											"end": 17198,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16854,
											"end": 17205,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16854,
											"end": 17205,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16854,
											"end": 17205,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16854,
											"end": 17205,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16854,
											"end": 17205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17211,
											"end": 17380,
											"name": "tag",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 17211,
											"end": 17380,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17295,
											"end": 17306,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17329,
											"end": 17335,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17324,
											"end": 17327,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17317,
											"end": 17336,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17369,
											"end": 17373,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17364,
											"end": 17367,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17360,
											"end": 17374,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17345,
											"end": 17374,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17345,
											"end": 17374,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17211,
											"end": 17380,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17211,
											"end": 17380,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17211,
											"end": 17380,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17211,
											"end": 17380,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17211,
											"end": 17380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17386,
											"end": 17611,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 17386,
											"end": 17611,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17526,
											"end": 17560,
											"name": "PUSH",
											"source": 15,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 17522,
											"end": 17523,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17514,
											"end": 17520,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17510,
											"end": 17524,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17503,
											"end": 17561,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17595,
											"end": 17603,
											"name": "PUSH",
											"source": 15,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17590,
											"end": 17592,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17582,
											"end": 17588,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17578,
											"end": 17593,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17571,
											"end": 17604,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17386,
											"end": 17611,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17386,
											"end": 17611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17617,
											"end": 17983,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 17617,
											"end": 17983,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17759,
											"end": 17762,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17780,
											"end": 17847,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "538"
										},
										{
											"begin": 17844,
											"end": 17846,
											"name": "PUSH",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 17839,
											"end": 17842,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17780,
											"end": 17847,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 17780,
											"end": 17847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17780,
											"end": 17847,
											"name": "tag",
											"source": 15,
											"value": "538"
										},
										{
											"begin": 17780,
											"end": 17847,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17773,
											"end": 17847,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17773,
											"end": 17847,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17856,
											"end": 17949,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "539"
										},
										{
											"begin": 17945,
											"end": 17948,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17856,
											"end": 17949,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 17856,
											"end": 17949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17856,
											"end": 17949,
											"name": "tag",
											"source": 15,
											"value": "539"
										},
										{
											"begin": 17856,
											"end": 17949,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17974,
											"end": 17976,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 17969,
											"end": 17972,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17965,
											"end": 17977,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17958,
											"end": 17977,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17958,
											"end": 17977,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17617,
											"end": 17983,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17617,
											"end": 17983,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17617,
											"end": 17983,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17617,
											"end": 17983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17989,
											"end": 18408,
											"name": "tag",
											"source": 15,
											"value": "169"
										},
										{
											"begin": 17989,
											"end": 18408,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18155,
											"end": 18159,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18193,
											"end": 18195,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 18182,
											"end": 18191,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18178,
											"end": 18196,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18170,
											"end": 18196,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18170,
											"end": 18196,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18242,
											"end": 18251,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18236,
											"end": 18240,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18232,
											"end": 18252,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 18228,
											"end": 18229,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18217,
											"end": 18226,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18213,
											"end": 18230,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18206,
											"end": 18253,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18270,
											"end": 18401,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "541"
										},
										{
											"begin": 18396,
											"end": 18400,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18270,
											"end": 18401,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 18270,
											"end": 18401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18270,
											"end": 18401,
											"name": "tag",
											"source": 15,
											"value": "541"
										},
										{
											"begin": 18270,
											"end": 18401,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18262,
											"end": 18401,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18262,
											"end": 18401,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17989,
											"end": 18408,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17989,
											"end": 18408,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17989,
											"end": 18408,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17989,
											"end": 18408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18414,
											"end": 18596,
											"name": "tag",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 18414,
											"end": 18596,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18554,
											"end": 18588,
											"name": "PUSH",
											"source": 15,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 18550,
											"end": 18551,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18542,
											"end": 18548,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18538,
											"end": 18552,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18531,
											"end": 18589,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18414,
											"end": 18596,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18414,
											"end": 18596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18602,
											"end": 18968,
											"name": "tag",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 18602,
											"end": 18968,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18744,
											"end": 18747,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18765,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "544"
										},
										{
											"begin": 18829,
											"end": 18831,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 18824,
											"end": 18827,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18765,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 18765,
											"end": 18832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18765,
											"end": 18832,
											"name": "tag",
											"source": 15,
											"value": "544"
										},
										{
											"begin": 18765,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18758,
											"end": 18832,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18758,
											"end": 18832,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18841,
											"end": 18934,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "545"
										},
										{
											"begin": 18930,
											"end": 18933,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18841,
											"end": 18934,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 18841,
											"end": 18934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18841,
											"end": 18934,
											"name": "tag",
											"source": 15,
											"value": "545"
										},
										{
											"begin": 18841,
											"end": 18934,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18959,
											"end": 18961,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 18954,
											"end": 18957,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18950,
											"end": 18962,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18943,
											"end": 18962,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18943,
											"end": 18962,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18602,
											"end": 18968,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18602,
											"end": 18968,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18602,
											"end": 18968,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18602,
											"end": 18968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18974,
											"end": 19393,
											"name": "tag",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 18974,
											"end": 19393,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19140,
											"end": 19144,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19178,
											"end": 19180,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19167,
											"end": 19176,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19163,
											"end": 19181,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19155,
											"end": 19181,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19155,
											"end": 19181,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19227,
											"end": 19236,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19221,
											"end": 19225,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19217,
											"end": 19237,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 19213,
											"end": 19214,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19202,
											"end": 19211,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19198,
											"end": 19215,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19191,
											"end": 19238,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19255,
											"end": 19386,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "547"
										},
										{
											"begin": 19381,
											"end": 19385,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19255,
											"end": 19386,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 19255,
											"end": 19386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19255,
											"end": 19386,
											"name": "tag",
											"source": 15,
											"value": "547"
										},
										{
											"begin": 19255,
											"end": 19386,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19247,
											"end": 19386,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19247,
											"end": 19386,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18974,
											"end": 19393,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18974,
											"end": 19393,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18974,
											"end": 19393,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18974,
											"end": 19393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19399,
											"end": 19516,
											"name": "tag",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 19399,
											"end": 19516,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19508,
											"end": 19509,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19505,
											"end": 19506,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 19498,
											"end": 19510,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 19522,
											"end": 19639,
											"name": "tag",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 19522,
											"end": 19639,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19631,
											"end": 19632,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19628,
											"end": 19629,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 19621,
											"end": 19633,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 19645,
											"end": 19762,
											"name": "tag",
											"source": 15,
											"value": "324"
										},
										{
											"begin": 19645,
											"end": 19762,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19754,
											"end": 19755,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19751,
											"end": 19752,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 19744,
											"end": 19756,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 19768,
											"end": 20492,
											"name": "tag",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 19768,
											"end": 20492,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19845,
											"end": 19849,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19851,
											"end": 19857,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 19907,
											"end": 19918,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19894,
											"end": 19919,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 20007,
											"end": 20008,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 20001,
											"end": 20005,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19997,
											"end": 20009,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 19986,
											"end": 19994,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 19970,
											"end": 19984,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 19966,
											"end": 19995,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 19962,
											"end": 20010,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 19942,
											"end": 19960,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19938,
											"end": 20011,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 19928,
											"end": 20096,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 19928,
											"end": 20096,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 20015,
											"end": 20094,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "553"
										},
										{
											"begin": 20015,
											"end": 20094,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 20015,
											"end": 20094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20015,
											"end": 20094,
											"name": "tag",
											"source": 15,
											"value": "553"
										},
										{
											"begin": 20015,
											"end": 20094,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19928,
											"end": 20096,
											"name": "tag",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 19928,
											"end": 20096,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20127,
											"end": 20145,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 20117,
											"end": 20125,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 20113,
											"end": 20146,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20105,
											"end": 20146,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 20105,
											"end": 20146,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20179,
											"end": 20183,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20166,
											"end": 20184,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 20156,
											"end": 20184,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20156,
											"end": 20184,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20207,
											"end": 20225,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20199,
											"end": 20205,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20196,
											"end": 20226,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 20193,
											"end": 20310,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 20193,
											"end": 20310,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "554"
										},
										{
											"begin": 20193,
											"end": 20310,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 20229,
											"end": 20308,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "555"
										},
										{
											"begin": 20229,
											"end": 20308,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 20229,
											"end": 20308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20229,
											"end": 20308,
											"name": "tag",
											"source": 15,
											"value": "555"
										},
										{
											"begin": 20229,
											"end": 20308,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20193,
											"end": 20310,
											"name": "tag",
											"source": 15,
											"value": "554"
										},
										{
											"begin": 20193,
											"end": 20310,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20337,
											"end": 20339,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 20331,
											"end": 20335,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20327,
											"end": 20340,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20319,
											"end": 20340,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 20319,
											"end": 20340,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20394,
											"end": 20398,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 20386,
											"end": 20392,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20382,
											"end": 20399,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 20366,
											"end": 20380,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 20362,
											"end": 20400,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 20356,
											"end": 20360,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20352,
											"end": 20401,
											"name": "SGT",
											"source": 15
										},
										{
											"begin": 20349,
											"end": 20485,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 20349,
											"end": 20485,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 20349,
											"end": 20485,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 20404,
											"end": 20483,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 20404,
											"end": 20483,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "324"
										},
										{
											"begin": 20404,
											"end": 20483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20404,
											"end": 20483,
											"name": "tag",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 20404,
											"end": 20483,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20349,
											"end": 20485,
											"name": "tag",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 20349,
											"end": 20485,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19858,
											"end": 20492,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19768,
											"end": 20492,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19768,
											"end": 20492,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19768,
											"end": 20492,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19768,
											"end": 20492,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19768,
											"end": 20492,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19768,
											"end": 20492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20498,
											"end": 20669,
											"name": "tag",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 20498,
											"end": 20669,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20638,
											"end": 20661,
											"name": "PUSH",
											"source": 15,
											"value": "53656E646572206E6F7420456E747279506F696E740000000000000000000000"
										},
										{
											"begin": 20634,
											"end": 20635,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20626,
											"end": 20632,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20622,
											"end": 20636,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20615,
											"end": 20662,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20498,
											"end": 20669,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20498,
											"end": 20669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20675,
											"end": 21041,
											"name": "tag",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 20675,
											"end": 21041,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20817,
											"end": 20820,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20838,
											"end": 20905,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 20902,
											"end": 20904,
											"name": "PUSH",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 20897,
											"end": 20900,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20838,
											"end": 20905,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 20838,
											"end": 20905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20838,
											"end": 20905,
											"name": "tag",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 20838,
											"end": 20905,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20831,
											"end": 20905,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20831,
											"end": 20905,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20914,
											"end": 21007,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "561"
										},
										{
											"begin": 21003,
											"end": 21006,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20914,
											"end": 21007,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 20914,
											"end": 21007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20914,
											"end": 21007,
											"name": "tag",
											"source": 15,
											"value": "561"
										},
										{
											"begin": 20914,
											"end": 21007,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21032,
											"end": 21034,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 21027,
											"end": 21030,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21023,
											"end": 21035,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21016,
											"end": 21035,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21016,
											"end": 21035,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20675,
											"end": 21041,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20675,
											"end": 21041,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 20675,
											"end": 21041,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20675,
											"end": 21041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21047,
											"end": 21466,
											"name": "tag",
											"source": 15,
											"value": "190"
										},
										{
											"begin": 21047,
											"end": 21466,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21213,
											"end": 21217,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21251,
											"end": 21253,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 21240,
											"end": 21249,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21236,
											"end": 21254,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21228,
											"end": 21254,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21228,
											"end": 21254,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21300,
											"end": 21309,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21294,
											"end": 21298,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21290,
											"end": 21310,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 21286,
											"end": 21287,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21275,
											"end": 21284,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 21271,
											"end": 21288,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21264,
											"end": 21311,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21328,
											"end": 21459,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "563"
										},
										{
											"begin": 21454,
											"end": 21458,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21328,
											"end": 21459,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 21328,
											"end": 21459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21328,
											"end": 21459,
											"name": "tag",
											"source": 15,
											"value": "563"
										},
										{
											"begin": 21328,
											"end": 21459,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21320,
											"end": 21459,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21320,
											"end": 21459,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21047,
											"end": 21466,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21047,
											"end": 21466,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21047,
											"end": 21466,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21047,
											"end": 21466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21472,
											"end": 21635,
											"name": "tag",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 21472,
											"end": 21635,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21612,
											"end": 21627,
											"name": "PUSH",
											"source": 15,
											"value": "6D757374206F7665727269646500000000000000000000000000000000000000"
										},
										{
											"begin": 21608,
											"end": 21609,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21600,
											"end": 21606,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21596,
											"end": 21610,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21589,
											"end": 21628,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21472,
											"end": 21635,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21472,
											"end": 21635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21641,
											"end": 22007,
											"name": "tag",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 21641,
											"end": 22007,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21783,
											"end": 21786,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21804,
											"end": 21871,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "566"
										},
										{
											"begin": 21868,
											"end": 21870,
											"name": "PUSH",
											"source": 15,
											"value": "D"
										},
										{
											"begin": 21863,
											"end": 21866,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 21804,
											"end": 21871,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 21804,
											"end": 21871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21804,
											"end": 21871,
											"name": "tag",
											"source": 15,
											"value": "566"
										},
										{
											"begin": 21804,
											"end": 21871,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21797,
											"end": 21871,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21797,
											"end": 21871,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21880,
											"end": 21973,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "567"
										},
										{
											"begin": 21969,
											"end": 21972,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21880,
											"end": 21973,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 21880,
											"end": 21973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21880,
											"end": 21973,
											"name": "tag",
											"source": 15,
											"value": "567"
										},
										{
											"begin": 21880,
											"end": 21973,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21998,
											"end": 22000,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 21993,
											"end": 21996,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21989,
											"end": 22001,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21982,
											"end": 22001,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21982,
											"end": 22001,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21641,
											"end": 22007,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21641,
											"end": 22007,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21641,
											"end": 22007,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21641,
											"end": 22007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22013,
											"end": 22432,
											"name": "tag",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 22013,
											"end": 22432,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22179,
											"end": 22183,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22217,
											"end": 22219,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22206,
											"end": 22215,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22202,
											"end": 22220,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22194,
											"end": 22220,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22194,
											"end": 22220,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22266,
											"end": 22275,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22260,
											"end": 22264,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22256,
											"end": 22276,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 22252,
											"end": 22253,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22241,
											"end": 22250,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22237,
											"end": 22254,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22230,
											"end": 22277,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22294,
											"end": 22425,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 22420,
											"end": 22424,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22294,
											"end": 22425,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 22294,
											"end": 22425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22294,
											"end": 22425,
											"name": "tag",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 22294,
											"end": 22425,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22286,
											"end": 22425,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22286,
											"end": 22425,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22013,
											"end": 22432,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22013,
											"end": 22432,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22013,
											"end": 22432,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22013,
											"end": 22432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22438,
											"end": 22689,
											"name": "tag",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 22438,
											"end": 22689,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22578,
											"end": 22612,
											"name": "PUSH",
											"source": 15,
											"value": "566572696679696E675061796D61737465723A20696E76616C6964207369676E"
										},
										{
											"begin": 22574,
											"end": 22575,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22566,
											"end": 22572,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22562,
											"end": 22576,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22555,
											"end": 22613,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22647,
											"end": 22681,
											"name": "PUSH",
											"source": 15,
											"value": "6174757265206C656E67746820696E207061796D6173746572416E6444617461"
										},
										{
											"begin": 22642,
											"end": 22644,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22634,
											"end": 22640,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22630,
											"end": 22645,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22623,
											"end": 22682,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22438,
											"end": 22689,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22438,
											"end": 22689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22695,
											"end": 23061,
											"name": "tag",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 22695,
											"end": 23061,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22837,
											"end": 22840,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22858,
											"end": 22925,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "572"
										},
										{
											"begin": 22922,
											"end": 22924,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 22917,
											"end": 22920,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22858,
											"end": 22925,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 22858,
											"end": 22925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22858,
											"end": 22925,
											"name": "tag",
											"source": 15,
											"value": "572"
										},
										{
											"begin": 22858,
											"end": 22925,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22851,
											"end": 22925,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22851,
											"end": 22925,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22934,
											"end": 23027,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 23023,
											"end": 23026,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22934,
											"end": 23027,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 22934,
											"end": 23027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22934,
											"end": 23027,
											"name": "tag",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 22934,
											"end": 23027,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23052,
											"end": 23054,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 23047,
											"end": 23050,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23043,
											"end": 23055,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23036,
											"end": 23055,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23036,
											"end": 23055,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22695,
											"end": 23061,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22695,
											"end": 23061,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22695,
											"end": 23061,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22695,
											"end": 23061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23067,
											"end": 23486,
											"name": "tag",
											"source": 15,
											"value": "200"
										},
										{
											"begin": 23067,
											"end": 23486,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23233,
											"end": 23237,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23271,
											"end": 23273,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 23260,
											"end": 23269,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23256,
											"end": 23274,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23248,
											"end": 23274,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23248,
											"end": 23274,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23320,
											"end": 23329,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23314,
											"end": 23318,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23310,
											"end": 23330,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 23306,
											"end": 23307,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23295,
											"end": 23304,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 23291,
											"end": 23308,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23284,
											"end": 23331,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23348,
											"end": 23479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "575"
										},
										{
											"begin": 23474,
											"end": 23478,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23348,
											"end": 23479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 23348,
											"end": 23479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23348,
											"end": 23479,
											"name": "tag",
											"source": 15,
											"value": "575"
										},
										{
											"begin": 23348,
											"end": 23479,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23340,
											"end": 23479,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23340,
											"end": 23479,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23067,
											"end": 23486,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23067,
											"end": 23486,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23067,
											"end": 23486,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23067,
											"end": 23486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23492,
											"end": 23672,
											"name": "tag",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 23492,
											"end": 23672,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23540,
											"end": 23617,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23537,
											"end": 23538,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23530,
											"end": 23618,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23637,
											"end": 23641,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 23634,
											"end": 23635,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 23627,
											"end": 23642,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23661,
											"end": 23665,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 23658,
											"end": 23659,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23651,
											"end": 23666,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 23678,
											"end": 23911,
											"name": "tag",
											"source": 15,
											"value": "206"
										},
										{
											"begin": 23678,
											"end": 23911,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23717,
											"end": 23720,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23740,
											"end": 23764,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "578"
										},
										{
											"begin": 23758,
											"end": 23763,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23740,
											"end": 23764,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 23740,
											"end": 23764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23740,
											"end": 23764,
											"name": "tag",
											"source": 15,
											"value": "578"
										},
										{
											"begin": 23740,
											"end": 23764,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23731,
											"end": 23764,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23731,
											"end": 23764,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23786,
											"end": 23852,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23779,
											"end": 23784,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23776,
											"end": 23853,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 23773,
											"end": 23876,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "579"
										},
										{
											"begin": 23773,
											"end": 23876,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 23856,
											"end": 23874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "580"
										},
										{
											"begin": 23856,
											"end": 23874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 23856,
											"end": 23874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23856,
											"end": 23874,
											"name": "tag",
											"source": 15,
											"value": "580"
										},
										{
											"begin": 23856,
											"end": 23874,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23773,
											"end": 23876,
											"name": "tag",
											"source": 15,
											"value": "579"
										},
										{
											"begin": 23773,
											"end": 23876,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23903,
											"end": 23904,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 23896,
											"end": 23901,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23892,
											"end": 23905,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23885,
											"end": 23905,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23885,
											"end": 23905,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23678,
											"end": 23911,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23678,
											"end": 23911,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23678,
											"end": 23911,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23678,
											"end": 23911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23917,
											"end": 24097,
											"name": "tag",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 23917,
											"end": 24097,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23965,
											"end": 24042,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23962,
											"end": 23963,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23955,
											"end": 24043,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24062,
											"end": 24066,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 24059,
											"end": 24060,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 24052,
											"end": 24067,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24086,
											"end": 24090,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 24083,
											"end": 24084,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24076,
											"end": 24091,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 24103,
											"end": 24277,
											"name": "tag",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 24103,
											"end": 24277,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24243,
											"end": 24269,
											"name": "PUSH",
											"source": 15,
											"value": "45434453413A20696E76616C6964207369676E61747572650000000000000000"
										},
										{
											"begin": 24239,
											"end": 24240,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24231,
											"end": 24237,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24227,
											"end": 24241,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24220,
											"end": 24270,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24103,
											"end": 24277,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24103,
											"end": 24277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24283,
											"end": 24649,
											"name": "tag",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 24283,
											"end": 24649,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24425,
											"end": 24428,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24446,
											"end": 24513,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "584"
										},
										{
											"begin": 24510,
											"end": 24512,
											"name": "PUSH",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 24505,
											"end": 24508,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24446,
											"end": 24513,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 24446,
											"end": 24513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24446,
											"end": 24513,
											"name": "tag",
											"source": 15,
											"value": "584"
										},
										{
											"begin": 24446,
											"end": 24513,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24439,
											"end": 24513,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 24439,
											"end": 24513,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24522,
											"end": 24615,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "585"
										},
										{
											"begin": 24611,
											"end": 24614,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24522,
											"end": 24615,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 24522,
											"end": 24615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24522,
											"end": 24615,
											"name": "tag",
											"source": 15,
											"value": "585"
										},
										{
											"begin": 24522,
											"end": 24615,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24640,
											"end": 24642,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 24635,
											"end": 24638,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24631,
											"end": 24643,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24624,
											"end": 24643,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24624,
											"end": 24643,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24283,
											"end": 24649,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 24283,
											"end": 24649,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24283,
											"end": 24649,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24283,
											"end": 24649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24655,
											"end": 25074,
											"name": "tag",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 24655,
											"end": 25074,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24821,
											"end": 24825,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24859,
											"end": 24861,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 24848,
											"end": 24857,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24844,
											"end": 24862,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24836,
											"end": 24862,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24836,
											"end": 24862,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24908,
											"end": 24917,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24902,
											"end": 24906,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24898,
											"end": 24918,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 24894,
											"end": 24895,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24883,
											"end": 24892,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24879,
											"end": 24896,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24872,
											"end": 24919,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24936,
											"end": 25067,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "587"
										},
										{
											"begin": 25062,
											"end": 25066,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24936,
											"end": 25067,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 24936,
											"end": 25067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24936,
											"end": 25067,
											"name": "tag",
											"source": 15,
											"value": "587"
										},
										{
											"begin": 24936,
											"end": 25067,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24928,
											"end": 25067,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24928,
											"end": 25067,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24655,
											"end": 25074,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 24655,
											"end": 25074,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24655,
											"end": 25074,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24655,
											"end": 25074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25080,
											"end": 25261,
											"name": "tag",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 25080,
											"end": 25261,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25220,
											"end": 25253,
											"name": "PUSH",
											"source": 15,
											"value": "45434453413A20696E76616C6964207369676E6174757265206C656E67746800"
										},
										{
											"begin": 25216,
											"end": 25217,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25208,
											"end": 25214,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25204,
											"end": 25218,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25197,
											"end": 25254,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 25080,
											"end": 25261,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25080,
											"end": 25261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25267,
											"end": 25633,
											"name": "tag",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 25267,
											"end": 25633,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25409,
											"end": 25412,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25430,
											"end": 25497,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "590"
										},
										{
											"begin": 25494,
											"end": 25496,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 25489,
											"end": 25492,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25430,
											"end": 25497,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 25430,
											"end": 25497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25430,
											"end": 25497,
											"name": "tag",
											"source": 15,
											"value": "590"
										},
										{
											"begin": 25430,
											"end": 25497,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25423,
											"end": 25497,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25423,
											"end": 25497,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25506,
											"end": 25599,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "591"
										},
										{
											"begin": 25595,
											"end": 25598,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25506,
											"end": 25599,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 25506,
											"end": 25599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25506,
											"end": 25599,
											"name": "tag",
											"source": 15,
											"value": "591"
										},
										{
											"begin": 25506,
											"end": 25599,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25624,
											"end": 25626,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 25619,
											"end": 25622,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25615,
											"end": 25627,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25608,
											"end": 25627,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25608,
											"end": 25627,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25267,
											"end": 25633,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25267,
											"end": 25633,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25267,
											"end": 25633,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25267,
											"end": 25633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25639,
											"end": 26058,
											"name": "tag",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 25639,
											"end": 26058,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25805,
											"end": 25809,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25843,
											"end": 25845,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 25832,
											"end": 25841,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25828,
											"end": 25846,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25820,
											"end": 25846,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25820,
											"end": 25846,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25892,
											"end": 25901,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25886,
											"end": 25890,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25882,
											"end": 25902,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 25878,
											"end": 25879,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25867,
											"end": 25876,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25863,
											"end": 25880,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25856,
											"end": 25903,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 25920,
											"end": 26051,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "593"
										},
										{
											"begin": 26046,
											"end": 26050,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25920,
											"end": 26051,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 25920,
											"end": 26051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25920,
											"end": 26051,
											"name": "tag",
											"source": 15,
											"value": "593"
										},
										{
											"begin": 25920,
											"end": 26051,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25912,
											"end": 26051,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25912,
											"end": 26051,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25639,
											"end": 26058,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25639,
											"end": 26058,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25639,
											"end": 26058,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25639,
											"end": 26058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26064,
											"end": 26285,
											"name": "tag",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 26064,
											"end": 26285,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26204,
											"end": 26238,
											"name": "PUSH",
											"source": 15,
											"value": "45434453413A20696E76616C6964207369676E6174757265202773272076616C"
										},
										{
											"begin": 26200,
											"end": 26201,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26192,
											"end": 26198,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26188,
											"end": 26202,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26181,
											"end": 26239,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 26273,
											"end": 26277,
											"name": "PUSH",
											"source": 15,
											"value": "7565000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26268,
											"end": 26270,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 26260,
											"end": 26266,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26256,
											"end": 26271,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26249,
											"end": 26278,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 26064,
											"end": 26285,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26064,
											"end": 26285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26291,
											"end": 26657,
											"name": "tag",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 26291,
											"end": 26657,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26433,
											"end": 26436,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26454,
											"end": 26521,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "596"
										},
										{
											"begin": 26518,
											"end": 26520,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 26513,
											"end": 26516,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26454,
											"end": 26521,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 26454,
											"end": 26521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26454,
											"end": 26521,
											"name": "tag",
											"source": 15,
											"value": "596"
										},
										{
											"begin": 26454,
											"end": 26521,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26447,
											"end": 26521,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26447,
											"end": 26521,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26530,
											"end": 26623,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "597"
										},
										{
											"begin": 26619,
											"end": 26622,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26530,
											"end": 26623,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 26530,
											"end": 26623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26530,
											"end": 26623,
											"name": "tag",
											"source": 15,
											"value": "597"
										},
										{
											"begin": 26530,
											"end": 26623,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26648,
											"end": 26650,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 26643,
											"end": 26646,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26639,
											"end": 26651,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26632,
											"end": 26651,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26632,
											"end": 26651,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26291,
											"end": 26657,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26291,
											"end": 26657,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26291,
											"end": 26657,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26291,
											"end": 26657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26663,
											"end": 27082,
											"name": "tag",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 26663,
											"end": 27082,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26829,
											"end": 26833,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26867,
											"end": 26869,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 26856,
											"end": 26865,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26852,
											"end": 26870,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26844,
											"end": 26870,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26844,
											"end": 26870,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26916,
											"end": 26925,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26910,
											"end": 26914,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26906,
											"end": 26926,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 26902,
											"end": 26903,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26891,
											"end": 26900,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26887,
											"end": 26904,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26880,
											"end": 26927,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 26944,
											"end": 27075,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "599"
										},
										{
											"begin": 27070,
											"end": 27074,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26944,
											"end": 27075,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 26944,
											"end": 27075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26944,
											"end": 27075,
											"name": "tag",
											"source": 15,
											"value": "599"
										},
										{
											"begin": 26944,
											"end": 27075,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26936,
											"end": 27075,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26936,
											"end": 27075,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26663,
											"end": 27082,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26663,
											"end": 27082,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26663,
											"end": 27082,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26663,
											"end": 27082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27088,
											"end": 27174,
											"name": "tag",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 27088,
											"end": 27174,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27123,
											"end": 27130,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27163,
											"end": 27167,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 27156,
											"end": 27161,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27152,
											"end": 27168,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 27141,
											"end": 27168,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27141,
											"end": 27168,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27088,
											"end": 27174,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27088,
											"end": 27174,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27088,
											"end": 27174,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27088,
											"end": 27174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27180,
											"end": 27292,
											"name": "tag",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 27180,
											"end": 27292,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27263,
											"end": 27285,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "602"
										},
										{
											"begin": 27279,
											"end": 27284,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27263,
											"end": 27285,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 27263,
											"end": 27285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27263,
											"end": 27285,
											"name": "tag",
											"source": 15,
											"value": "602"
										},
										{
											"begin": 27263,
											"end": 27285,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27258,
											"end": 27261,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27251,
											"end": 27286,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 27180,
											"end": 27292,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27180,
											"end": 27292,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27180,
											"end": 27292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27298,
											"end": 27843,
											"name": "tag",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 27298,
											"end": 27843,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27471,
											"end": 27475,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27509,
											"end": 27512,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 27498,
											"end": 27507,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27494,
											"end": 27513,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27486,
											"end": 27513,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27486,
											"end": 27513,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27523,
											"end": 27594,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "604"
										},
										{
											"begin": 27591,
											"end": 27592,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27580,
											"end": 27589,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27576,
											"end": 27593,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27567,
											"end": 27573,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 27523,
											"end": 27594,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 27523,
											"end": 27594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27523,
											"end": 27594,
											"name": "tag",
											"source": 15,
											"value": "604"
										},
										{
											"begin": 27523,
											"end": 27594,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27604,
											"end": 27672,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "605"
										},
										{
											"begin": 27668,
											"end": 27670,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 27657,
											"end": 27666,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27653,
											"end": 27671,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27644,
											"end": 27650,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 27604,
											"end": 27672,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 27604,
											"end": 27672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27604,
											"end": 27672,
											"name": "tag",
											"source": 15,
											"value": "605"
										},
										{
											"begin": 27604,
											"end": 27672,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27682,
											"end": 27754,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "606"
										},
										{
											"begin": 27750,
											"end": 27752,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 27739,
											"end": 27748,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27735,
											"end": 27753,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27726,
											"end": 27732,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 27682,
											"end": 27754,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 27682,
											"end": 27754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27682,
											"end": 27754,
											"name": "tag",
											"source": 15,
											"value": "606"
										},
										{
											"begin": 27682,
											"end": 27754,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27764,
											"end": 27836,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "607"
										},
										{
											"begin": 27832,
											"end": 27834,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 27821,
											"end": 27830,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27817,
											"end": 27835,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27808,
											"end": 27814,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 27764,
											"end": 27836,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 27764,
											"end": 27836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27764,
											"end": 27836,
											"name": "tag",
											"source": 15,
											"value": "607"
										},
										{
											"begin": 27764,
											"end": 27836,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27298,
											"end": 27843,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 27298,
											"end": 27843,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 27298,
											"end": 27843,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27298,
											"end": 27843,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27298,
											"end": 27843,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27298,
											"end": 27843,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27298,
											"end": 27843,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27298,
											"end": 27843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@account-abstraction/contracts/core/BasePaymaster.sol",
								"@account-abstraction/contracts/core/Helpers.sol",
								"@account-abstraction/contracts/interfaces/IAggregator.sol",
								"@account-abstraction/contracts/interfaces/IEntryPoint.sol",
								"@account-abstraction/contracts/interfaces/INonceManager.sol",
								"@account-abstraction/contracts/interfaces/IPaymaster.sol",
								"@account-abstraction/contracts/interfaces/IStakeManager.sol",
								"@account-abstraction/contracts/interfaces/UserOperation.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/paymaster/KaijuVerifyingPaymaster.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addStake(uint32)": "0396cb60",
							"deposit()": "d0e30db0",
							"entryPoint()": "b0d691fe",
							"getDeposit()": "c399ec88",
							"getHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint48,uint48)": "94e1fc19",
							"owner()": "8da5cb5b",
							"parsePaymasterAndData(bytes)": "94d4ad60",
							"postOp(uint8,bytes,uint256)": "a9a23409",
							"renounceOwnership()": "715018a6",
							"senderNonce(address)": "9c90b443",
							"transferOwnership(address)": "f2fde38b",
							"unlockStake()": "bb9fe6bf",
							"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "f465c77e",
							"verifyingSigner()": "23d9ac9b",
							"withdrawStake(address)": "c23a5cea",
							"withdrawTo(address,uint256)": "205c2878"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_verifyingSigner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"}],\"name\":\"getHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"}],\"name\":\"parsePaymasterAndData\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"senderNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyingSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- the unstake delay for this paymaster. Can only be increased.\"}},\"getHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint48,uint48)\":{\"details\":\"The hash we're going to sign off-chain (and validate on-chain). Method is called by       Off-chain Service - to sign the request.      On-chain Service - from the validatePaymasterUserOp, to validate the signature.\",\"params\":{\"userOp\":\"| User Operation\",\"validAfter\":\"| Validate Period  Note:    that this signature covers all fields of the UserOperation, except the \\\"paymasterAndData\\\",          which will carry the signature itself.\",\"validUntil\":\"| Validate Period\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"parsePaymasterAndData(bytes)\":{\"details\":\"parse paymaster and data\",\"params\":{\"paymasterAndData\":\"| paymaster and data\"}},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"userOp\":\"the user operation\",\"userOpHash\":\"hash of the user's request data.\"},\"returns\":{\"context\":\"value to send to a postOp      zero length to signify postOp is not required.\",\"validationData\":\"signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"to withdraw\",\"withdrawAddress\":\"target to send to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"add a deposit for this paymaster, used for paying for transaction fees\"},\"getDeposit()\":{\"notice\":\"return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"unlockStake()\":{\"notice\":\"unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw value from the deposit\"}},\"notice\":\"A paymaster that uses external service to decide whether to pay for the UserOp. The paymaster trusts an external signer to sign the transaction. The calling user must pass the UserOp to that external signer first, which performs whatever off-chain verification before signing the UserOp. Note that this signature is NOT a replacement for the account-specific signature: - the paymaster checks a signature to agree to PAY for GAS. - the account checks a signature to prove identity and account ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/paymaster/KaijuVerifyingPaymaster.sol\":\"KaijuVerifyingPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0x27f658d545b5f26c2e09a7ac4fba72f9975433839d10225a520e557540b84443\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://426f0c6565ae612d34ae184fb1582e6fc360abf79450975c1c2dd439184094a0\",\"dweb:/ipfs/QmZMeMosC1P6Z5BQyT6iGFQrY6ui5ART65ycVWmXFnDpoq\"]},\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x36858ba8685024974f533530420688da3454d29996ebc42e410673a1ed2ec456\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://616cbcf51778b1961b7f20a547bec7efae6d1d565df0f651926241ed8bde9ad8\",\"dweb:/ipfs/QmaVsgffUUmeUJYgStvRr8cNZ1LBbrc3FYNLW4JT1dVLia\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/paymaster/KaijuVerifyingPaymaster.sol\":{\"keccak256\":\"0xf6c2b40851233faf14438c3ae27ffb063e4fc3a8c0ac9e9777d7323c4ffc40b4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6b429c06400542a37dae77a3d4a69b2b7ae5de536fde1603de0389a8e15073c\",\"dweb:/ipfs/QmXB6GSLatC81xF65gjQhycAWx8gj7vkbwdSYDXbuMZGDZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1059,
								"contract": "contracts/paymaster/KaijuVerifyingPaymaster.sol:KaijuVerifyingPaymaster",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2794,
								"contract": "contracts/paymaster/KaijuVerifyingPaymaster.sol:KaijuVerifyingPaymaster",
								"label": "senderNonce",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addStake(uint32)": {
								"notice": "add stake for this paymaster. This method can also carry eth value to add to the current stake."
							},
							"deposit()": {
								"notice": "add a deposit for this paymaster, used for paying for transaction fees"
							},
							"getDeposit()": {
								"notice": "return current paymaster's deposit on the entryPoint."
							},
							"postOp(uint8,bytes,uint256)": {
								"notice": "post-operation handler. Must verify sender is the entryPoint"
							},
							"unlockStake()": {
								"notice": "unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again"
							},
							"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
								"notice": "payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."
							},
							"withdrawStake(address)": {
								"notice": "withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)"
							},
							"withdrawTo(address,uint256)": {
								"notice": "withdraw value from the deposit"
							}
						},
						"notice": "A paymaster that uses external service to decide whether to pay for the UserOp. The paymaster trusts an external signer to sign the transaction. The calling user must pass the UserOp to that external signer first, which performs whatever off-chain verification before signing the UserOp. Note that this signature is NOT a replacement for the account-specific signature: - the paymaster checks a signature to agree to PAY for GAS. - the account checks a signature to prove identity and account ownership.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@account-abstraction/contracts/core/BasePaymaster.sol": {
				"ast": {
					"absolutePath": "@account-abstraction/contracts/core/BasePaymaster.sol",
					"exportedSymbols": {
						"BasePaymaster": [
							219
						],
						"Context": [
							1186
						],
						"IAggregator": [
							491
						],
						"IEntryPoint": [
							695
						],
						"INonceManager": [
							714
						],
						"IPaymaster": [
							749
						],
						"IStakeManager": [
							854
						],
						"Ownable": [
							1164
						],
						"UserOperation": [
							881
						],
						"UserOperationLib": [
							1051
						],
						"ValidationData": [
							228
						],
						"_intersectTimeRange": [
							372
						],
						"_packValidationData": [
							409,
							447
						],
						"_parseValidationData": [
							287
						],
						"calldataKeccak": [
							457
						]
					},
					"id": 220,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 220,
							"sourceUnit": 1165,
							"src": "100:52:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@account-abstraction/contracts/interfaces/IPaymaster.sol",
							"file": "../interfaces/IPaymaster.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 220,
							"sourceUnit": 750,
							"src": "153:38:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@account-abstraction/contracts/interfaces/IEntryPoint.sol",
							"file": "../interfaces/IEntryPoint.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 220,
							"sourceUnit": 696,
							"src": "192:39:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@account-abstraction/contracts/core/Helpers.sol",
							"file": "./Helpers.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 220,
							"sourceUnit": 458,
							"src": "232:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IPaymaster",
										"nameLocations": [
											"444:10:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 749,
										"src": "444:10:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "444:10:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "Ownable",
										"nameLocations": [
											"456:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1164,
										"src": "456:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "456:7:0"
								}
							],
							"canonicalName": "BasePaymaster",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "257:151:0",
								"text": " Helper class for creating a paymaster.\n provides helper methods for staking.\n validates that the postOp is called only by the entryPoint"
							},
							"fullyImplemented": false,
							"id": 219,
							"linearizedBaseContracts": [
								219,
								1164,
								1186,
								749
							],
							"name": "BasePaymaster",
							"nameLocation": "427:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "b0d691fe",
									"id": 13,
									"mutability": "immutable",
									"name": "entryPoint",
									"nameLocation": "500:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 219,
									"src": "471:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IEntryPoint_$695",
										"typeString": "contract IEntryPoint"
									},
									"typeName": {
										"id": 12,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 11,
											"name": "IEntryPoint",
											"nameLocations": [
												"471:11:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 695,
											"src": "471:11:0"
										},
										"referencedDeclaration": 695,
										"src": "471:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IEntryPoint_$695",
											"typeString": "contract IEntryPoint"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "554:41:0",
										"statements": [
											{
												"expression": {
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 19,
														"name": "entryPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "564:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IEntryPoint_$695",
															"typeString": "contract IEntryPoint"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 20,
														"name": "_entryPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "577:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IEntryPoint_$695",
															"typeString": "contract IEntryPoint"
														}
													},
													"src": "564:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEntryPoint_$695",
														"typeString": "contract IEntryPoint"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "564:24:0"
											}
										]
									},
									"id": 24,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "_entryPoint",
												"nameLocation": "541:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "529:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IEntryPoint_$695",
													"typeString": "contract IEntryPoint"
												},
												"typeName": {
													"id": 15,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 14,
														"name": "IEntryPoint",
														"nameLocations": [
															"529:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 695,
														"src": "529:11:0"
													},
													"referencedDeclaration": 695,
													"src": "529:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEntryPoint_$695",
														"typeString": "contract IEntryPoint"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:25:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "554:0:0"
									},
									"scope": 219,
									"src": "517:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										737
									],
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "810:112:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 40,
														"name": "_requireFromEntryPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "821:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "821:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "821:24:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 44,
															"name": "userOp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "887:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
																"typeString": "struct UserOperation calldata"
															}
														},
														{
															"id": 45,
															"name": "userOpHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "895:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 46,
															"name": "maxCost",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "907:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
																"typeString": "struct UserOperation calldata"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 43,
														"name": "_validatePaymasterUserOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "862:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UserOperation_$881_calldata_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_uint256_$",
															"typeString": "function (struct UserOperation calldata,bytes32,uint256) returns (bytes memory,uint256)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "862:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_uint256_$",
														"typeString": "tuple(bytes memory,uint256)"
													}
												},
												"functionReturnParameters": 39,
												"id": 48,
												"nodeType": "Return",
												"src": "855:60:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "601:26:0",
										"text": "@inheritdoc IPaymaster"
									},
									"functionSelector": "f465c77e",
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validatePaymasterUserOp",
									"nameLocation": "641:23:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 34,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "746:8:0"
									},
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "688:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "665:29:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 27,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 26,
														"name": "UserOperation",
														"nameLocations": [
															"665:13:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "665:13:0"
													},
													"referencedDeclaration": 881,
													"src": "665:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$881_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "userOpHash",
												"nameLocation": "704:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "696:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "maxCost",
												"nameLocation": "724:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "716:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "716:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "664:68:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "context",
												"nameLocation": "777:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "764:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 35,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "764:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "validationData",
												"nameLocation": "794:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "786:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "763:46:0"
									},
									"scope": 219,
									"src": "632:290:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_validatePaymasterUserOp",
									"nameLocation": "937:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "985:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "962:29:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 52,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 51,
														"name": "UserOperation",
														"nameLocations": [
															"962:13:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "962:13:0"
													},
													"referencedDeclaration": 881,
													"src": "962:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$881_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "userOpHash",
												"nameLocation": "1001:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "993:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 54,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "maxCost",
												"nameLocation": "1021:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1013:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:68:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "context",
												"nameLocation": "1073:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1060:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 59,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1060:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "validationData",
												"nameLocation": "1090:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1082:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:46:0"
									},
									"scope": 219,
									"src": "928:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "1241:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 76,
														"name": "_requireFromEntryPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "1251:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1251:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1251:24:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 80,
															"name": "mode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "1293:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_PostOpMode_$722",
																"typeString": "enum IPaymaster.PostOpMode"
															}
														},
														{
															"id": 81,
															"name": "context",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "1299:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"id": 82,
															"name": "actualGasCost",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "1308:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_PostOpMode_$722",
																"typeString": "enum IPaymaster.PostOpMode"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 79,
														"name": "_postOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "1285:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_enum$_PostOpMode_$722_$_t_bytes_calldata_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (enum IPaymaster.PostOpMode,bytes calldata,uint256)"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1285:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "1285:37:0"
											}
										]
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "1112:26:0",
										"text": "@inheritdoc IPaymaster"
									},
									"functionSelector": "a9a23409",
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "postOp",
									"nameLocation": "1152:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 74,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1232:8:0"
									},
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "mode",
												"nameLocation": "1170:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1159:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PostOpMode_$722",
													"typeString": "enum IPaymaster.PostOpMode"
												},
												"typeName": {
													"id": 67,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 66,
														"name": "PostOpMode",
														"nameLocations": [
															"1159:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 722,
														"src": "1159:10:0"
													},
													"referencedDeclaration": 722,
													"src": "1159:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PostOpMode_$722",
														"typeString": "enum IPaymaster.PostOpMode"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "context",
												"nameLocation": "1191:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1176:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 69,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1176:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "actualGasCost",
												"nameLocation": "1208:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1200:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1200:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1158:64:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1241:0:0"
									},
									"scope": 219,
									"src": "1143:186:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "2187:187:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 97,
															"name": "mode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2199:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_PostOpMode_$722",
																"typeString": "enum IPaymaster.PostOpMode"
															}
														},
														{
															"id": 98,
															"name": "context",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "2204:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"id": 99,
															"name": "actualGasCost",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2212:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 100,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2198:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_enum$_PostOpMode_$722_$_t_bytes_calldata_ptr_$_t_uint256_$",
														"typeString": "tuple(enum IPaymaster.PostOpMode,bytes calldata,uint256)"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "2198:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "6d757374206f76657272696465",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2351:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d",
																"typeString": "literal_string \"must override\""
															},
															"value": "must override"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d",
																"typeString": "literal_string \"must override\""
															}
														],
														"id": 102,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "2344:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2344:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "2344:23:0"
											}
										]
									},
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "1335:749:0",
										"text": " post-operation handler.\n (verified to be called only through the entryPoint)\n @dev if subclass returns a non-empty context from validatePaymasterUserOp, it must also implement this method.\n @param mode enum with the following options:\n      opSucceeded - user operation succeeded.\n      opReverted  - user op reverted. still has to pay for gas.\n      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n                       Now this is the 2nd call, after user's op was deliberately reverted.\n @param context - the context value returned by validatePaymasterUserOp\n @param actualGasCost - actual gas used so far (without this postOp call)."
									},
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_postOp",
									"nameLocation": "2098:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "mode",
												"nameLocation": "2117:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "2106:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PostOpMode_$722",
													"typeString": "enum IPaymaster.PostOpMode"
												},
												"typeName": {
													"id": 89,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 88,
														"name": "PostOpMode",
														"nameLocations": [
															"2106:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 722,
														"src": "2106:10:0"
													},
													"referencedDeclaration": 722,
													"src": "2106:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PostOpMode_$722",
														"typeString": "enum IPaymaster.PostOpMode"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "context",
												"nameLocation": "2138:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "2123:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 91,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2123:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "actualGasCost",
												"nameLocation": "2155:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "2147:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2147:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2105:64:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2187:0:0"
									},
									"scope": 219,
									"src": "2089:285:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "2508:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 119,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2566:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BasePaymaster_$219",
																		"typeString": "contract BasePaymaster"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BasePaymaster_$219",
																		"typeString": "contract BasePaymaster"
																	}
																],
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2558:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 117,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2558:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 111,
																"name": "entryPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "2518:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IEntryPoint_$695",
																	"typeString": "contract IEntryPoint"
																}
															},
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2529:9:0",
															"memberName": "depositTo",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 829,
															"src": "2518:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
																"typeString": "function (address) payable external"
															}
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 114,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2547:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2551:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2547:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2518:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
															"typeString": "function (address) payable external"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2518:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "2518:54:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "2380:89:0",
										"text": " add a deposit for this paymaster, used for paying for transaction fees"
									},
									"functionSelector": "d0e30db0",
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "2483:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2490:2:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2508:0:0"
									},
									"scope": 219,
									"src": "2474:105:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2807:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 137,
															"name": "withdrawAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "2839:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 138,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "2856:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 134,
															"name": "entryPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "2817:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEntryPoint_$695",
																"typeString": "contract IEntryPoint"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2828:10:0",
														"memberName": "withdrawTo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 853,
														"src": "2817:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
															"typeString": "function (address payable,uint256) external"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2817:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2817:46:0"
											}
										]
									},
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "2585:131:0",
										"text": " withdraw value from the deposit\n @param withdrawAddress target to send to\n @param amount to withdraw"
									},
									"functionSelector": "205c2878",
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 132,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 131,
												"name": "onlyOwner",
												"nameLocations": [
													"2797:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1083,
												"src": "2797:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2797:9:0"
										}
									],
									"name": "withdrawTo",
									"nameLocation": "2730:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "withdrawAddress",
												"nameLocation": "2757:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2741:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2782:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2774:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:49:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2807:0:0"
									},
									"scope": 219,
									"src": "2721:149:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "3163:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 156,
															"name": "unstakeDelaySec",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "3212:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															],
															"expression": {
																"id": 150,
																"name": "entryPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "3173:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IEntryPoint_$695",
																	"typeString": "contract IEntryPoint"
																}
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3184:8:0",
															"memberName": "addStake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 835,
															"src": "3173:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint32_$returns$__$",
																"typeString": "function (uint32) payable external"
															}
														},
														"id": 155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 153,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3201:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3205:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "3201:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3173:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint32_$returns$__$value",
															"typeString": "function (uint32) payable external"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3173:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "3173:55:0"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2875:214:0",
										"text": " add stake for this paymaster.\n This method can also carry eth value to add to the current stake.\n @param unstakeDelaySec - the unstake delay for this paymaster. Can only be increased."
									},
									"functionSelector": "0396cb60",
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 148,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 147,
												"name": "onlyOwner",
												"nameLocations": [
													"3153:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1083,
												"src": "3153:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3153:9:0"
										}
									],
									"name": "addStake",
									"nameLocation": "3103:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "unstakeDelaySec",
												"nameLocation": "3119:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "3112:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 144,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3112:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3111:24:0"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3163:0:0"
									},
									"scope": 219,
									"src": "3094:141:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "3370:59:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 170,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3416:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BasePaymaster_$219",
																		"typeString": "contract BasePaymaster"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BasePaymaster_$219",
																		"typeString": "contract BasePaymaster"
																	}
																],
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3408:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 168,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3408:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3408:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 166,
															"name": "entryPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "3387:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEntryPoint_$695",
																"typeString": "contract IEntryPoint"
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3398:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 823,
														"src": "3387:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3387:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 165,
												"id": 173,
												"nodeType": "Return",
												"src": "3380:42:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "3241:72:0",
										"text": " return current paymaster's deposit on the entryPoint."
									},
									"functionSelector": "c399ec88",
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDeposit",
									"nameLocation": "3327:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3337:2:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "3361:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3360:9:0"
									},
									"scope": 219,
									"src": "3318:111:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "3630:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 181,
															"name": "entryPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "3640:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEntryPoint_$695",
																"typeString": "contract IEntryPoint"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3651:11:0",
														"memberName": "unlockStake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 839,
														"src": "3640:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3640:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "3640:24:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "3435:148:0",
										"text": " unlock the stake, in order to withdraw it.\n The paymaster can't serve requests once unlocked, until it calls addStake again"
									},
									"functionSelector": "bb9fe6bf",
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 179,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyOwner",
												"nameLocations": [
													"3620:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1083,
												"src": "3620:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3620:9:0"
										}
									],
									"name": "unlockStake",
									"nameLocation": "3597:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3608:2:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3630:0:0"
									},
									"scope": 219,
									"src": "3588:83:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "3965:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 198,
															"name": "withdrawAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "4000:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"id": 195,
															"name": "entryPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "3975:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEntryPoint_$695",
																"typeString": "contract IEntryPoint"
															}
														},
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3986:13:0",
														"memberName": "withdrawStake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 845,
														"src": "3975:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable) external"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "3975:41:0"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "3677:208:0",
										"text": " withdraw the entire paymaster's stake.\n stake must be unlocked first (and then wait for the unstakeDelay to be over)\n @param withdrawAddress the address to send withdrawn value."
									},
									"functionSelector": "c23a5cea",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 193,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 192,
												"name": "onlyOwner",
												"nameLocations": [
													"3955:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1083,
												"src": "3955:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3955:9:0"
										}
									],
									"name": "withdrawStake",
									"nameLocation": "3899:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "withdrawAddress",
												"nameLocation": "3929:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "3913:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3913:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3912:33:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3965:0:0"
									},
									"scope": 219,
									"src": "3890:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "4138:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 207,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4156:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4160:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4156:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 211,
																		"name": "entryPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 13,
																		"src": "4178:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IEntryPoint_$695",
																			"typeString": "contract IEntryPoint"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IEntryPoint_$695",
																			"typeString": "contract IEntryPoint"
																		}
																	],
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4170:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 209,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4170:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4170:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4156:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e646572206e6f7420456e747279506f696e74",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4191:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9",
																"typeString": "literal_string \"Sender not EntryPoint\""
															},
															"value": "Sender not EntryPoint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9",
																"typeString": "literal_string \"Sender not EntryPoint\""
															}
														],
														"id": 206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4148:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4148:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "4148:67:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "4029:53:0",
										"text": "validate the call is made from a valid entrypoint"
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireFromEntryPoint",
									"nameLocation": "4096:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4118:2:0"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4138:0:0"
									},
									"scope": 219,
									"src": "4087:135:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 220,
							"src": "409:3815:0",
							"usedErrors": []
						}
					],
					"src": "36:4189:0"
				},
				"id": 0
			},
			"@account-abstraction/contracts/core/Helpers.sol": {
				"ast": {
					"absolutePath": "@account-abstraction/contracts/core/Helpers.sol",
					"exportedSymbols": {
						"ValidationData": [
							228
						],
						"_intersectTimeRange": [
							372
						],
						"_packValidationData": [
							409,
							447
						],
						"_parseValidationData": [
							287
						],
						"calldataKeccak": [
							457
						]
					},
					"id": 458,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 221,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:1"
						},
						{
							"canonicalName": "ValidationData",
							"id": 228,
							"members": [
								{
									"constant": false,
									"id": 223,
									"mutability": "mutable",
									"name": "aggregator",
									"nameLocation": "730:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 228,
									"src": "722:18:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 222,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "722:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 225,
									"mutability": "mutable",
									"name": "validAfter",
									"nameLocation": "757:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 228,
									"src": "750:17:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint48",
										"typeString": "uint48"
									},
									"typeName": {
										"id": 224,
										"name": "uint48",
										"nodeType": "ElementaryTypeName",
										"src": "750:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint48",
											"typeString": "uint48"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 227,
									"mutability": "mutable",
									"name": "validUntil",
									"nameLocation": "784:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 228,
									"src": "777:17:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint48",
										"typeString": "uint48"
									},
									"typeName": {
										"id": 226,
										"name": "uint48",
										"nodeType": "ElementaryTypeName",
										"src": "777:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint48",
											"typeString": "uint48"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "ValidationData",
							"nameLocation": "697:14:1",
							"nodeType": "StructDefinition",
							"scope": 458,
							"src": "690:111:1",
							"visibility": "public"
						},
						{
							"body": {
								"id": 286,
								"nodeType": "Block",
								"src": "997:346:1",
								"statements": [
									{
										"assignments": [
											237
										],
										"declarations": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "aggregator",
												"nameLocation": "1015:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "1007:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 245,
										"initialValue": {
											"arguments": [
												{
													"arguments": [
														{
															"id": 242,
															"name": "validationData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "1044:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1036:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 240,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "1036:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1036:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												],
												"id": 239,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "1028:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_address_$",
													"typeString": "type(address)"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:1",
													"typeDescriptions": {}
												}
											},
											"id": 244,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1028:32:1",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1007:53:1"
									},
									{
										"assignments": [
											247
										],
										"declarations": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "validUntil",
												"nameLocation": "1077:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "1070:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 246,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1070:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 254,
										"initialValue": {
											"arguments": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 250,
														"name": "validationData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "1097:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">>",
													"rightExpression": {
														"hexValue": "313630",
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1115:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "1097:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												],
												"id": 249,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "1090:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint48_$",
													"typeString": "type(uint48)"
												},
												"typeName": {
													"id": 248,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1090:6:1",
													"typeDescriptions": {}
												}
											},
											"id": 253,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1090:29:1",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1070:49:1"
									},
									{
										"condition": {
											"commonType": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"id": 257,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 255,
												"name": "validUntil",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 247,
												"src": "1133:10:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "==",
											"rightExpression": {
												"hexValue": "30",
												"id": 256,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1147:1:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											},
											"src": "1133:15:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 267,
										"nodeType": "IfStatement",
										"src": "1129:75:1",
										"trueBody": {
											"id": 266,
											"nodeType": "Block",
											"src": "1150:54:1",
											"statements": [
												{
													"expression": {
														"id": 264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 258,
															"name": "validUntil",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "1164:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"expression": {
																"arguments": [
																	{
																		"id": 261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1182:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint48_$",
																			"typeString": "type(uint48)"
																		},
																		"typeName": {
																			"id": 260,
																			"name": "uint48",
																			"nodeType": "ElementaryTypeName",
																			"src": "1182:6:1",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint48_$",
																			"typeString": "type(uint48)"
																		}
																	],
																	"id": 259,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1177:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1177:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint48",
																	"typeString": "type(uint48)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1190:3:1",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "1177:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"src": "1164:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"id": 265,
													"nodeType": "ExpressionStatement",
													"src": "1164:29:1"
												}
											]
										}
									},
									{
										"assignments": [
											269
										],
										"declarations": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "validAfter",
												"nameLocation": "1220:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "1213:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 268,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1213:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 279,
										"initialValue": {
											"arguments": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 272,
														"name": "validationData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "1240:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">>",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_rational_208_by_1",
																	"typeString": "int_const 208"
																},
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3438",
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1259:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_48_by_1",
																		"typeString": "int_const 48"
																	},
																	"value": "48"
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "313630",
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1264:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_160_by_1",
																		"typeString": "int_const 160"
																	},
																	"value": "160"
																},
																"src": "1259:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_208_by_1",
																	"typeString": "int_const 208"
																}
															}
														],
														"id": 276,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1258:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_208_by_1",
															"typeString": "int_const 208"
														}
													},
													"src": "1240:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												],
												"id": 271,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "1233:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint48_$",
													"typeString": "type(uint48)"
												},
												"typeName": {
													"id": 270,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1233:6:1",
													"typeDescriptions": {}
												}
											},
											"id": 278,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1233:36:1",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1213:56:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"id": 281,
													"name": "aggregator",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 237,
													"src": "1301:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 282,
													"name": "validAfter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 269,
													"src": "1313:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												{
													"id": 283,
													"name": "validUntil",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 247,
													"src": "1325:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													{
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													},
													{
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												],
												"id": 280,
												"name": "ValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 228,
												"src": "1286:14:1",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_ValidationData_$228_storage_ptr_$",
													"typeString": "type(struct ValidationData storage pointer)"
												}
											},
											"id": 284,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1286:50:1",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$228_memory_ptr",
												"typeString": "struct ValidationData memory"
											}
										},
										"functionReturnParameters": 235,
										"id": 285,
										"nodeType": "Return",
										"src": "1279:57:1"
									}
								]
							},
							"id": 287,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "_parseValidationData",
							"nameLocation": "913:20:1",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 231,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 230,
										"mutability": "mutable",
										"name": "validationData",
										"nameLocation": "939:14:1",
										"nodeType": "VariableDeclaration",
										"scope": 287,
										"src": "934:19:1",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 229,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "934:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "933:21:1"
							},
							"returnParameters": {
								"id": 235,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 234,
										"mutability": "mutable",
										"name": "data",
										"nameLocation": "991:4:1",
										"nodeType": "VariableDeclaration",
										"scope": 287,
										"src": "969:26:1",
										"stateVariable": false,
										"storageLocation": "memory",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_ValidationData_$228_memory_ptr",
											"typeString": "struct ValidationData"
										},
										"typeName": {
											"id": 233,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 232,
												"name": "ValidationData",
												"nameLocations": [
													"969:14:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 228,
												"src": "969:14:1"
											},
											"referencedDeclaration": 228,
											"src": "969:14:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$228_storage_ptr",
												"typeString": "struct ValidationData"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "968:28:1"
							},
							"scope": 458,
							"src": "904:439:1",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 371,
								"nodeType": "Block",
								"src": "1515:804:1",
								"statements": [
									{
										"assignments": [
											299
										],
										"declarations": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "accountValidationData",
												"nameLocation": "1547:21:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1525:43:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ValidationData_$228_memory_ptr",
													"typeString": "struct ValidationData"
												},
												"typeName": {
													"id": 298,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 297,
														"name": "ValidationData",
														"nameLocations": [
															"1525:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 228,
														"src": "1525:14:1"
													},
													"referencedDeclaration": 228,
													"src": "1525:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ValidationData_$228_storage_ptr",
														"typeString": "struct ValidationData"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 303,
										"initialValue": {
											"arguments": [
												{
													"id": 301,
													"name": "validationData",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "1592:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												],
												"id": 300,
												"name": "_parseValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 287,
												"src": "1571:20:1",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$228_memory_ptr_$",
													"typeString": "function (uint256) pure returns (struct ValidationData memory)"
												}
											},
											"id": 302,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1571:36:1",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$228_memory_ptr",
												"typeString": "struct ValidationData memory"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1525:82:1"
									},
									{
										"assignments": [
											306
										],
										"declarations": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "pmValidationData",
												"nameLocation": "1639:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1617:38:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ValidationData_$228_memory_ptr",
													"typeString": "struct ValidationData"
												},
												"typeName": {
													"id": 305,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 304,
														"name": "ValidationData",
														"nameLocations": [
															"1617:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 228,
														"src": "1617:14:1"
													},
													"referencedDeclaration": 228,
													"src": "1617:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ValidationData_$228_storage_ptr",
														"typeString": "struct ValidationData"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 310,
										"initialValue": {
											"arguments": [
												{
													"id": 308,
													"name": "paymasterValidationData",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "1679:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												],
												"id": 307,
												"name": "_parseValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 287,
												"src": "1658:20:1",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$228_memory_ptr_$",
													"typeString": "function (uint256) pure returns (struct ValidationData memory)"
												}
											},
											"id": 309,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1658:45:1",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$228_memory_ptr",
												"typeString": "struct ValidationData memory"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1617:86:1"
									},
									{
										"assignments": [
											312
										],
										"declarations": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "aggregator",
												"nameLocation": "1721:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1713:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1713:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 315,
										"initialValue": {
											"expression": {
												"id": 313,
												"name": "accountValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 299,
												"src": "1734:21:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ValidationData_$228_memory_ptr",
													"typeString": "struct ValidationData memory"
												}
											},
											"id": 314,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "1756:10:1",
											"memberName": "aggregator",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 223,
											"src": "1734:32:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1713:53:1"
									},
									{
										"condition": {
											"commonType": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"id": 321,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 316,
												"name": "aggregator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 312,
												"src": "1780:10:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "==",
											"rightExpression": {
												"arguments": [
													{
														"hexValue": "30",
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1802:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														}
													],
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "1794:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 317,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1794:7:1",
														"typeDescriptions": {}
													}
												},
												"id": 320,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "1794:10:1",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"src": "1780:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 328,
										"nodeType": "IfStatement",
										"src": "1776:95:1",
										"trueBody": {
											"id": 327,
											"nodeType": "Block",
											"src": "1806:65:1",
											"statements": [
												{
													"expression": {
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 322,
															"name": "aggregator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "1820:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"expression": {
																"id": 323,
																"name": "pmValidationData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "1833:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ValidationData_$228_memory_ptr",
																	"typeString": "struct ValidationData memory"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1850:10:1",
															"memberName": "aggregator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 223,
															"src": "1833:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1820:40:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 326,
													"nodeType": "ExpressionStatement",
													"src": "1820:40:1"
												}
											]
										}
									},
									{
										"assignments": [
											330
										],
										"declarations": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "validAfter",
												"nameLocation": "1887:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1880:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 329,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1880:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 333,
										"initialValue": {
											"expression": {
												"id": 331,
												"name": "accountValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 299,
												"src": "1900:21:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ValidationData_$228_memory_ptr",
													"typeString": "struct ValidationData memory"
												}
											},
											"id": 332,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "1922:10:1",
											"memberName": "validAfter",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 225,
											"src": "1900:32:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1880:52:1"
									},
									{
										"assignments": [
											335
										],
										"declarations": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "validUntil",
												"nameLocation": "1949:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1942:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 334,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1942:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 338,
										"initialValue": {
											"expression": {
												"id": 336,
												"name": "accountValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 299,
												"src": "1962:21:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ValidationData_$228_memory_ptr",
													"typeString": "struct ValidationData memory"
												}
											},
											"id": 337,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "1984:10:1",
											"memberName": "validUntil",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 227,
											"src": "1962:32:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1942:52:1"
									},
									{
										"assignments": [
											340
										],
										"declarations": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "pmValidAfter",
												"nameLocation": "2011:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2004:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 339,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "2004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 343,
										"initialValue": {
											"expression": {
												"id": 341,
												"name": "pmValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 306,
												"src": "2026:16:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ValidationData_$228_memory_ptr",
													"typeString": "struct ValidationData memory"
												}
											},
											"id": 342,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "2043:10:1",
											"memberName": "validAfter",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 225,
											"src": "2026:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "2004:49:1"
									},
									{
										"assignments": [
											345
										],
										"declarations": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "pmValidUntil",
												"nameLocation": "2070:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2063:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 344,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "2063:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 348,
										"initialValue": {
											"expression": {
												"id": 346,
												"name": "pmValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 306,
												"src": "2085:16:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ValidationData_$228_memory_ptr",
													"typeString": "struct ValidationData memory"
												}
											},
											"id": 347,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "2102:10:1",
											"memberName": "validUntil",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 227,
											"src": "2085:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "2063:49:1"
									},
									{
										"condition": {
											"commonType": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"id": 351,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 349,
												"name": "validAfter",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 330,
												"src": "2127:10:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "<",
											"rightExpression": {
												"id": 350,
												"name": "pmValidAfter",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 340,
												"src": "2140:12:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"src": "2127:25:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 356,
										"nodeType": "IfStatement",
										"src": "2123:56:1",
										"trueBody": {
											"expression": {
												"id": 354,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftHandSide": {
													"id": 352,
													"name": "validAfter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 330,
													"src": "2154:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"nodeType": "Assignment",
												"operator": "=",
												"rightHandSide": {
													"id": 353,
													"name": "pmValidAfter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 340,
													"src": "2167:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"src": "2154:25:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"id": 355,
											"nodeType": "ExpressionStatement",
											"src": "2154:25:1"
										}
									},
									{
										"condition": {
											"commonType": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"id": 359,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 357,
												"name": "validUntil",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 335,
												"src": "2193:10:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": ">",
											"rightExpression": {
												"id": 358,
												"name": "pmValidUntil",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 345,
												"src": "2206:12:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"src": "2193:25:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 364,
										"nodeType": "IfStatement",
										"src": "2189:56:1",
										"trueBody": {
											"expression": {
												"id": 362,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftHandSide": {
													"id": 360,
													"name": "validUntil",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 335,
													"src": "2220:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"nodeType": "Assignment",
												"operator": "=",
												"rightHandSide": {
													"id": 361,
													"name": "pmValidUntil",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 345,
													"src": "2233:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"src": "2220:25:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"id": 363,
											"nodeType": "ExpressionStatement",
											"src": "2220:25:1"
										}
									},
									{
										"expression": {
											"arguments": [
												{
													"id": 366,
													"name": "aggregator",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 312,
													"src": "2277:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 367,
													"name": "validAfter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 330,
													"src": "2289:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												{
													"id": 368,
													"name": "validUntil",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 335,
													"src": "2301:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													{
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													},
													{
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												],
												"id": 365,
												"name": "ValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 228,
												"src": "2262:14:1",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_ValidationData_$228_storage_ptr_$",
													"typeString": "type(struct ValidationData storage pointer)"
												}
											},
											"id": 369,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2262:50:1",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$228_memory_ptr",
												"typeString": "struct ValidationData memory"
											}
										},
										"functionReturnParameters": 296,
										"id": 370,
										"nodeType": "Return",
										"src": "2255:57:1"
									}
								]
							},
							"id": 372,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "_intersectTimeRange",
							"nameLocation": "1401:19:1",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 292,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 289,
										"mutability": "mutable",
										"name": "validationData",
										"nameLocation": "1429:14:1",
										"nodeType": "VariableDeclaration",
										"scope": 372,
										"src": "1421:22:1",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 288,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1421:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 291,
										"mutability": "mutable",
										"name": "paymasterValidationData",
										"nameLocation": "1453:23:1",
										"nodeType": "VariableDeclaration",
										"scope": 372,
										"src": "1445:31:1",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 290,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1445:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1420:57:1"
							},
							"returnParameters": {
								"id": 296,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 295,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 372,
										"src": "1492:21:1",
										"stateVariable": false,
										"storageLocation": "memory",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_ValidationData_$228_memory_ptr",
											"typeString": "struct ValidationData"
										},
										"typeName": {
											"id": 294,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 293,
												"name": "ValidationData",
												"nameLocations": [
													"1492:14:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 228,
												"src": "1492:14:1"
											},
											"referencedDeclaration": 228,
											"src": "1492:14:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$228_storage_ptr",
												"typeString": "struct ValidationData"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1491:23:1"
							},
							"scope": 458,
							"src": "1392:927:1",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 408,
								"nodeType": "Block",
								"src": "2511:127:1",
								"statements": [
									{
										"expression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 406,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 394,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"arguments": [
														{
															"expression": {
																"id": 383,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "2536:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ValidationData_$228_memory_ptr",
																	"typeString": "struct ValidationData memory"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2541:10:1",
															"memberName": "aggregator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 223,
															"src": "2536:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 381,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "2528:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2528:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "|",
												"rightExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 388,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 376,
																			"src": "2564:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ValidationData_$228_memory_ptr",
																				"typeString": "struct ValidationData memory"
																			}
																		},
																		"id": 389,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2569:10:1",
																		"memberName": "validUntil",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 227,
																		"src": "2564:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint48",
																			"typeString": "uint48"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint48",
																			"typeString": "uint48"
																		}
																	],
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2556:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 386,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2556:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2556:24:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "313630",
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2584:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_160_by_1",
																	"typeString": "int_const 160"
																},
																"value": "160"
															},
															"src": "2556:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 393,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2555:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "2528:60:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "|",
											"rightExpression": {
												"components": [
													{
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 397,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "2600:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ValidationData_$228_memory_ptr",
																			"typeString": "struct ValidationData memory"
																		}
																	},
																	"id": 398,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2605:10:1",
																	"memberName": "validAfter",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 225,
																	"src": "2600:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																],
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2592:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 395,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2592:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2592:24:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_208_by_1",
																		"typeString": "int_const 208"
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "313630",
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2621:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3438",
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2627:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	"src": "2621:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_208_by_1",
																		"typeString": "int_const 208"
																	}
																}
															],
															"id": 403,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2620:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_208_by_1",
																"typeString": "int_const 208"
															}
														},
														"src": "2592:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												],
												"id": 405,
												"isConstant": false,
												"isInlineArray": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "TupleExpression",
												"src": "2591:40:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "2528:103:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"functionReturnParameters": 380,
										"id": 407,
										"nodeType": "Return",
										"src": "2521:110:1"
									}
								]
							},
							"documentation": {
								"id": 373,
								"nodeType": "StructuredDocumentation",
								"src": "2321:105:1",
								"text": " helper to pack the return value for validateUserOp\n @param data - the ValidationData to pack"
							},
							"id": 409,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "_packValidationData",
							"nameLocation": "2440:19:1",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 377,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 376,
										"mutability": "mutable",
										"name": "data",
										"nameLocation": "2482:4:1",
										"nodeType": "VariableDeclaration",
										"scope": 409,
										"src": "2460:26:1",
										"stateVariable": false,
										"storageLocation": "memory",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_ValidationData_$228_memory_ptr",
											"typeString": "struct ValidationData"
										},
										"typeName": {
											"id": 375,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 374,
												"name": "ValidationData",
												"nameLocations": [
													"2460:14:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 228,
												"src": "2460:14:1"
											},
											"referencedDeclaration": 228,
											"src": "2460:14:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$228_storage_ptr",
												"typeString": "struct ValidationData"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2459:28:1"
							},
							"returnParameters": {
								"id": 380,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 379,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 409,
										"src": "2502:7:1",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 378,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2502:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2501:9:1"
							},
							"scope": 458,
							"src": "2431:207:1",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 446,
								"nodeType": "Block",
								"src": "3062:112:1",
								"statements": [
									{
										"expression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 444,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 433,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"components": [
														{
															"condition": {
																"id": 421,
																"name": "sigFailed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "3080:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "30",
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3096:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "3080:17:1",
															"trueExpression": {
																"hexValue": "31",
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3092:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"id": 425,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3079:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "|",
												"rightExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 428,
																		"name": "validUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "3110:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint48",
																			"typeString": "uint48"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint48",
																			"typeString": "uint48"
																		}
																	],
																	"id": 427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3102:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 426,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3102:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3102:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "313630",
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3125:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_160_by_1",
																	"typeString": "int_const 160"
																},
																"value": "160"
															},
															"src": "3102:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 432,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3101:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "3079:50:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "|",
											"rightExpression": {
												"components": [
													{
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 436,
																	"name": "validAfter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 416,
																	"src": "3141:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																],
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3133:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 434,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3133:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3133:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_208_by_1",
																		"typeString": "int_const 208"
																	},
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "313630",
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3157:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3438",
																		"id": 439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3163:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	"src": "3157:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_208_by_1",
																		"typeString": "int_const 208"
																	}
																}
															],
															"id": 441,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3156:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_208_by_1",
																"typeString": "int_const 208"
															}
														},
														"src": "3133:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												],
												"id": 443,
												"isConstant": false,
												"isInlineArray": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "TupleExpression",
												"src": "3132:35:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "3079:88:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"functionReturnParameters": 420,
										"id": 445,
										"nodeType": "Return",
										"src": "3072:95:1"
									}
								]
							},
							"documentation": {
								"id": 410,
								"nodeType": "StructuredDocumentation",
								"src": "2640:311:1",
								"text": " helper to pack the return value for validateUserOp, when not using an aggregator\n @param sigFailed - true for signature failure, false for success\n @param validUntil last timestamp this UserOperation is valid (or zero for infinite)\n @param validAfter first timestamp this UserOperation is valid"
							},
							"id": 447,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "_packValidationData",
							"nameLocation": "2965:19:1",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 417,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 412,
										"mutability": "mutable",
										"name": "sigFailed",
										"nameLocation": "2990:9:1",
										"nodeType": "VariableDeclaration",
										"scope": 447,
										"src": "2985:14:1",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"typeName": {
											"id": 411,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2985:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 414,
										"mutability": "mutable",
										"name": "validUntil",
										"nameLocation": "3008:10:1",
										"nodeType": "VariableDeclaration",
										"scope": 447,
										"src": "3001:17:1",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint48",
											"typeString": "uint48"
										},
										"typeName": {
											"id": 413,
											"name": "uint48",
											"nodeType": "ElementaryTypeName",
											"src": "3001:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 416,
										"mutability": "mutable",
										"name": "validAfter",
										"nameLocation": "3027:10:1",
										"nodeType": "VariableDeclaration",
										"scope": 447,
										"src": "3020:17:1",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint48",
											"typeString": "uint48"
										},
										"typeName": {
											"id": 415,
											"name": "uint48",
											"nodeType": "ElementaryTypeName",
											"src": "3020:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2984:54:1"
							},
							"returnParameters": {
								"id": 420,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 419,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 447,
										"src": "3053:7:1",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 418,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3053:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3052:9:1"
							},
							"scope": 458,
							"src": "2956:218:1",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 456,
								"nodeType": "Block",
								"src": "3429:193:1",
								"statements": [
									{
										"AST": {
											"nodeType": "YulBlock",
											"src": "3448:168:1",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "3462:22:1",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3479:4:1",
																"type": "",
																"value": "0x40"
															}
														],
														"functionName": {
															"name": "mload",
															"nodeType": "YulIdentifier",
															"src": "3473:5:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "3473:11:1"
													},
													"variables": [
														{
															"name": "mem",
															"nodeType": "YulTypedName",
															"src": "3466:3:1",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulVariableDeclaration",
													"src": "3497:22:1",
													"value": {
														"name": "data.length",
														"nodeType": "YulIdentifier",
														"src": "3508:11:1"
													},
													"variables": [
														{
															"name": "len",
															"nodeType": "YulTypedName",
															"src": "3501:3:1",
															"type": ""
														}
													]
												},
												{
													"expression": {
														"arguments": [
															{
																"name": "mem",
																"nodeType": "YulIdentifier",
																"src": "3545:3:1"
															},
															{
																"name": "data.offset",
																"nodeType": "YulIdentifier",
																"src": "3550:11:1"
															},
															{
																"name": "len",
																"nodeType": "YulIdentifier",
																"src": "3563:3:1"
															}
														],
														"functionName": {
															"name": "calldatacopy",
															"nodeType": "YulIdentifier",
															"src": "3532:12:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "3532:35:1"
													},
													"nodeType": "YulExpressionStatement",
													"src": "3532:35:1"
												},
												{
													"nodeType": "YulAssignment",
													"src": "3580:26:1",
													"value": {
														"arguments": [
															{
																"name": "mem",
																"nodeType": "YulIdentifier",
																"src": "3597:3:1"
															},
															{
																"name": "len",
																"nodeType": "YulIdentifier",
																"src": "3602:3:1"
															}
														],
														"functionName": {
															"name": "keccak256",
															"nodeType": "YulIdentifier",
															"src": "3587:9:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "3587:19:1"
													},
													"variableNames": [
														{
															"name": "ret",
															"nodeType": "YulIdentifier",
															"src": "3580:3:1"
														}
													]
												}
											]
										},
										"evmVersion": "paris",
										"externalReferences": [
											{
												"declaration": 450,
												"isOffset": false,
												"isSlot": false,
												"src": "3508:11:1",
												"suffix": "length",
												"valueSize": 1
											},
											{
												"declaration": 450,
												"isOffset": true,
												"isSlot": false,
												"src": "3550:11:1",
												"suffix": "offset",
												"valueSize": 1
											},
											{
												"declaration": 453,
												"isOffset": false,
												"isSlot": false,
												"src": "3580:3:1",
												"valueSize": 1
											}
										],
										"id": 455,
										"nodeType": "InlineAssembly",
										"src": "3439:177:1"
									}
								]
							},
							"documentation": {
								"id": 448,
								"nodeType": "StructuredDocumentation",
								"src": "3176:176:1",
								"text": " keccak function over calldata.\n @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it."
							},
							"id": 457,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "calldataKeccak",
							"nameLocation": "3366:14:1",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 451,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 450,
										"mutability": "mutable",
										"name": "data",
										"nameLocation": "3396:4:1",
										"nodeType": "VariableDeclaration",
										"scope": 457,
										"src": "3381:19:1",
										"stateVariable": false,
										"storageLocation": "calldata",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_calldata_ptr",
											"typeString": "bytes"
										},
										"typeName": {
											"id": 449,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "3381:5:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3380:21:1"
							},
							"returnParameters": {
								"id": 454,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 453,
										"mutability": "mutable",
										"name": "ret",
										"nameLocation": "3424:3:1",
										"nodeType": "VariableDeclaration",
										"scope": 457,
										"src": "3416:11:1",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 452,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "3416:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3415:13:1"
							},
							"scope": 458,
							"src": "3357:265:1",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						}
					],
					"src": "36:3588:1"
				},
				"id": 1
			},
			"@account-abstraction/contracts/interfaces/IAggregator.sol": {
				"ast": {
					"absolutePath": "@account-abstraction/contracts/interfaces/IAggregator.sol",
					"exportedSymbols": {
						"IAggregator": [
							491
						],
						"UserOperation": [
							881
						],
						"UserOperationLib": [
							1051
						],
						"calldataKeccak": [
							457
						]
					},
					"id": 492,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 459,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:2"
						},
						{
							"absolutePath": "@account-abstraction/contracts/interfaces/UserOperation.sol",
							"file": "./UserOperation.sol",
							"id": 460,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 492,
							"sourceUnit": 1052,
							"src": "62:29:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAggregator",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 461,
								"nodeType": "StructuredDocumentation",
								"src": "93:43:2",
								"text": " Aggregated Signatures validator."
							},
							"fullyImplemented": false,
							"id": 491,
							"linearizedBaseContracts": [
								491
							],
							"name": "IAggregator",
							"nameLocation": "147:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "166:136:2",
										"text": " validate aggregated signature.\n revert if the aggregated signature does not match the given list of operations."
									},
									"functionSelector": "e3563a4f",
									"id": 471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validateSignatures",
									"nameLocation": "316:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "userOps",
												"nameLocation": "360:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "335:32:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UserOperation_$881_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct UserOperation[]"
												},
												"typeName": {
													"baseType": {
														"id": 464,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 463,
															"name": "UserOperation",
															"nameLocations": [
																"335:13:2"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 881,
															"src": "335:13:2"
														},
														"referencedDeclaration": 881,
														"src": "335:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$881_storage_ptr",
															"typeString": "struct UserOperation"
														}
													},
													"id": 465,
													"nodeType": "ArrayTypeName",
													"src": "335:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UserOperation_$881_storage_$dyn_storage_ptr",
														"typeString": "struct UserOperation[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "384:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "369:24:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "369:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "334:60:2"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "408:0:2"
									},
									"scope": 491,
									"src": "307:102:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "415:576:2",
										"text": " validate signature of a single userOp\n This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n @param userOp the userOperation received from the user.\n @return sigForUserOp the value to put into the signature field of the userOp when calling handleOps.\n    (usually empty, unless account and aggregator support some kind of \"multisig\""
									},
									"functionSelector": "64c530cd",
									"id": 480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validateUserOpSignature",
									"nameLocation": "1005:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "1052:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "1029:29:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 474,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 473,
														"name": "UserOperation",
														"nameLocations": [
															"1029:13:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "1029:13:2"
													},
													"referencedDeclaration": 881,
													"src": "1029:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$881_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1028:31:2"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "sigForUserOp",
												"nameLocation": "1100:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "1087:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 477,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1087:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:27:2"
									},
									"scope": 491,
									"src": "996:118:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "1120:368:2",
										"text": " aggregate multiple signatures into a single value.\n This method is called off-chain to calculate the signature to pass with handleOps()\n bundler MAY use optimized custom code perform this aggregation\n @param userOps array of UserOperations to collect the signatures from.\n @return aggregatedSignature the aggregated signature"
									},
									"functionSelector": "275e2d79",
									"id": 490,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "aggregateSignatures",
									"nameLocation": "1502:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "userOps",
												"nameLocation": "1547:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1522:32:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UserOperation_$881_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct UserOperation[]"
												},
												"typeName": {
													"baseType": {
														"id": 483,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 482,
															"name": "UserOperation",
															"nameLocations": [
																"1522:13:2"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 881,
															"src": "1522:13:2"
														},
														"referencedDeclaration": 881,
														"src": "1522:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$881_storage_ptr",
															"typeString": "struct UserOperation"
														}
													},
													"id": 484,
													"nodeType": "ArrayTypeName",
													"src": "1522:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UserOperation_$881_storage_$dyn_storage_ptr",
														"typeString": "struct UserOperation[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1521:34:2"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "aggregatedSignature",
												"nameLocation": "1592:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1579:32:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 487,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1579:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1578:34:2"
									},
									"scope": 491,
									"src": "1493:120:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 492,
							"src": "137:1478:2",
							"usedErrors": []
						}
					],
					"src": "36:1580:2"
				},
				"id": 2
			},
			"@account-abstraction/contracts/interfaces/IEntryPoint.sol": {
				"ast": {
					"absolutePath": "@account-abstraction/contracts/interfaces/IEntryPoint.sol",
					"exportedSymbols": {
						"IAggregator": [
							491
						],
						"IEntryPoint": [
							695
						],
						"INonceManager": [
							714
						],
						"IStakeManager": [
							854
						],
						"UserOperation": [
							881
						],
						"UserOperationLib": [
							1051
						],
						"calldataKeccak": [
							457
						]
					},
					"id": 696,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 493,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "163:24:3"
						},
						{
							"absolutePath": "@account-abstraction/contracts/interfaces/UserOperation.sol",
							"file": "./UserOperation.sol",
							"id": 494,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 696,
							"sourceUnit": 1052,
							"src": "311:29:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@account-abstraction/contracts/interfaces/IStakeManager.sol",
							"file": "./IStakeManager.sol",
							"id": 495,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 696,
							"sourceUnit": 855,
							"src": "341:29:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@account-abstraction/contracts/interfaces/IAggregator.sol",
							"file": "./IAggregator.sol",
							"id": 496,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 696,
							"sourceUnit": 492,
							"src": "371:27:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@account-abstraction/contracts/interfaces/INonceManager.sol",
							"file": "./INonceManager.sol",
							"id": 497,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 696,
							"sourceUnit": 715,
							"src": "399:29:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 498,
										"name": "IStakeManager",
										"nameLocations": [
											"455:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 854,
										"src": "455:13:3"
									},
									"id": 499,
									"nodeType": "InheritanceSpecifier",
									"src": "455:13:3"
								},
								{
									"baseName": {
										"id": 500,
										"name": "INonceManager",
										"nameLocations": [
											"470:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 714,
										"src": "470:13:3"
									},
									"id": 501,
									"nodeType": "InheritanceSpecifier",
									"src": "470:13:3"
								}
							],
							"canonicalName": "IEntryPoint",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 695,
							"linearizedBaseContracts": [
								695,
								714,
								854
							],
							"name": "IEntryPoint",
							"nameLocation": "440:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f",
									"id": 517,
									"name": "UserOperationEvent",
									"nameLocation": "1191:18:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"indexed": true,
												"mutability": "mutable",
												"name": "userOpHash",
												"nameLocation": "1226:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "1210:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 502,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1210:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1254:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "1238:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"indexed": true,
												"mutability": "mutable",
												"name": "paymaster",
												"nameLocation": "1278:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "1262:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"indexed": false,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1297:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "1289:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"indexed": false,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1309:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "1304:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 510,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1304:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"indexed": false,
												"mutability": "mutable",
												"name": "actualGasCost",
												"nameLocation": "1326:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "1318:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1318:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"indexed": false,
												"mutability": "mutable",
												"name": "actualGasUsed",
												"nameLocation": "1349:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "1341:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1209:154:3"
									},
									"src": "1185:179:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "1370:333:3",
										"text": " account \"sender\" was deployed.\n @param userOpHash the userOp that deployed this account. UserOperationEvent will follow.\n @param sender the account that is deployed\n @param factory the factory used to deploy this account (in the initCode)\n @param paymaster the paymaster used by this UserOp"
									},
									"eventSelector": "d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d",
									"id": 528,
									"name": "AccountDeployed",
									"nameLocation": "1714:15:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"indexed": true,
												"mutability": "mutable",
												"name": "userOpHash",
												"nameLocation": "1746:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1730:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 519,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1774:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1758:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1758:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"indexed": false,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "1790:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1782:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1782:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"indexed": false,
												"mutability": "mutable",
												"name": "paymaster",
												"nameLocation": "1807:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1799:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1729:88:3"
									},
									"src": "1708:110:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "1824:337:3",
										"text": " An event emitted if the UserOperation \"callData\" reverted with non-zero length\n @param userOpHash the request unique identifier.\n @param sender the sender of this request\n @param nonce the nonce used in the request\n @param revertReason - the return bytes from the (reverted) call to \"callData\"."
									},
									"eventSelector": "1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201",
									"id": 539,
									"name": "UserOperationRevertReason",
									"nameLocation": "2172:25:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"indexed": true,
												"mutability": "mutable",
												"name": "userOpHash",
												"nameLocation": "2214:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "2198:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 530,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2198:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2242:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "2226:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2226:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"indexed": false,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "2258:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "2250:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2250:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"indexed": false,
												"mutability": "mutable",
												"name": "revertReason",
												"nameLocation": "2271:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "2265:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 536,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2265:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:87:3"
									},
									"src": "2166:119:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "2291:158:3",
										"text": " an event emitted by handleOps(), before starting the execution loop.\n any event emitted before this event, is part of the validation."
									},
									"eventSelector": "bb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972",
									"id": 542,
									"name": "BeforeExecution",
									"nameLocation": "2460:15:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2475:2:3"
									},
									"src": "2454:24:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "2484:101:3",
										"text": " signature aggregator used by the following UserOperationEvents within this bundle."
									},
									"eventSelector": "575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d",
									"id": 547,
									"name": "SignatureAggregatorChanged",
									"nameLocation": "2596:26:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"indexed": true,
												"mutability": "mutable",
												"name": "aggregator",
												"nameLocation": "2639:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "2623:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2623:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2622:28:3"
									},
									"src": "2590:61:3"
								},
								{
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "2657:756:3",
										"text": " a custom revert error of handleOps, to identify the offending op.\n  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n  @param opIndex - index into the array of ops to the failed one (in simulateValidation, this is always zero)\n  @param reason - revert reason\n      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n      so a failure can be attributed to the correct entity.\n   Should be caught in off-chain handleOps simulation and not happen on-chain.\n   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts."
									},
									"errorSelector": "220266b6",
									"id": 554,
									"name": "FailedOp",
									"nameLocation": "3424:8:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "opIndex",
												"nameLocation": "3441:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3433:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3433:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "3457:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3450:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 551,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3450:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3432:32:3"
									},
									"src": "3418:47:3"
								},
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "3471:114:3",
										"text": " error case when a signature aggregator fails to verify the aggregated signature it had created."
									},
									"errorSelector": "86a9f750",
									"id": 559,
									"name": "SignatureValidationFailed",
									"nameLocation": "3596:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "aggregator",
												"nameLocation": "3630:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "3622:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3622:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3621:20:3"
									},
									"src": "3590:52:3"
								},
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "3648:327:3",
										"text": " Successful result from simulateValidation.\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factory (if any)\n @param paymasterInfo stake information about the paymaster (if any)"
									},
									"errorSelector": "e0cff05f",
									"id": 574,
									"name": "ValidationResult",
									"nameLocation": "3986:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "returnInfo",
												"nameLocation": "4014:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "4003:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReturnInfo_$671_memory_ptr",
													"typeString": "struct IEntryPoint.ReturnInfo"
												},
												"typeName": {
													"id": 562,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 561,
														"name": "ReturnInfo",
														"nameLocations": [
															"4003:10:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 671,
														"src": "4003:10:3"
													},
													"referencedDeclaration": 671,
													"src": "4003:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReturnInfo_$671_storage_ptr",
														"typeString": "struct IEntryPoint.ReturnInfo"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "senderInfo",
												"nameLocation": "4044:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "4034:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakeInfo_$806_memory_ptr",
													"typeString": "struct IStakeManager.StakeInfo"
												},
												"typeName": {
													"id": 565,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 564,
														"name": "StakeInfo",
														"nameLocations": [
															"4034:9:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 806,
														"src": "4034:9:3"
													},
													"referencedDeclaration": 806,
													"src": "4034:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$806_storage_ptr",
														"typeString": "struct IStakeManager.StakeInfo"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "factoryInfo",
												"nameLocation": "4066:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "4056:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakeInfo_$806_memory_ptr",
													"typeString": "struct IStakeManager.StakeInfo"
												},
												"typeName": {
													"id": 568,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 567,
														"name": "StakeInfo",
														"nameLocations": [
															"4056:9:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 806,
														"src": "4056:9:3"
													},
													"referencedDeclaration": 806,
													"src": "4056:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$806_storage_ptr",
														"typeString": "struct IStakeManager.StakeInfo"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "paymasterInfo",
												"nameLocation": "4089:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "4079:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakeInfo_$806_memory_ptr",
													"typeString": "struct IStakeManager.StakeInfo"
												},
												"typeName": {
													"id": 571,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 570,
														"name": "StakeInfo",
														"nameLocations": [
															"4079:9:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 806,
														"src": "4079:9:3"
													},
													"referencedDeclaration": 806,
													"src": "4079:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$806_storage_ptr",
														"typeString": "struct IStakeManager.StakeInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4002:101:3"
									},
									"src": "3980:124:3"
								},
								{
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "4110:561:3",
										"text": " Successful result from simulateValidation, if the account returns a signature aggregator\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factory (if any)\n @param paymasterInfo stake information about the paymaster (if any)\n @param aggregatorInfo signature aggregation info (if the account requires signature aggregator)\n      bundler MUST use it to verify the signature, or reject the UserOperation"
									},
									"errorSelector": "faecb4e4",
									"id": 592,
									"name": "ValidationResultWithAggregation",
									"nameLocation": "4682:31:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "returnInfo",
												"nameLocation": "4725:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "4714:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReturnInfo_$671_memory_ptr",
													"typeString": "struct IEntryPoint.ReturnInfo"
												},
												"typeName": {
													"id": 577,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 576,
														"name": "ReturnInfo",
														"nameLocations": [
															"4714:10:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 671,
														"src": "4714:10:3"
													},
													"referencedDeclaration": 671,
													"src": "4714:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReturnInfo_$671_storage_ptr",
														"typeString": "struct IEntryPoint.ReturnInfo"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "senderInfo",
												"nameLocation": "4755:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "4745:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakeInfo_$806_memory_ptr",
													"typeString": "struct IStakeManager.StakeInfo"
												},
												"typeName": {
													"id": 580,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 579,
														"name": "StakeInfo",
														"nameLocations": [
															"4745:9:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 806,
														"src": "4745:9:3"
													},
													"referencedDeclaration": 806,
													"src": "4745:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$806_storage_ptr",
														"typeString": "struct IStakeManager.StakeInfo"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "factoryInfo",
												"nameLocation": "4777:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "4767:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakeInfo_$806_memory_ptr",
													"typeString": "struct IStakeManager.StakeInfo"
												},
												"typeName": {
													"id": 583,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 582,
														"name": "StakeInfo",
														"nameLocations": [
															"4767:9:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 806,
														"src": "4767:9:3"
													},
													"referencedDeclaration": 806,
													"src": "4767:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$806_storage_ptr",
														"typeString": "struct IStakeManager.StakeInfo"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "paymasterInfo",
												"nameLocation": "4800:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "4790:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakeInfo_$806_memory_ptr",
													"typeString": "struct IStakeManager.StakeInfo"
												},
												"typeName": {
													"id": 586,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 585,
														"name": "StakeInfo",
														"nameLocations": [
															"4790:9:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 806,
														"src": "4790:9:3"
													},
													"referencedDeclaration": 806,
													"src": "4790:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$806_storage_ptr",
														"typeString": "struct IStakeManager.StakeInfo"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "aggregatorInfo",
												"nameLocation": "4843:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "4823:34:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AggregatorStakeInfo_$677_memory_ptr",
													"typeString": "struct IEntryPoint.AggregatorStakeInfo"
												},
												"typeName": {
													"id": 589,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 588,
														"name": "AggregatorStakeInfo",
														"nameLocations": [
															"4823:19:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 677,
														"src": "4823:19:3"
													},
													"referencedDeclaration": 677,
													"src": "4823:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AggregatorStakeInfo_$677_storage_ptr",
														"typeString": "struct IEntryPoint.AggregatorStakeInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4713:145:3"
									},
									"src": "4676:183:3"
								},
								{
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "4865:51:3",
										"text": " return value of getSenderAddress"
									},
									"errorSelector": "6ca7b806",
									"id": 597,
									"name": "SenderAddressResult",
									"nameLocation": "4927:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4955:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4947:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4947:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4946:16:3"
									},
									"src": "4921:42:3"
								},
								{
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "4969:51:3",
										"text": " return value of simulateHandleOp"
									},
									"errorSelector": "8b7ac980",
									"id": 612,
									"name": "ExecutionResult",
									"nameLocation": "5031:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "preOpGas",
												"nameLocation": "5055:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "5047:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5047:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "paid",
												"nameLocation": "5073:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "5065:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5065:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "validAfter",
												"nameLocation": "5086:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "5079:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 603,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "5079:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "validUntil",
												"nameLocation": "5105:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "5098:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 605,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "5098:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "targetSuccess",
												"nameLocation": "5122:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "5117:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 607,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5117:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "targetResult",
												"nameLocation": "5143:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "5137:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 609,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5137:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5046:110:3"
									},
									"src": "5025:132:3"
								},
								{
									"canonicalName": "IEntryPoint.UserOpsPerAggregator",
									"id": 622,
									"members": [
										{
											"constant": false,
											"id": 616,
											"mutability": "mutable",
											"name": "userOps",
											"nameLocation": "5255:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 622,
											"src": "5239:23:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_UserOperation_$881_storage_$dyn_storage_ptr",
												"typeString": "struct UserOperation[]"
											},
											"typeName": {
												"baseType": {
													"id": 614,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 613,
														"name": "UserOperation",
														"nameLocations": [
															"5239:13:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "5239:13:3"
													},
													"referencedDeclaration": 881,
													"src": "5239:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$881_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"id": 615,
												"nodeType": "ArrayTypeName",
												"src": "5239:15:3",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UserOperation_$881_storage_$dyn_storage_ptr",
													"typeString": "struct UserOperation[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 619,
											"mutability": "mutable",
											"name": "aggregator",
											"nameLocation": "5315:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 622,
											"src": "5303:22:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IAggregator_$491",
												"typeString": "contract IAggregator"
											},
											"typeName": {
												"id": 618,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 617,
													"name": "IAggregator",
													"nameLocations": [
														"5303:11:3"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 491,
													"src": "5303:11:3"
												},
												"referencedDeclaration": 491,
												"src": "5303:11:3",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAggregator_$491",
													"typeString": "contract IAggregator"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 621,
											"mutability": "mutable",
											"name": "signature",
											"nameLocation": "5373:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 622,
											"src": "5367:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 620,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "5367:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserOpsPerAggregator",
									"nameLocation": "5208:20:3",
									"nodeType": "StructDefinition",
									"scope": 695,
									"src": "5201:188:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "5395:368:3",
										"text": " Execute a batch of UserOperation.\n no signature aggregator is used.\n if any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops the operations to execute\n @param beneficiary the address to receive the fees"
									},
									"functionSelector": "1fad948c",
									"id": 632,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "handleOps",
									"nameLocation": "5777:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "ops",
												"nameLocation": "5812:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "5787:28:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UserOperation_$881_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct UserOperation[]"
												},
												"typeName": {
													"baseType": {
														"id": 625,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 624,
															"name": "UserOperation",
															"nameLocations": [
																"5787:13:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 881,
															"src": "5787:13:3"
														},
														"referencedDeclaration": 881,
														"src": "5787:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$881_storage_ptr",
															"typeString": "struct UserOperation"
														}
													},
													"id": 626,
													"nodeType": "ArrayTypeName",
													"src": "5787:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UserOperation_$881_storage_$dyn_storage_ptr",
														"typeString": "struct UserOperation[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "5833:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "5817:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5817:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5786:59:3"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5854:0:3"
									},
									"scope": 695,
									"src": "5768:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "5861:249:3",
										"text": " Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\n @param beneficiary the address to receive the fees"
									},
									"functionSelector": "4b1d7cf5",
									"id": 642,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "handleAggregatedOps",
									"nameLocation": "6124:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "opsPerAggregator",
												"nameLocation": "6185:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "6153:48:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UserOpsPerAggregator_$622_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IEntryPoint.UserOpsPerAggregator[]"
												},
												"typeName": {
													"baseType": {
														"id": 635,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 634,
															"name": "UserOpsPerAggregator",
															"nameLocations": [
																"6153:20:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 622,
															"src": "6153:20:3"
														},
														"referencedDeclaration": 622,
														"src": "6153:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOpsPerAggregator_$622_storage_ptr",
															"typeString": "struct IEntryPoint.UserOpsPerAggregator"
														}
													},
													"id": 636,
													"nodeType": "ArrayTypeName",
													"src": "6153:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UserOpsPerAggregator_$622_storage_$dyn_storage_ptr",
														"typeString": "struct IEntryPoint.UserOpsPerAggregator[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6227:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "6211:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6211:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6143:101:3"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6253:0:3"
									},
									"scope": 695,
									"src": "6115:139:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "6260:197:3",
										"text": " generate a request Id - unique identifier for this request.\n the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid."
									},
									"functionSelector": "a6193531",
									"id": 651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserOpHash",
									"nameLocation": "6471:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "6508:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "6485:29:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 645,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 644,
														"name": "UserOperation",
														"nameLocations": [
															"6485:13:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "6485:13:3"
													},
													"referencedDeclaration": 881,
													"src": "6485:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$881_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6484:31:3"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "6539:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 648,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6539:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6538:9:3"
									},
									"scope": 695,
									"src": "6462:86:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "6554:398:3",
										"text": " Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\n @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\n @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\n @param userOp the user operation to validate."
									},
									"functionSelector": "ee219423",
									"id": 658,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "simulateValidation",
									"nameLocation": "6966:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "7008:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "6985:29:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 654,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 653,
														"name": "UserOperation",
														"nameLocations": [
															"6985:13:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "6985:13:3"
													},
													"referencedDeclaration": 881,
													"src": "6985:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$881_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6984:31:3"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7024:0:3"
									},
									"scope": 695,
									"src": "6957:68:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IEntryPoint.ReturnInfo",
									"id": 671,
									"members": [
										{
											"constant": false,
											"id": 660,
											"mutability": "mutable",
											"name": "preOpGas",
											"nameLocation": "7660:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 671,
											"src": "7652:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 659,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7652:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 662,
											"mutability": "mutable",
											"name": "prefund",
											"nameLocation": "7686:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 671,
											"src": "7678:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 661,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7678:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 664,
											"mutability": "mutable",
											"name": "sigFailed",
											"nameLocation": "7708:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 671,
											"src": "7703:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 663,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "7703:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 666,
											"mutability": "mutable",
											"name": "validAfter",
											"nameLocation": "7734:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 671,
											"src": "7727:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 665,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "7727:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 668,
											"mutability": "mutable",
											"name": "validUntil",
											"nameLocation": "7761:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 671,
											"src": "7754:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 667,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "7754:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 670,
											"mutability": "mutable",
											"name": "paymasterContext",
											"nameLocation": "7787:16:3",
											"nodeType": "VariableDeclaration",
											"scope": 671,
											"src": "7781:22:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 669,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "7781:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReturnInfo",
									"nameLocation": "7631:10:3",
									"nodeType": "StructDefinition",
									"scope": 695,
									"src": "7624:186:3",
									"visibility": "public"
								},
								{
									"canonicalName": "IEntryPoint.AggregatorStakeInfo",
									"id": 677,
									"members": [
										{
											"constant": false,
											"id": 673,
											"mutability": "mutable",
											"name": "aggregator",
											"nameLocation": "7990:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 677,
											"src": "7982:18:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 672,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7982:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 676,
											"mutability": "mutable",
											"name": "stakeInfo",
											"nameLocation": "8020:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 677,
											"src": "8010:19:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakeInfo_$806_storage_ptr",
												"typeString": "struct IStakeManager.StakeInfo"
											},
											"typeName": {
												"id": 675,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 674,
													"name": "StakeInfo",
													"nameLocations": [
														"8010:9:3"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 806,
													"src": "8010:9:3"
												},
												"referencedDeclaration": 806,
												"src": "8010:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakeInfo_$806_storage_ptr",
													"typeString": "struct IStakeManager.StakeInfo"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AggregatorStakeInfo",
									"nameLocation": "7952:19:3",
									"nodeType": "StructDefinition",
									"scope": 695,
									"src": "7945:91:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "8042:337:3",
										"text": " Get counterfactual sender address.\n  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n this method always revert, and returns the address in SenderAddressResult error\n @param initCode the constructor code to be passed into the UserOperation."
									},
									"functionSelector": "9b249f69",
									"id": 683,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSenderAddress",
									"nameLocation": "8393:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "initCode",
												"nameLocation": "8423:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "8410:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 679,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8410:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8409:23:3"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8441:0:3"
									},
									"scope": 695,
									"src": "8384:58:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "8449:847:3",
										"text": " simulate full execution of a UserOperation (including both validation and target execution)\n this method will always revert with \"ExecutionResult\".\n it performs full validation of the UserOperation, but ignores signature error.\n an optional target address is called after the userop succeeds, and its value is returned\n (before the entire call is reverted)\n Note that in order to collect the the success/failure of the target call, it must be executed\n with trace enabled to track the emitted events.\n @param op the UserOperation to simulate\n @param target if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult\n        are set to the return from that call.\n @param targetCallData callData to pass to target address"
									},
									"functionSelector": "d6383f94",
									"id": 694,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "simulateHandleOp",
									"nameLocation": "9310:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "op",
												"nameLocation": "9350:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "9327:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 686,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 685,
														"name": "UserOperation",
														"nameLocations": [
															"9327:13:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "9327:13:3"
													},
													"referencedDeclaration": 881,
													"src": "9327:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$881_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9362:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "9354:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9354:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "targetCallData",
												"nameLocation": "9385:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "9370:29:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 690,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9370:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9326:74:3"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9409:0:3"
									},
									"scope": 695,
									"src": "9301:109:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 696,
							"src": "430:8982:3",
							"usedErrors": [
								554,
								559,
								574,
								592,
								597,
								612
							]
						}
					],
					"src": "163:9251:3"
				},
				"id": 3
			},
			"@account-abstraction/contracts/interfaces/INonceManager.sol": {
				"ast": {
					"absolutePath": "@account-abstraction/contracts/interfaces/INonceManager.sol",
					"exportedSymbols": {
						"INonceManager": [
							714
						]
					},
					"id": 715,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 697,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "INonceManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 714,
							"linearizedBaseContracts": [
								714
							],
							"name": "INonceManager",
							"nameLocation": "72:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "93:416:4",
										"text": " Return the next nonce for this sender.\n Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n But UserOp with different keys can come with arbitrary order.\n @param sender the account address\n @param key the high 192 bit of the nonce\n @return nonce a full nonce to pass for next UserOp with this sender."
									},
									"functionSelector": "35567e1a",
									"id": 707,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNonce",
									"nameLocation": "523:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "540:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "532:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "556:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "548:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 701,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "548:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "531:29:4"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "596:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "588:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "587:15:4"
									},
									"scope": 714,
									"src": "514:89:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "609:449:4",
										"text": " Manually increment the nonce of the sender.\n This method is exposed just for completeness..\n Account does NOT need to call it, neither during validation, nor elsewhere,\n as the EntryPoint will update the nonce regardless.\n Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n UserOperations will not pay extra for the first transaction with a given key."
									},
									"functionSelector": "0bd28e3b",
									"id": 713,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "incrementNonce",
									"nameLocation": "1072:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1095:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1087:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 709,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:13:4"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:0:4"
									},
									"scope": 714,
									"src": "1063:46:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 715,
							"src": "62:1049:4",
							"usedErrors": []
						}
					],
					"src": "36:1076:4"
				},
				"id": 4
			},
			"@account-abstraction/contracts/interfaces/IPaymaster.sol": {
				"ast": {
					"absolutePath": "@account-abstraction/contracts/interfaces/IPaymaster.sol",
					"exportedSymbols": {
						"IPaymaster": [
							749
						],
						"UserOperation": [
							881
						],
						"UserOperationLib": [
							1051
						],
						"calldataKeccak": [
							457
						]
					},
					"id": 750,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 716,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:5"
						},
						{
							"absolutePath": "@account-abstraction/contracts/interfaces/UserOperation.sol",
							"file": "./UserOperation.sol",
							"id": 717,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 750,
							"sourceUnit": 1052,
							"src": "62:29:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPaymaster",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 718,
								"nodeType": "StructuredDocumentation",
								"src": "93:216:5",
								"text": " the interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n a paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction."
							},
							"fullyImplemented": false,
							"id": 749,
							"linearizedBaseContracts": [
								749
							],
							"name": "IPaymaster",
							"nameLocation": "320:10:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IPaymaster.PostOpMode",
									"id": 722,
									"members": [
										{
											"id": 719,
											"name": "opSucceeded",
											"nameLocation": "364:11:5",
											"nodeType": "EnumValue",
											"src": "364:11:5"
										},
										{
											"id": 720,
											"name": "opReverted",
											"nameLocation": "406:10:5",
											"nodeType": "EnumValue",
											"src": "406:10:5"
										},
										{
											"id": 721,
											"name": "postOpReverted",
											"nameLocation": "473:14:5",
											"nodeType": "EnumValue",
											"src": "473:14:5"
										}
									],
									"name": "PostOpMode",
									"nameLocation": "343:10:5",
									"nodeType": "EnumDefinition",
									"src": "338:269:5"
								},
								{
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "613:1254:5",
										"text": " payment validation: check if paymaster agrees to pay.\n Must verify sender is the entryPoint.\n Revert to reject this request.\n Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted)\n The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n @param userOp the user operation\n @param userOpHash hash of the user's request data.\n @param maxCost the maximum cost of this transaction (based on maximum gas and gas price from userOp)\n @return context value to send to a postOp\n      zero length to signify postOp is not required.\n @return validationData signature and time-range of this operation, encoded the same as the return value of validateUserOperation\n      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n         otherwise, an address of an \"authorizer\" contract.\n      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n      <6-byte> validAfter - first timestamp this operation is valid\n      Note that the validation code cannot use block.timestamp (or block.number) directly."
									},
									"functionSelector": "f465c77e",
									"id": 737,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validatePaymasterUserOp",
									"nameLocation": "1881:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "1928:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "1905:29:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 725,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 724,
														"name": "UserOperation",
														"nameLocations": [
															"1905:13:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "1905:13:5"
													},
													"referencedDeclaration": 881,
													"src": "1905:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$881_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "userOpHash",
												"nameLocation": "1944:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "1936:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 727,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1936:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "maxCost",
												"nameLocation": "1964:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "1956:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1956:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1904:68:5"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "context",
												"nameLocation": "2008:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "1995:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 732,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1995:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "validationData",
												"nameLocation": "2025:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "2017:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2017:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1994:46:5"
									},
									"scope": 749,
									"src": "1872:169:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "2047:616:5",
										"text": " post-operation handler.\n Must verify sender is the entryPoint\n @param mode enum with the following options:\n      opSucceeded - user operation succeeded.\n      opReverted  - user op reverted. still has to pay for gas.\n      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n                       Now this is the 2nd call, after user's op was deliberately reverted.\n @param context - the context value returned by validatePaymasterUserOp\n @param actualGasCost - actual gas used so far (without this postOp call)."
									},
									"functionSelector": "a9a23409",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "postOp",
									"nameLocation": "2677:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "mode",
												"nameLocation": "2695:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2684:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PostOpMode_$722",
													"typeString": "enum IPaymaster.PostOpMode"
												},
												"typeName": {
													"id": 740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 739,
														"name": "PostOpMode",
														"nameLocations": [
															"2684:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 722,
														"src": "2684:10:5"
													},
													"referencedDeclaration": 722,
													"src": "2684:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PostOpMode_$722",
														"typeString": "enum IPaymaster.PostOpMode"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "context",
												"nameLocation": "2716:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2701:22:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 742,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2701:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "actualGasCost",
												"nameLocation": "2733:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2725:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2683:64:5"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2756:0:5"
									},
									"scope": 749,
									"src": "2668:89:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 750,
							"src": "310:2449:5",
							"usedErrors": []
						}
					],
					"src": "36:2724:5"
				},
				"id": 5
			},
			"@account-abstraction/contracts/interfaces/IStakeManager.sol": {
				"ast": {
					"absolutePath": "@account-abstraction/contracts/interfaces/IStakeManager.sol",
					"exportedSymbols": {
						"IStakeManager": [
							854
						]
					},
					"id": 855,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 751,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IStakeManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 752,
								"nodeType": "StructuredDocumentation",
								"src": "67:211:6",
								"text": " manage deposits and stakes.\n deposit is just a balance used to pay for UserOperations (either by a paymaster or an account)\n stake is value locked for at least \"unstakeDelay\" by the staked entity."
							},
							"fullyImplemented": false,
							"id": 854,
							"linearizedBaseContracts": [
								854
							],
							"name": "IStakeManager",
							"nameLocation": "289:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4",
									"id": 758,
									"name": "Deposited",
									"nameLocation": "316:9:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "351:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "335:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "335:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalDeposit",
												"nameLocation": "376:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "368:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "325:69:6"
									},
									"src": "310:85:6"
								},
								{
									"anonymous": false,
									"eventSelector": "d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb",
									"id": 766,
									"name": "Withdrawn",
									"nameLocation": "407:9:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "442:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "426:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawAddress",
												"nameLocation": "467:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "459:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "500:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "492:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "492:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:96:6"
									},
									"src": "401:112:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "519:52:6",
										"text": "Emitted when stake or unstake delay are modified"
									},
									"eventSelector": "a5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01",
									"id": 775,
									"name": "StakeLocked",
									"nameLocation": "582:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "619:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "603:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalStaked",
												"nameLocation": "644:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "636:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"indexed": false,
												"mutability": "mutable",
												"name": "unstakeDelaySec",
												"nameLocation": "673:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "665:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "665:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "593:101:6"
									},
									"src": "576:119:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 776,
										"nodeType": "StructuredDocumentation",
										"src": "701:52:6",
										"text": "Emitted once a stake is scheduled for withdrawal"
									},
									"eventSelector": "fa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a",
									"id": 782,
									"name": "StakeUnlocked",
									"nameLocation": "764:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "803:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "787:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawTime",
												"nameLocation": "828:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "820:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:69:6"
									},
									"src": "758:89:6"
								},
								{
									"anonymous": false,
									"eventSelector": "b7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3",
									"id": 790,
									"name": "StakeWithdrawn",
									"nameLocation": "859:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "899:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "883:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawAddress",
												"nameLocation": "924:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "916:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "957:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "949:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "949:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "873:96:6"
									},
									"src": "853:117:6"
								},
								{
									"canonicalName": "IStakeManager.DepositInfo",
									"id": 801,
									"members": [
										{
											"constant": false,
											"id": 792,
											"mutability": "mutable",
											"name": "deposit",
											"nameLocation": "1650:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 801,
											"src": "1642:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint112",
												"typeString": "uint112"
											},
											"typeName": {
												"id": 791,
												"name": "uint112",
												"nodeType": "ElementaryTypeName",
												"src": "1642:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 794,
											"mutability": "mutable",
											"name": "staked",
											"nameLocation": "1672:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 801,
											"src": "1667:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 793,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1667:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 796,
											"mutability": "mutable",
											"name": "stake",
											"nameLocation": "1696:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 801,
											"src": "1688:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint112",
												"typeString": "uint112"
											},
											"typeName": {
												"id": 795,
												"name": "uint112",
												"nodeType": "ElementaryTypeName",
												"src": "1688:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 798,
											"mutability": "mutable",
											"name": "unstakeDelaySec",
											"nameLocation": "1718:15:6",
											"nodeType": "VariableDeclaration",
											"scope": 801,
											"src": "1711:22:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 797,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1711:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 800,
											"mutability": "mutable",
											"name": "withdrawTime",
											"nameLocation": "1750:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 801,
											"src": "1743:19:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 799,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "1743:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DepositInfo",
									"nameLocation": "1620:11:6",
									"nodeType": "StructDefinition",
									"scope": 854,
									"src": "1613:156:6",
									"visibility": "public"
								},
								{
									"canonicalName": "IStakeManager.StakeInfo",
									"id": 806,
									"members": [
										{
											"constant": false,
											"id": 803,
											"mutability": "mutable",
											"name": "stake",
											"nameLocation": "1871:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 806,
											"src": "1863:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 802,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1863:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 805,
											"mutability": "mutable",
											"name": "unstakeDelaySec",
											"nameLocation": "1894:15:6",
											"nodeType": "VariableDeclaration",
											"scope": 806,
											"src": "1886:23:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 804,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1886:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakeInfo",
									"nameLocation": "1843:9:6",
									"nodeType": "StructDefinition",
									"scope": 854,
									"src": "1836:80:6",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "1922:60:6",
										"text": "@return info - full deposit information of given account"
									},
									"functionSelector": "5287ce12",
									"id": 815,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDepositInfo",
									"nameLocation": "1996:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2019:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "2011:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2011:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2010:17:6"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "info",
												"nameLocation": "2070:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "2051:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DepositInfo_$801_memory_ptr",
													"typeString": "struct IStakeManager.DepositInfo"
												},
												"typeName": {
													"id": 812,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 811,
														"name": "DepositInfo",
														"nameLocations": [
															"2051:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 801,
														"src": "2051:11:6"
													},
													"referencedDeclaration": 801,
													"src": "2051:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DepositInfo_$801_storage_ptr",
														"typeString": "struct IStakeManager.DepositInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2050:25:6"
									},
									"scope": 854,
									"src": "1987:89:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "2082:56:6",
										"text": "@return the deposit (for gas payment) of the account"
									},
									"functionSelector": "70a08231",
									"id": 823,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2152:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2170:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "2162:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2162:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2161:17:6"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "2202:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:9:6"
									},
									"scope": 854,
									"src": "2143:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "2217:58:6",
										"text": " add to the deposit of the given account"
									},
									"functionSelector": "b760faf9",
									"id": 829,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositTo",
									"nameLocation": "2289:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2307:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "2299:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2299:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2298:17:6"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2332:0:6"
									},
									"scope": 854,
									"src": "2280:53:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "2339:201:6",
										"text": " add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param _unstakeDelaySec the new lock duration before the deposit can be withdrawn."
									},
									"functionSelector": "0396cb60",
									"id": 835,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addStake",
									"nameLocation": "2554:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "_unstakeDelaySec",
												"nameLocation": "2570:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "2563:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 831,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2563:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2562:25:6"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2604:0:6"
									},
									"scope": 854,
									"src": "2545:60:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "2611:128:6",
										"text": " attempt to unlock the stake.\n the value can be withdrawn (using withdrawStake) after the unstake delay."
									},
									"functionSelector": "bb9fe6bf",
									"id": 839,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unlockStake",
									"nameLocation": "2753:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:2:6"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2775:0:6"
									},
									"scope": 854,
									"src": "2744:32:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 840,
										"nodeType": "StructuredDocumentation",
										"src": "2782:194:6",
										"text": " withdraw from the (unlocked) stake.\n must first call unlockStake and wait for the unstakeDelay to pass\n @param withdrawAddress the address to send withdrawn value."
									},
									"functionSelector": "c23a5cea",
									"id": 845,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawStake",
									"nameLocation": "2990:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "withdrawAddress",
												"nameLocation": "3020:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "3004:31:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:33:6"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3045:0:6"
									},
									"scope": 854,
									"src": "2981:65:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "3052:165:6",
										"text": " withdraw from the deposit.\n @param withdrawAddress the address to send withdrawn value.\n @param withdrawAmount the amount to withdraw."
									},
									"functionSelector": "205c2878",
									"id": 853,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawTo",
									"nameLocation": "3231:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "withdrawAddress",
												"nameLocation": "3258:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "3242:31:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3242:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "withdrawAmount",
												"nameLocation": "3283:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "3275:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3275:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3241:57:6"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:0:6"
									},
									"scope": 854,
									"src": "3222:86:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 855,
							"src": "279:3031:6",
							"usedErrors": []
						}
					],
					"src": "41:3270:6"
				},
				"id": 6
			},
			"@account-abstraction/contracts/interfaces/UserOperation.sol": {
				"ast": {
					"absolutePath": "@account-abstraction/contracts/interfaces/UserOperation.sol",
					"exportedSymbols": {
						"UserOperation": [
							881
						],
						"UserOperationLib": [
							1051
						],
						"calldataKeccak": [
							457
						]
					},
					"id": 1052,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 856,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:7"
						},
						{
							"absolutePath": "@account-abstraction/contracts/core/Helpers.sol",
							"file": "../core/Helpers.sol",
							"id": 858,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1052,
							"sourceUnit": 458,
							"src": "104:51:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 857,
										"name": "calldataKeccak",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 457,
										"src": "112:14:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "UserOperation",
							"id": 881,
							"members": [
								{
									"constant": false,
									"id": 860,
									"mutability": "mutable",
									"name": "sender",
									"nameLocation": "1237:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 881,
									"src": "1229:14:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 859,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1229:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 862,
									"mutability": "mutable",
									"name": "nonce",
									"nameLocation": "1261:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 881,
									"src": "1253:13:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 861,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1253:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 864,
									"mutability": "mutable",
									"name": "initCode",
									"nameLocation": "1282:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 881,
									"src": "1276:14:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 863,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1276:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 866,
									"mutability": "mutable",
									"name": "callData",
									"nameLocation": "1306:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 881,
									"src": "1300:14:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 865,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1300:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 868,
									"mutability": "mutable",
									"name": "callGasLimit",
									"nameLocation": "1332:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 881,
									"src": "1324:20:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 867,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1324:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 870,
									"mutability": "mutable",
									"name": "verificationGasLimit",
									"nameLocation": "1362:20:7",
									"nodeType": "VariableDeclaration",
									"scope": 881,
									"src": "1354:28:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 869,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1354:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 872,
									"mutability": "mutable",
									"name": "preVerificationGas",
									"nameLocation": "1400:18:7",
									"nodeType": "VariableDeclaration",
									"scope": 881,
									"src": "1392:26:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 871,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1392:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 874,
									"mutability": "mutable",
									"name": "maxFeePerGas",
									"nameLocation": "1436:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 881,
									"src": "1428:20:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 873,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1428:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 876,
									"mutability": "mutable",
									"name": "maxPriorityFeePerGas",
									"nameLocation": "1466:20:7",
									"nodeType": "VariableDeclaration",
									"scope": 881,
									"src": "1458:28:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 875,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1458:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 878,
									"mutability": "mutable",
									"name": "paymasterAndData",
									"nameLocation": "1502:16:7",
									"nodeType": "VariableDeclaration",
									"scope": 881,
									"src": "1496:22:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 877,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1496:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 880,
									"mutability": "mutable",
									"name": "signature",
									"nameLocation": "1534:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 881,
									"src": "1528:15:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 879,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1528:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "UserOperation",
							"nameLocation": "1204:13:7",
							"nodeType": "StructDefinition",
							"scope": 1052,
							"src": "1197:353:7",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "UserOperationLib",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "1552:77:7",
								"text": " Utility functions helpful when working with UserOperation structs."
							},
							"fullyImplemented": true,
							"id": 1051,
							"linearizedBaseContracts": [
								1051
							],
							"name": "UserOperationLib",
							"nameLocation": "1638:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "1744:199:7",
										"statements": [
											{
												"assignments": [
													891
												],
												"declarations": [
													{
														"constant": false,
														"id": 891,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1762:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 902,
														"src": "1754:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 890,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1754:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 892,
												"nodeType": "VariableDeclarationStatement",
												"src": "1754:12:7"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1868:30:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1869:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "userOp",
																		"nodeType": "YulIdentifier",
																		"src": "1890:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1877:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1877:20:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "1869:4:7"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 891,
														"isOffset": false,
														"isSlot": false,
														"src": "1869:4:7",
														"valueSize": 1
													},
													{
														"declaration": 885,
														"isOffset": false,
														"isSlot": false,
														"src": "1890:6:7",
														"valueSize": 1
													}
												],
												"id": 893,
												"nodeType": "InlineAssembly",
												"src": "1859:39:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 898,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "1930:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1922:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 896,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "1922:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1922:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1914:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 894,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1914:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1914:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 889,
												"id": 901,
												"nodeType": "Return",
												"src": "1907:29:7"
											}
										]
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSender",
									"nameLocation": "1671:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "1704:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "1681:29:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 884,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 883,
														"name": "UserOperation",
														"nameLocations": [
															"1681:13:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "1681:13:7"
													},
													"referencedDeclaration": 881,
													"src": "1681:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$881_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:31:7"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "1735:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1735:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1734:9:7"
									},
									"scope": 1051,
									"src": "1662:281:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "2164:391:7",
										"statements": [
											{
												"id": 936,
												"nodeType": "UncheckedBlock",
												"src": "2170:379:7",
												"statements": [
													{
														"assignments": [
															912
														],
														"declarations": [
															{
																"constant": false,
																"id": 912,
																"mutability": "mutable",
																"name": "maxFeePerGas",
																"nameLocation": "2198:12:7",
																"nodeType": "VariableDeclaration",
																"scope": 936,
																"src": "2190:20:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 911,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2190:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 915,
														"initialValue": {
															"expression": {
																"id": 913,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "2213:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
																	"typeString": "struct UserOperation calldata"
																}
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2220:12:7",
															"memberName": "maxFeePerGas",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 874,
															"src": "2213:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2190:42:7"
													},
													{
														"assignments": [
															917
														],
														"declarations": [
															{
																"constant": false,
																"id": 917,
																"mutability": "mutable",
																"name": "maxPriorityFeePerGas",
																"nameLocation": "2250:20:7",
																"nodeType": "VariableDeclaration",
																"scope": 936,
																"src": "2242:28:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 916,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2242:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 920,
														"initialValue": {
															"expression": {
																"id": 918,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "2273:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
																	"typeString": "struct UserOperation calldata"
																}
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2280:20:7",
															"memberName": "maxPriorityFeePerGas",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 876,
															"src": "2273:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2242:58:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 921,
																"name": "maxFeePerGas",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "2314:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 922,
																"name": "maxPriorityFeePerGas",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "2330:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2314:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 927,
														"nodeType": "IfStatement",
														"src": "2310:161:7",
														"trueBody": {
															"id": 926,
															"nodeType": "Block",
															"src": "2352:119:7",
															"statements": [
																{
																	"expression": {
																		"id": 924,
																		"name": "maxFeePerGas",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 912,
																		"src": "2448:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 910,
																	"id": 925,
																	"nodeType": "Return",
																	"src": "2441:19:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 929,
																	"name": "maxFeePerGas",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "2491:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 930,
																		"name": "maxPriorityFeePerGas",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 917,
																		"src": "2505:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"id": 931,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "2528:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2534:7:7",
																		"memberName": "basefee",
																		"nodeType": "MemberAccess",
																		"src": "2528:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2505:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 928,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "2487:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2487:55:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 910,
														"id": 935,
														"nodeType": "Return",
														"src": "2480:62:7"
													}
												]
											}
										]
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "gasPrice",
									"nameLocation": "2092:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "2124:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "2101:29:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 905,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 904,
														"name": "UserOperation",
														"nameLocations": [
															"2101:13:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "2101:13:7"
													},
													"referencedDeclaration": 881,
													"src": "2101:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$881_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:31:7"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "2155:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2155:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2154:9:7"
									},
									"scope": 1051,
									"src": "2083:472:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "2647:856:7",
										"statements": [
											{
												"assignments": [
													947
												],
												"declarations": [
													{
														"constant": false,
														"id": 947,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "2665:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "2657:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 946,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2657:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 951,
												"initialValue": {
													"arguments": [
														{
															"id": 949,
															"name": "userOp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "2684:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
																"typeString": "struct UserOperation calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
																"typeString": "struct UserOperation calldata"
															}
														],
														"id": 948,
														"name": "getSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "2674:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_UserOperation_$881_calldata_ptr_$returns$_t_address_$",
															"typeString": "function (struct UserOperation calldata) pure returns (address)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2674:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2657:34:7"
											},
											{
												"assignments": [
													953
												],
												"declarations": [
													{
														"constant": false,
														"id": 953,
														"mutability": "mutable",
														"name": "nonce",
														"nameLocation": "2709:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "2701:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 952,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2701:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 956,
												"initialValue": {
													"expression": {
														"id": 954,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "2717:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
															"typeString": "struct UserOperation calldata"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2724:5:7",
													"memberName": "nonce",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 862,
													"src": "2717:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2701:28:7"
											},
											{
												"assignments": [
													958
												],
												"declarations": [
													{
														"constant": false,
														"id": 958,
														"mutability": "mutable",
														"name": "hashInitCode",
														"nameLocation": "2747:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "2739:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 957,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2739:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 963,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 960,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "2777:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
																	"typeString": "struct UserOperation calldata"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2784:8:7",
															"memberName": "initCode",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 864,
															"src": "2777:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 959,
														"name": "calldataKeccak",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "2762:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes calldata) pure returns (bytes32)"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2762:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2739:54:7"
											},
											{
												"assignments": [
													965
												],
												"declarations": [
													{
														"constant": false,
														"id": 965,
														"mutability": "mutable",
														"name": "hashCallData",
														"nameLocation": "2811:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "2803:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 964,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2803:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 970,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 967,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "2841:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
																	"typeString": "struct UserOperation calldata"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2848:8:7",
															"memberName": "callData",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 866,
															"src": "2841:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 966,
														"name": "calldataKeccak",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "2826:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes calldata) pure returns (bytes32)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2826:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2803:54:7"
											},
											{
												"assignments": [
													972
												],
												"declarations": [
													{
														"constant": false,
														"id": 972,
														"mutability": "mutable",
														"name": "callGasLimit",
														"nameLocation": "2875:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "2867:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 971,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2867:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 975,
												"initialValue": {
													"expression": {
														"id": 973,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "2890:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
															"typeString": "struct UserOperation calldata"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2897:12:7",
													"memberName": "callGasLimit",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 868,
													"src": "2890:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2867:42:7"
											},
											{
												"assignments": [
													977
												],
												"declarations": [
													{
														"constant": false,
														"id": 977,
														"mutability": "mutable",
														"name": "verificationGasLimit",
														"nameLocation": "2927:20:7",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "2919:28:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 976,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2919:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 980,
												"initialValue": {
													"expression": {
														"id": 978,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "2950:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
															"typeString": "struct UserOperation calldata"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2957:20:7",
													"memberName": "verificationGasLimit",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 870,
													"src": "2950:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2919:58:7"
											},
											{
												"assignments": [
													982
												],
												"declarations": [
													{
														"constant": false,
														"id": 982,
														"mutability": "mutable",
														"name": "preVerificationGas",
														"nameLocation": "2995:18:7",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "2987:26:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 981,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2987:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 985,
												"initialValue": {
													"expression": {
														"id": 983,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "3016:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
															"typeString": "struct UserOperation calldata"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3023:18:7",
													"memberName": "preVerificationGas",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 872,
													"src": "3016:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2987:54:7"
											},
											{
												"assignments": [
													987
												],
												"declarations": [
													{
														"constant": false,
														"id": 987,
														"mutability": "mutable",
														"name": "maxFeePerGas",
														"nameLocation": "3059:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "3051:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 986,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3051:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 990,
												"initialValue": {
													"expression": {
														"id": 988,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "3074:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
															"typeString": "struct UserOperation calldata"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3081:12:7",
													"memberName": "maxFeePerGas",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 874,
													"src": "3074:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3051:42:7"
											},
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "maxPriorityFeePerGas",
														"nameLocation": "3111:20:7",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "3103:28:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 991,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3103:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 995,
												"initialValue": {
													"expression": {
														"id": 993,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "3134:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
															"typeString": "struct UserOperation calldata"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3141:20:7",
													"memberName": "maxPriorityFeePerGas",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 876,
													"src": "3134:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3103:58:7"
											},
											{
												"assignments": [
													997
												],
												"declarations": [
													{
														"constant": false,
														"id": 997,
														"mutability": "mutable",
														"name": "hashPaymasterAndData",
														"nameLocation": "3179:20:7",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "3171:28:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 996,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3171:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1002,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 999,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "3217:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
																	"typeString": "struct UserOperation calldata"
																}
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3224:16:7",
															"memberName": "paymasterAndData",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 878,
															"src": "3217:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 998,
														"name": "calldataKeccak",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "3202:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes calldata) pure returns (bytes32)"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3202:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3171:70:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1005,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "3283:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1006,
															"name": "nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "3291:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1007,
															"name": "hashInitCode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "3310:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1008,
															"name": "hashCallData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "3324:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1009,
															"name": "callGasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "3350:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1010,
															"name": "verificationGasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "3364:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1011,
															"name": "preVerificationGas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "3386:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1012,
															"name": "maxFeePerGas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "3418:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1013,
															"name": "maxPriorityFeePerGas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "3432:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1014,
															"name": "hashPaymasterAndData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "3466:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1003,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3259:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3263:6:7",
														"memberName": "encode",
														"nodeType": "MemberAccess",
														"src": "3259:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3259:237:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 945,
												"id": 1016,
												"nodeType": "Return",
												"src": "3252:244:7"
											}
										]
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pack",
									"nameLocation": "2570:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "2598:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "2575:29:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 940,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 939,
														"name": "UserOperation",
														"nameLocations": [
															"2575:13:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "2575:13:7"
													},
													"referencedDeclaration": 881,
													"src": "2575:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$881_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:31:7"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "2642:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "2629:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 943,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2629:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2628:18:7"
									},
									"scope": 1051,
									"src": "2561:942:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "3586:47:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1028,
																	"name": "userOp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "3618:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
																		"typeString": "struct UserOperation calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
																		"typeString": "struct UserOperation calldata"
																	}
																],
																"id": 1027,
																"name": "pack",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "3613:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_struct$_UserOperation_$881_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (struct UserOperation calldata) pure returns (bytes memory)"
																}
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3613:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1026,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "3603:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3603:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1025,
												"id": 1031,
												"nodeType": "Return",
												"src": "3596:30:7"
											}
										]
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "3518:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "3546:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "3523:29:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 1020,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1019,
														"name": "UserOperation",
														"nameLocations": [
															"3523:13:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "3523:13:7"
													},
													"referencedDeclaration": 881,
													"src": "3523:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$881_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:31:7"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "3577:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1023,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3577:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3576:9:7"
									},
									"scope": 1051,
									"src": "3509:124:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "3706:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1042,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "3723:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1043,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "3727:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3723:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1046,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "3735:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3723:13:7",
													"trueExpression": {
														"id": 1045,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "3731:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1048,
												"nodeType": "Return",
												"src": "3716:20:7"
											}
										]
									},
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "3648:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3660:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "3652:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3652:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3671:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "3663:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3663:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3651:22:7"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "3697:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3697:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3696:9:7"
									},
									"scope": 1051,
									"src": "3639:104:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1052,
							"src": "1630:2115:7",
							"usedErrors": []
						}
					],
					"src": "36:3710:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1186
						],
						"Ownable": [
							1164
						]
					},
					"id": 1165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1053,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1054,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1165,
							"sourceUnit": 1187,
							"src": "127:30:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1056,
										"name": "Context",
										"nameLocations": [
											"683:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1186,
										"src": "683:7:8"
									},
									"id": 1057,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:8"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1055,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:8",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1164,
							"linearizedBaseContracts": [
								1164,
								1186
							],
							"name": "Ownable",
							"nameLocation": "672:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1059,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1164,
									"src": "697:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1058,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1065,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "753:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "784:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:8"
									},
									"src": "726:84:8"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "926:49:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1070,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "955:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1069,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "936:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "936:32:8"
											}
										]
									},
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:8",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1075,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:8"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:8"
									},
									"scope": 1164,
									"src": "912:63:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "1084:41:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1078,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "1094:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:8"
											},
											{
												"id": 1081,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:8"
											}
										]
									},
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:8",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1083,
									"name": "onlyOwner",
									"nameLocation": "1072:9:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:8"
									},
									"src": "1063:62:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "1256:30:8",
										"statements": [
											{
												"expression": {
													"id": 1089,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1059,
													"src": "1273:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1088,
												"id": 1090,
												"nodeType": "Return",
												"src": "1266:13:8"
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:8",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:8"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "1247:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:8"
									},
									"scope": 1164,
									"src": "1201:85:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1105,
										"nodeType": "Block",
										"src": "1404:85:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1097,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "1422:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1099,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1176,
																	"src": "1433:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1096,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:8"
											}
										]
									},
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:8",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:8"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:8"
									},
									"scope": 1164,
									"src": "1359:130:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "1878:47:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1113,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1112,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "1888:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:8"
											}
										]
									},
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:8",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1110,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1109,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1083,
												"src": "1868:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:8"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:8"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:8"
									},
									"scope": 1164,
									"src": "1824:101:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "2144:128:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1129,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1123,
																"src": "2162:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1130,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1139,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "2256:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1138,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "2237:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:8"
											}
										]
									},
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:8",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1125,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1083,
												"src": "2134:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:8"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "2101:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:8"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:8"
									},
									"scope": 1164,
									"src": "2074:198:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "2489:124:8",
										"statements": [
											{
												"assignments": [
													1150
												],
												"declarations": [
													{
														"constant": false,
														"id": 1150,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1162,
														"src": "2499:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1149,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1152,
												"initialValue": {
													"id": 1151,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1059,
													"src": "2518:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:8"
											},
											{
												"expression": {
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1153,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "2534:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1154,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "2543:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1156,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1158,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "2587:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1159,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "2597:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1157,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "2566:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1161,
												"nodeType": "EmitStatement",
												"src": "2561:45:8"
											}
										]
									},
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:8",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "2454:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:8"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:8"
									},
									"scope": 1164,
									"src": "2426:187:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1165,
							"src": "654:1961:8",
							"usedErrors": []
						}
					],
					"src": "102:2514:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1186
						]
					},
					"id": 1187,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1166,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1167,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1186,
							"linearizedBaseContracts": [
								1186
							],
							"name": "Context",
							"nameLocation": "626:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "702:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1172,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1171,
												"id": 1174,
												"nodeType": "Return",
												"src": "712:17:9"
											}
										]
									},
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:9"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "693:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:9"
									},
									"scope": 1186,
									"src": "640:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1184,
										"nodeType": "Block",
										"src": "809:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1181,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1180,
												"id": 1183,
												"nodeType": "Return",
												"src": "819:15:9"
											}
										]
									},
									"id": 1185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:9"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "793:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1178,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:9"
									},
									"scope": 1186,
									"src": "742:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1187,
							"src": "608:235:9",
							"usedErrors": []
						}
					],
					"src": "86:758:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2647
						],
						"SignedMath": [
							2752
						],
						"Strings": [
							1415
						]
					},
					"id": 1416,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1188,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1189,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1416,
							"sourceUnit": 2648,
							"src": "126:25:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1190,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1416,
							"sourceUnit": 2753,
							"src": "152:31:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1191,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:10",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1415,
							"linearizedBaseContracts": [
								1415
							],
							"name": "Strings",
							"nameLocation": "228:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1194,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "242:54:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1192,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1193,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1197,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "302:43:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1195,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1196,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1244,
										"nodeType": "Block",
										"src": "518:625:10",
										"statements": [
											{
												"id": 1243,
												"nodeType": "UncheckedBlock",
												"src": "528:609:10",
												"statements": [
													{
														"assignments": [
															1206
														],
														"declarations": [
															{
																"constant": false,
																"id": 1206,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1243,
																"src": "552:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1205,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1213,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1209,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1200,
																		"src": "580:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1207,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2647,
																		"src": "569:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2647_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:10",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2484,
																	"src": "569:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:10"
													},
													{
														"assignments": [
															1215
														],
														"declarations": [
															{
																"constant": false,
																"id": 1215,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1243,
																"src": "604:20:10",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1214,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1220,
														"initialValue": {
															"arguments": [
																{
																	"id": 1218,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1206,
																	"src": "638:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1216,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:10"
													},
													{
														"assignments": [
															1222
														],
														"declarations": [
															{
																"constant": false,
																"id": 1222,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:10",
																"nodeType": "VariableDeclaration",
																"scope": 1243,
																"src": "659:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1221,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1223,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "740:67:10",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "758:35:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "781:2:10",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:10"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:10"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1215,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:10",
																"valueSize": 1
															},
															{
																"declaration": 1206,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:10",
																"valueSize": 1
															},
															{
																"declaration": 1222,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:10",
																"valueSize": 1
															}
														],
														"id": 1224,
														"nodeType": "InlineAssembly",
														"src": "731:76:10"
													},
													{
														"body": {
															"id": 1239,
															"nodeType": "Block",
															"src": "833:267:10",
															"statements": [
																{
																	"expression": {
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:10",
																		"subExpression": {
																			"id": 1226,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1222,
																			"src": "851:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1228,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:10"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "934:84:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:10"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "985:2:10",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:10"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:10"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:10"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:10"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 1194,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1222,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1200,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:10",
																			"valueSize": 1
																		}
																	],
																	"id": 1229,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:10"
																},
																{
																	"expression": {
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1230,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1200,
																			"src": "1035:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1233,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:10"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1234,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1200,
																			"src": "1068:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1238,
																	"nodeType": "IfStatement",
																	"src": "1064:21:10",
																	"trueBody": {
																		"id": 1237,
																		"nodeType": "Break",
																		"src": "1080:5:10"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1240,
														"nodeType": "WhileStatement",
														"src": "820:280:10"
													},
													{
														"expression": {
															"id": 1241,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "1120:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1204,
														"id": 1242,
														"nodeType": "Return",
														"src": "1113:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "465:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:10"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "503:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1202,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:10"
									},
									"scope": 1415,
									"src": "447:696:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "1313:103:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1257,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1248,
																			"src": "1354:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:10",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1266,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1248,
																					"src": "1400:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1264,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2752,
																					"src": "1385:10:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$2752_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 1265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:10",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2751,
																				"src": "1385:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1267,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1263,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1245,
																			1273
																		],
																		"referencedDeclaration": 1245,
																		"src": "1376:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1255,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:10",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1253,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1252,
												"id": 1271,
												"nodeType": "Return",
												"src": "1323:86:10"
											}
										]
									},
									"documentation": {
										"id": 1246,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:10",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "1261:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1247,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:10"
									},
									"returnParameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "1298:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1250,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:10"
									},
									"scope": 1415,
									"src": "1243:173:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "1595:100:10",
										"statements": [
											{
												"id": 1291,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1282,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1276,
																	"src": "1648:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1285,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1276,
																				"src": "1667:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1283,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2647,
																				"src": "1655:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2647_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:10",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2607,
																			"src": "1655:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1281,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1293,
																	1369,
																	1389
																],
																"referencedDeclaration": 1369,
																"src": "1636:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1280,
														"id": 1290,
														"nodeType": "Return",
														"src": "1629:49:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "1542:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:10"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "1580:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1278,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:10"
									},
									"scope": 1415,
									"src": "1521:174:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "1908:347:10",
										"statements": [
											{
												"assignments": [
													1304
												],
												"declarations": [
													{
														"constant": false,
														"id": 1304,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1368,
														"src": "1918:19:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1303,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1313,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1308,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "1954:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1305,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:10"
											},
											{
												"expression": {
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1314,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "1975:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1316,
														"indexExpression": {
															"hexValue": "30",
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1317,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1319,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:10"
											},
											{
												"expression": {
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1320,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "2000:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1322,
														"indexExpression": {
															"hexValue": "31",
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1325,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:10"
											},
											{
												"body": {
													"id": 1354,
													"nodeType": "Block",
													"src": "2070:83:10",
													"statements": [
														{
															"expression": {
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1340,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1304,
																		"src": "2084:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1342,
																	"indexExpression": {
																		"id": 1341,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1327,
																		"src": "2091:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1343,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1194,
																		"src": "2096:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1347,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1344,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1296,
																			"src": "2105:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1349,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:10"
														},
														{
															"expression": {
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1350,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1296,
																	"src": "2131:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1353,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1334,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "2058:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1355,
												"initializationExpression": {
													"assignments": [
														1327
													],
													"declarations": [
														{
															"constant": false,
															"id": 1327,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1355,
															"src": "2030:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1326,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1333,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1329,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1298,
																"src": "2046:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:10"
												},
												"loopExpression": {
													"expression": {
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:10",
														"subExpression": {
															"id": 1337,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "2067:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1339,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:10"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1357,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1296,
																"src": "2170:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1356,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1362,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1365,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "2241:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1364,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1363,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1302,
												"id": 1367,
												"nodeType": "Return",
												"src": "2227:21:10"
											}
										]
									},
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "1839:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "1854:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:10"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "1893:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1300,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:10"
									},
									"scope": 1415,
									"src": "1818:437:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1388,
										"nodeType": "Block",
										"src": "2480:76:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1382,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "2525:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1380,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1378,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1385,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "2533:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1377,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1293,
															1369,
															1389
														],
														"referencedDeclaration": 1369,
														"src": "2497:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1376,
												"id": 1387,
												"nodeType": "Return",
												"src": "2490:59:10"
											}
										]
									},
									"documentation": {
										"id": 1370,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:10",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "2428:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:10"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "2465:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1374,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:10"
									},
									"scope": 1415,
									"src": "2407:149:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "2711:66:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1402,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1392,
																		"src": "2744:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1400,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1399,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1408,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1394,
																		"src": "2767:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1406,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1405,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1398,
												"id": 1412,
												"nodeType": "Return",
												"src": "2721:49:10"
											}
										]
									},
									"documentation": {
										"id": 1390,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:10",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "2648:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1391,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "2665:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1393,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:10"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "2705:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1396,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:10"
									},
									"scope": 1415,
									"src": "2633:144:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1416,
							"src": "220:2559:10",
							"usedErrors": []
						}
					],
					"src": "101:2679:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							1781
						],
						"Math": [
							2647
						],
						"SignedMath": [
							2752
						],
						"Strings": [
							1415
						]
					},
					"id": 1782,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1417,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 1418,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1782,
							"sourceUnit": 1416,
							"src": "137:24:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1419,
								"nodeType": "StructuredDocumentation",
								"src": "163:205:11",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 1781,
							"linearizedBaseContracts": [
								1781
							],
							"name": "ECDSA",
							"nameLocation": "377:5:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 1425,
									"members": [
										{
											"id": 1420,
											"name": "NoError",
											"nameLocation": "417:7:11",
											"nodeType": "EnumValue",
											"src": "417:7:11"
										},
										{
											"id": 1421,
											"name": "InvalidSignature",
											"nameLocation": "434:16:11",
											"nodeType": "EnumValue",
											"src": "434:16:11"
										},
										{
											"id": 1422,
											"name": "InvalidSignatureLength",
											"nameLocation": "460:22:11",
											"nodeType": "EnumValue",
											"src": "460:22:11"
										},
										{
											"id": 1423,
											"name": "InvalidSignatureS",
											"nameLocation": "492:17:11",
											"nodeType": "EnumValue",
											"src": "492:17:11"
										},
										{
											"id": 1424,
											"name": "InvalidSignatureV",
											"nameLocation": "519:17:11",
											"nodeType": "EnumValue",
											"src": "519:17:11"
										}
									],
									"name": "RecoverError",
									"nameLocation": "394:12:11",
									"nodeType": "EnumDefinition",
									"src": "389:175:11"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "624:457:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$1425",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1431,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1428,
														"src": "638:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1425",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1432,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "647:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$1425_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 1433,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "660:7:11",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1420,
														"src": "647:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1425",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "638:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$1425",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1437,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "734:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1425",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1438,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1425,
																"src": "743:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1425_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "756:16:11",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1421,
															"src": "743:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1425",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "734:38:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$1425",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1446,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1428,
																"src": "843:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1425",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1447,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1425,
																	"src": "852:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$1425_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "865:22:11",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1422,
																"src": "852:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1425",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "843:44:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$1425",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1455,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1428,
																	"src": "965:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1425",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1456,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1425,
																		"src": "974:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$1425_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "987:17:11",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1423,
																	"src": "974:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1425",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "965:39:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1464,
															"nodeType": "IfStatement",
															"src": "961:114:11",
															"trueBody": {
																"id": 1463,
																"nodeType": "Block",
																"src": "1006:69:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c7565",
																					"id": 1460,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1027:36:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					},
																					"value": "ECDSA: invalid signature 's' value"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					}
																				],
																				"id": 1459,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "1020:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1020:44:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1462,
																		"nodeType": "ExpressionStatement",
																		"src": "1020:44:11"
																	}
																]
															}
														},
														"id": 1465,
														"nodeType": "IfStatement",
														"src": "839:236:11",
														"trueBody": {
															"id": 1454,
															"nodeType": "Block",
															"src": "889:66:11",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
																				"id": 1451,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "910:33:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				},
																				"value": "ECDSA: invalid signature length"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				}
																			],
																			"id": 1450,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "903:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 1452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "903:41:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1453,
																	"nodeType": "ExpressionStatement",
																	"src": "903:41:11"
																}
															]
														}
													},
													"id": 1466,
													"nodeType": "IfStatement",
													"src": "730:345:11",
													"trueBody": {
														"id": 1445,
														"nodeType": "Block",
														"src": "774:59:11",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "45434453413a20696e76616c6964207369676e6174757265",
																			"id": 1442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "795:26:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			},
																			"value": "ECDSA: invalid signature"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			}
																		],
																		"id": 1441,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "788:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 1443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "788:34:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1444,
																"nodeType": "ExpressionStatement",
																"src": "788:34:11"
															}
														]
													}
												},
												"id": 1467,
												"nodeType": "IfStatement",
												"src": "634:441:11",
												"trueBody": {
													"id": 1436,
													"nodeType": "Block",
													"src": "669:55:11",
													"statements": [
														{
															"functionReturnParameters": 1430,
															"id": 1435,
															"nodeType": "Return",
															"src": "683:7:11"
														}
													]
												}
											}
										]
									},
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "579:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "604:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "591:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1425",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1427,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1426,
														"name": "RecoverError",
														"nameLocations": [
															"591:12:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1425,
														"src": "591:12:11"
													},
													"referencedDeclaration": 1425,
													"src": "591:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1425",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "590:20:11"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "624:0:11"
									},
									"scope": 1781,
									"src": "570:511:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "2249:626:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1482,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "2263:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2273:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 1484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2283:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2263:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1512,
													"nodeType": "Block",
													"src": "2788:81:11",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1506,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2818:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2810:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1504,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2810:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2810:10:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1508,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1425,
																			"src": "2822:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1425_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2835:22:11",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1422,
																		"src": "2822:35:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1425",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 1510,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2809:49:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1425_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 1481,
															"id": 1511,
															"nodeType": "Return",
															"src": "2802:56:11"
														}
													]
												},
												"id": 1513,
												"nodeType": "IfStatement",
												"src": "2259:610:11",
												"trueBody": {
													"id": 1503,
													"nodeType": "Block",
													"src": "2287:495:11",
													"statements": [
														{
															"assignments": [
																1487
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1487,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2309:1:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1503,
																	"src": "2301:9:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1486,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2301:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1488,
															"nodeType": "VariableDeclarationStatement",
															"src": "2301:9:11"
														},
														{
															"assignments": [
																1490
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1490,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2332:1:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1503,
																	"src": "2324:9:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1489,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2324:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1491,
															"nodeType": "VariableDeclarationStatement",
															"src": "2324:9:11"
														},
														{
															"assignments": [
																1493
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1493,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2353:1:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1503,
																	"src": "2347:7:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1492,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2347:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1494,
															"nodeType": "VariableDeclarationStatement",
															"src": "2347:7:11"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "2555:171:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2573:32:11",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2588:9:11"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2599:4:11",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2584:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2584:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2578:5:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2578:27:11"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "2573:1:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2622:32:11",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2637:9:11"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2648:4:11",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2633:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2627:5:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2627:27:11"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nodeType": "YulIdentifier",
																				"src": "2622:1:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2671:41:11",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2681:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nodeType": "YulIdentifier",
																									"src": "2694:9:11"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2705:4:11",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2690:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2690:20:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2684:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2684:27:11"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nodeType": "YulIdentifier",
																				"src": "2676:4:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2676:36:11"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nodeType": "YulIdentifier",
																				"src": "2671:1:11"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 1487,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2573:1:11",
																	"valueSize": 1
																},
																{
																	"declaration": 1490,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2622:1:11",
																	"valueSize": 1
																},
																{
																	"declaration": 1474,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2588:9:11",
																	"valueSize": 1
																},
																{
																	"declaration": 1474,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2637:9:11",
																	"valueSize": 1
																},
																{
																	"declaration": 1474,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2694:9:11",
																	"valueSize": 1
																},
																{
																	"declaration": 1493,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2671:1:11",
																	"valueSize": 1
																}
															],
															"id": 1495,
															"nodeType": "InlineAssembly",
															"src": "2546:180:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1497,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1472,
																		"src": "2757:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1498,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1493,
																		"src": "2763:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 1499,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1487,
																		"src": "2766:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1500,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1490,
																		"src": "2769:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1496,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1515,
																		1589,
																		1683
																	],
																	"referencedDeclaration": 1683,
																	"src": "2746:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1425_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
																	}
																},
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2746:25:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1425_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 1481,
															"id": 1502,
															"nodeType": "Return",
															"src": "2739:32:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "1087:1053:11",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"
									},
									"id": 1515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2154:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2173:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "2165:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1471,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2192:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "2179:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2179:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:38:11"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "2226:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2226:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "2235:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1425",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1479,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1478,
														"name": "RecoverError",
														"nameLocations": [
															"2235:12:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1425,
														"src": "2235:12:11"
													},
													"referencedDeclaration": 1425,
													"src": "2235:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1425",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2225:23:11"
									},
									"scope": 1781,
									"src": "2145:730:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "3748:140:11",
										"statements": [
											{
												"assignments": [
													1526,
													1529
												],
												"declarations": [
													{
														"constant": false,
														"id": 1526,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3767:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1541,
														"src": "3759:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1525,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3759:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1529,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3791:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1541,
														"src": "3778:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1425",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1528,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1527,
																"name": "RecoverError",
																"nameLocations": [
																	"3778:12:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1425,
																"src": "3778:12:11"
															},
															"referencedDeclaration": 1425,
															"src": "3778:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1425",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1534,
												"initialValue": {
													"arguments": [
														{
															"id": 1531,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "3811:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1532,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "3817:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1530,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1515,
															1589,
															1683
														],
														"referencedDeclaration": 1515,
														"src": "3800:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1425_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3800:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1425_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3758:69:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1536,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "3849:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1425",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1425",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 1535,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "3837:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1425_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3837:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1538,
												"nodeType": "ExpressionStatement",
												"src": "3837:18:11"
											},
											{
												"expression": {
													"id": 1539,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1526,
													"src": "3872:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1524,
												"id": 1540,
												"nodeType": "Return",
												"src": "3865:16:11"
											}
										]
									},
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "2881:775:11",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."
									},
									"id": 1542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3670:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3686:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "3678:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1517,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3678:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3705:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "3692:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1519,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3692:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3677:38:11"
									},
									"returnParameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "3739:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:9:11"
									},
									"scope": 1781,
									"src": "3661:227:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1588,
										"nodeType": "Block",
										"src": "4245:203:11",
										"statements": [
											{
												"assignments": [
													1558
												],
												"declarations": [
													{
														"constant": false,
														"id": 1558,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "4263:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 1588,
														"src": "4255:9:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1557,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4255:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1565,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1559,
														"name": "vs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "4267:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																"id": 1562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4280:66:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9967"
																},
																"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9967"
																}
															],
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4272:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 1560,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "4272:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4272:75:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4267:80:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4255:92:11"
											},
											{
												"assignments": [
													1567
												],
												"declarations": [
													{
														"constant": false,
														"id": 1567,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "4363:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 1588,
														"src": "4357:7:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1566,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4357:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1580,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1572,
																					"name": "vs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1549,
																					"src": "4382:2:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 1571,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4374:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1570,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4374:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4374:11:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"hexValue": "323535",
																			"id": 1574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4389:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"value": "255"
																		},
																		"src": "4374:18:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1576,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4373:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "3237",
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4396:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_27_by_1",
																	"typeString": "int_const 27"
																},
																"value": "27"
															},
															"src": "4373:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4367:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 1568,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4367:5:11",
															"typeDescriptions": {}
														}
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4367:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4357:42:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1582,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1545,
															"src": "4427:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1583,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "4433:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1584,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "4436:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1585,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "4439:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1581,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1515,
															1589,
															1683
														],
														"referencedDeclaration": 1683,
														"src": "4416:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1425_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4416:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1425_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 1556,
												"id": 1587,
												"nodeType": "Return",
												"src": "4409:32:11"
											}
										]
									},
									"documentation": {
										"id": 1543,
										"nodeType": "StructuredDocumentation",
										"src": "3894:243:11",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"
									},
									"id": 1589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4151:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4170:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "4162:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1544,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4162:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4184:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "4176:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1546,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4176:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4195:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "4187:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1548,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4161:37:11"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "4222:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4222:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "4231:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1425",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1554,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1553,
														"name": "RecoverError",
														"nameLocations": [
															"4231:12:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1425,
														"src": "4231:12:11"
													},
													"referencedDeclaration": 1425,
													"src": "4231:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1425",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4221:23:11"
									},
									"scope": 1781,
									"src": "4142:306:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "4699:136:11",
										"statements": [
											{
												"assignments": [
													1602,
													1605
												],
												"declarations": [
													{
														"constant": false,
														"id": 1602,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4718:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1618,
														"src": "4710:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1601,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4710:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1605,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4742:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1618,
														"src": "4729:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1425",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1604,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1603,
																"name": "RecoverError",
																"nameLocations": [
																	"4729:12:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1425,
																"src": "4729:12:11"
															},
															"referencedDeclaration": 1425,
															"src": "4729:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1425",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1611,
												"initialValue": {
													"arguments": [
														{
															"id": 1607,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "4762:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1608,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "4768:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1609,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "4771:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1606,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1515,
															1589,
															1683
														],
														"referencedDeclaration": 1589,
														"src": "4751:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1425_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4751:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1425_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4709:65:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1613,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "4796:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1425",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1425",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 1612,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "4784:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1425_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 1614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4784:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1615,
												"nodeType": "ExpressionStatement",
												"src": "4784:18:11"
											},
											{
												"expression": {
													"id": 1616,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1602,
													"src": "4819:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1600,
												"id": 1617,
												"nodeType": "Return",
												"src": "4812:16:11"
											}
										]
									},
									"documentation": {
										"id": 1590,
										"nodeType": "StructuredDocumentation",
										"src": "4454:154:11",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"
									},
									"id": 1619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4622:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4638:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "4630:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1591,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4630:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4652:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "4644:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1593,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4663:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "4655:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1595,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4655:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4629:37:11"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "4690:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4690:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4689:9:11"
									},
									"scope": 1781,
									"src": "4613:222:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1682,
										"nodeType": "Block",
										"src": "5120:1345:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1638,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1628,
																"src": "6016:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6008:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1636,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6008:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6008:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 1640,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6021:66:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6008:79:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1651,
												"nodeType": "IfStatement",
												"src": "6004:161:11",
												"trueBody": {
													"id": 1650,
													"nodeType": "Block",
													"src": "6089:76:11",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6119:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6111:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1642,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6111:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6111:10:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1646,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1425,
																			"src": "6123:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1425_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6136:17:11",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1423,
																		"src": "6123:30:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1425",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 1648,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6110:44:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1425_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 1635,
															"id": 1649,
															"nodeType": "Return",
															"src": "6103:51:11"
														}
													]
												}
											},
											{
												"assignments": [
													1653
												],
												"declarations": [
													{
														"constant": false,
														"id": 1653,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6267:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1682,
														"src": "6259:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1652,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6259:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1660,
												"initialValue": {
													"arguments": [
														{
															"id": 1655,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "6286:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1656,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "6292:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1657,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "6295:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1658,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "6298:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1654,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6276:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6276:24:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6259:41:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1661,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "6314:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6332:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6324:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1662,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6324:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1665,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6324:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6314:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1676,
												"nodeType": "IfStatement",
												"src": "6310:101:11",
												"trueBody": {
													"id": 1675,
													"nodeType": "Block",
													"src": "6336:75:11",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1669,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6366:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6358:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1667,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6358:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6358:10:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1671,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1425,
																			"src": "6370:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1425_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6383:16:11",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1421,
																		"src": "6370:29:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1425",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 1673,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6357:43:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1425_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 1635,
															"id": 1674,
															"nodeType": "Return",
															"src": "6350:50:11"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 1677,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "6429:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1678,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1425,
																"src": "6437:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1425_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6450:7:11",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1420,
															"src": "6437:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1425",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"id": 1680,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6428:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1425_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 1635,
												"id": 1681,
												"nodeType": "Return",
												"src": "6421:37:11"
											}
										]
									},
									"documentation": {
										"id": 1620,
										"nodeType": "StructuredDocumentation",
										"src": "4841:163:11",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"
									},
									"id": 1683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5018:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5037:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "5029:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1621,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5029:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5049:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "5043:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1623,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5043:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5060:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "5052:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1625,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5052:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5071:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "5063:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1627,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5063:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5028:45:11"
									},
									"returnParameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "5097:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5097:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "5106:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1425",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1633,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1632,
														"name": "RecoverError",
														"nameLocations": [
															"5106:12:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1425,
														"src": "5106:12:11"
													},
													"referencedDeclaration": 1425,
													"src": "5106:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1425",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5096:23:11"
									},
									"scope": 1781,
									"src": "5009:1456:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "6692:138:11",
										"statements": [
											{
												"assignments": [
													1698,
													1701
												],
												"declarations": [
													{
														"constant": false,
														"id": 1698,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6711:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1715,
														"src": "6703:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1697,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6703:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1701,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6735:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1715,
														"src": "6722:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1425",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1700,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1699,
																"name": "RecoverError",
																"nameLocations": [
																	"6722:12:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1425,
																"src": "6722:12:11"
															},
															"referencedDeclaration": 1425,
															"src": "6722:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1425",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1708,
												"initialValue": {
													"arguments": [
														{
															"id": 1703,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "6755:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1704,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1688,
															"src": "6761:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1705,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "6764:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1706,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "6767:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1702,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1515,
															1589,
															1683
														],
														"referencedDeclaration": 1683,
														"src": "6744:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1425_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6744:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1425_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6702:67:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1710,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1701,
															"src": "6791:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1425",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1425",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 1709,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "6779:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1425_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6779:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1712,
												"nodeType": "ExpressionStatement",
												"src": "6779:18:11"
											},
											{
												"expression": {
													"id": 1713,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1698,
													"src": "6814:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1696,
												"id": 1714,
												"nodeType": "Return",
												"src": "6807:16:11"
											}
										]
									},
									"documentation": {
										"id": 1684,
										"nodeType": "StructuredDocumentation",
										"src": "6471:122:11",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6607:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6623:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "6615:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1685,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6615:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6635:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "6629:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1687,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6629:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6646:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "6638:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1689,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6657:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "6649:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1691,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6649:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6614:45:11"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "6683:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6683:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6682:9:11"
									},
									"scope": 1781,
									"src": "6598:232:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1725,
										"nodeType": "Block",
										"src": "7206:310:11",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7362:148:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7383:4:11",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7389:34:11",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7376:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7376:48:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7376:48:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7444:4:11",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "hash",
																		"nodeType": "YulIdentifier",
																		"src": "7450:4:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7437:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7437:18:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7437:18:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7468:32:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7489:4:11",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7495:4:11",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "7479:9:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7479:21:11"
															},
															"variableNames": [
																{
																	"name": "message",
																	"nodeType": "YulIdentifier",
																	"src": "7468:7:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1719,
														"isOffset": false,
														"isSlot": false,
														"src": "7450:4:11",
														"valueSize": 1
													},
													{
														"declaration": 1722,
														"isOffset": false,
														"isSlot": false,
														"src": "7468:7:11",
														"valueSize": 1
													}
												],
												"id": 1724,
												"nodeType": "InlineAssembly",
												"src": "7353:157:11"
											}
										]
									},
									"documentation": {
										"id": 1717,
										"nodeType": "StructuredDocumentation",
										"src": "6836:279:11",
										"text": " @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
									},
									"id": 1726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "7129:22:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "7160:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "7152:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1718,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7152:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7151:14:11"
									},
									"returnParameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "7197:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "7189:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1721,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7189:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7188:17:11"
									},
									"scope": 1781,
									"src": "7120:396:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1747,
										"nodeType": "Block",
										"src": "7881:116:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 1737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7925:32:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 1740,
																				"name": "s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1729,
																				"src": "7976:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7978:6:11",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "7976:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1738,
																			"name": "Strings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "7959:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Strings_$1415_$",
																				"typeString": "type(library Strings)"
																			}
																		},
																		"id": 1739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7967:8:11",
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1245,
																		"src": "7959:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7959:26:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 1743,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1729,
																	"src": "7987:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1735,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7908:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1736,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7912:12:11",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "7908:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7908:81:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1734,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "7898:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7898:92:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1733,
												"id": 1746,
												"nodeType": "Return",
												"src": "7891:99:11"
											}
										]
									},
									"documentation": {
										"id": 1727,
										"nodeType": "StructuredDocumentation",
										"src": "7522:274:11",
										"text": " @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
									},
									"id": 1748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "7810:22:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "7846:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "7833:14:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1728,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7833:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7832:16:11"
									},
									"returnParameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "7872:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1731,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7872:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7871:9:11"
									},
									"scope": 1781,
									"src": "7801:196:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1759,
										"nodeType": "Block",
										"src": "8443:290:11",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8505:222:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8519:22:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8536:4:11",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8530:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8530:11:11"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "8523:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8561:3:11"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8566:10:11",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8554:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8554:23:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8554:23:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "8601:3:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8606:4:11",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8597:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8597:14:11"
																	},
																	{
																		"name": "domainSeparator",
																		"nodeType": "YulIdentifier",
																		"src": "8613:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8590:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8590:39:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8590:39:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "8653:3:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8658:4:11",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8649:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8649:14:11"
																	},
																	{
																		"name": "structHash",
																		"nodeType": "YulIdentifier",
																		"src": "8665:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8642:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8642:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8642:34:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8689:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8707:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8712:4:11",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "8697:9:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8697:20:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "8689:4:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1756,
														"isOffset": false,
														"isSlot": false,
														"src": "8689:4:11",
														"valueSize": 1
													},
													{
														"declaration": 1751,
														"isOffset": false,
														"isSlot": false,
														"src": "8613:15:11",
														"valueSize": 1
													},
													{
														"declaration": 1753,
														"isOffset": false,
														"isSlot": false,
														"src": "8665:10:11",
														"valueSize": 1
													}
												],
												"id": 1758,
												"nodeType": "InlineAssembly",
												"src": "8496:231:11"
											}
										]
									},
									"documentation": {
										"id": 1749,
										"nodeType": "StructuredDocumentation",
										"src": "8003:328:11",
										"text": " @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."
									},
									"id": 1760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "8345:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "8369:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "8361:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1750,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8361:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "8394:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "8386:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1752,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8386:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8360:45:11"
									},
									"returnParameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8437:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "8429:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1755,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8429:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8428:14:11"
									},
									"scope": 1781,
									"src": "8336:397:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1779,
										"nodeType": "Block",
										"src": "9048:80:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 1773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9092:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 1774,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1763,
																	"src": "9104:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1775,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1765,
																	"src": "9115:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1771,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9075:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9079:12:11",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "9075:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9075:45:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1770,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "9065:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9065:56:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1769,
												"id": 1778,
												"nodeType": "Return",
												"src": "9058:63:11"
											}
										]
									},
									"documentation": {
										"id": 1761,
										"nodeType": "StructuredDocumentation",
										"src": "8739:193:11",
										"text": " @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."
									},
									"id": 1780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "8946:31:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "8986:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "8978:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8978:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9010:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "8997:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1764,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8997:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8977:38:11"
									},
									"returnParameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "9039:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1767,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9038:9:11"
									},
									"scope": 1781,
									"src": "8937:191:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1782,
							"src": "369:8761:11",
							"usedErrors": []
						}
					],
					"src": "112:9019:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2647
						]
					},
					"id": 2648,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1783,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1784,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:12",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2647,
							"linearizedBaseContracts": [
								2647
							],
							"name": "Math",
							"nameLocation": "210:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1788,
									"members": [
										{
											"id": 1785,
											"name": "Down",
											"nameLocation": "245:4:12",
											"nodeType": "EnumValue",
											"src": "245:4:12"
										},
										{
											"id": 1786,
											"name": "Up",
											"nameLocation": "287:2:12",
											"nodeType": "EnumValue",
											"src": "287:2:12"
										},
										{
											"id": 1787,
											"name": "Zero",
											"nameLocation": "318:4:12",
											"nodeType": "EnumValue",
											"src": "318:4:12"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:12",
									"nodeType": "EnumDefinition",
									"src": "221:122:12"
								},
								{
									"body": {
										"id": 1805,
										"nodeType": "Block",
										"src": "480:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1798,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "497:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1799,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1793,
															"src": "501:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1802,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1793,
														"src": "509:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:12",
													"trueExpression": {
														"id": 1801,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "505:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1797,
												"id": 1804,
												"nodeType": "Return",
												"src": "490:20:12"
											}
										]
									},
									"documentation": {
										"id": 1789,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:12",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "426:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "437:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:12"
									},
									"returnParameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "471:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:12"
									},
									"scope": 2647,
									"src": "413:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "655:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1816,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1809,
															"src": "672:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1817,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1811,
															"src": "676:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1820,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1811,
														"src": "684:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:12",
													"trueExpression": {
														"id": 1819,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1809,
														"src": "680:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1815,
												"id": 1822,
												"nodeType": "Return",
												"src": "665:20:12"
											}
										]
									},
									"documentation": {
										"id": 1807,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:12",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "612:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:12"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "646:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:12"
									},
									"scope": 2647,
									"src": "588:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1846,
										"nodeType": "Block",
										"src": "876:82:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1834,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1827,
																	"src": "931:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1835,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1829,
																	"src": "935:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1837,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1838,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1827,
																		"src": "941:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1839,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1829,
																		"src": "945:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1841,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1833,
												"id": 1845,
												"nodeType": "Return",
												"src": "923:28:12"
											}
										]
									},
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:12",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "822:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "833:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:12"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "867:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:12"
									},
									"scope": 2647,
									"src": "805:153:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1871,
										"nodeType": "Block",
										"src": "1228:123:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1857,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1850,
															"src": "1316:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1861,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1850,
																			"src": "1330:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1864,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1865,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1852,
																"src": "1339:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:12",
													"trueExpression": {
														"hexValue": "30",
														"id": 1860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1856,
												"id": 1870,
												"nodeType": "Return",
												"src": "1309:35:12"
											}
										]
									},
									"documentation": {
										"id": 1848,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:12",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "1174:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "1185:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:12"
									},
									"returnParameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "1219:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:12"
									},
									"scope": 2647,
									"src": "1157:194:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1994,
										"nodeType": "Block",
										"src": "1765:4115:12",
										"statements": [
											{
												"id": 1993,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:12",
												"statements": [
													{
														"assignments": [
															1885
														],
														"declarations": [
															{
																"constant": false,
																"id": 1885,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 1993,
																"src": "2096:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1884,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1886,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:12"
													},
													{
														"assignments": [
															1888
														],
														"declarations": [
															{
																"constant": false,
																"id": 1888,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 1993,
																"src": "2168:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1887,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1889,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:12"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2248:157:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:12"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:12"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2313:18:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:12"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2348:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:12"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:12"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:12"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1885,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1885,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1885,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1888,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1875,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:12",
																"valueSize": 1
															},
															{
																"declaration": 1875,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:12",
																"valueSize": 1
															},
															{
																"declaration": 1877,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:12",
																"valueSize": 1
															},
															{
																"declaration": 1877,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:12",
																"valueSize": 1
															}
														],
														"id": 1890,
														"nodeType": "InlineAssembly",
														"src": "2239:166:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1891,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1888,
																"src": "2486:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1899,
														"nodeType": "IfStatement",
														"src": "2482:368:12",
														"trueBody": {
															"id": 1898,
															"nodeType": "Block",
															"src": "2498:352:12",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1894,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1885,
																			"src": "2816:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1895,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1879,
																			"src": "2824:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1883,
																	"id": 1897,
																	"nodeType": "Return",
																	"src": "2809:26:12"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1901,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1879,
																		"src": "2960:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1902,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1888,
																		"src": "2974:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1900,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1906,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:12"
													},
													{
														"assignments": [
															1908
														],
														"declarations": [
															{
																"constant": false,
																"id": 1908,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:12",
																"nodeType": "VariableDeclaration",
																"scope": 1993,
																"src": "3261:17:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1907,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1909,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:12"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3301:291:12",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3370:38:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:12"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:12"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:12"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3490:41:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:12"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:12"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3548:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:12"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1879,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:12",
																"valueSize": 1
															},
															{
																"declaration": 1885,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1885,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1885,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1888,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1888,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1908,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:12",
																"valueSize": 1
															},
															{
																"declaration": 1908,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:12",
																"valueSize": 1
															},
															{
																"declaration": 1908,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:12",
																"valueSize": 1
															},
															{
																"declaration": 1875,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:12",
																"valueSize": 1
															},
															{
																"declaration": 1877,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:12",
																"valueSize": 1
															}
														],
														"id": 1910,
														"nodeType": "InlineAssembly",
														"src": "3292:300:12"
													},
													{
														"assignments": [
															1912
														],
														"declarations": [
															{
																"constant": false,
																"id": 1912,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:12",
																"nodeType": "VariableDeclaration",
																"scope": 1993,
																"src": "3899:12:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1911,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1920,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1913,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1879,
																"src": "3914:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:12",
																			"subExpression": {
																				"id": 1914,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1879,
																				"src": "3930:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1918,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:12"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3969:362:12",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "4034:37:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:12"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:12"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4138:25:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:12"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4278:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:12",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:12"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:12"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:12"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1879,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:12",
																"valueSize": 1
															},
															{
																"declaration": 1879,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:12",
																"valueSize": 1
															},
															{
																"declaration": 1885,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1885,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1912,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:12",
																"valueSize": 1
															},
															{
																"declaration": 1912,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:12",
																"valueSize": 1
															},
															{
																"declaration": 1912,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:12",
																"valueSize": 1
															},
															{
																"declaration": 1912,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:12",
																"valueSize": 1
															},
															{
																"declaration": 1912,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:12",
																"valueSize": 1
															}
														],
														"id": 1921,
														"nodeType": "InlineAssembly",
														"src": "3960:371:12"
													},
													{
														"expression": {
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1922,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1885,
																"src": "4397:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1923,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1888,
																	"src": "4406:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1924,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1912,
																	"src": "4414:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1927,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:12"
													},
													{
														"assignments": [
															1929
														],
														"declarations": [
															{
																"constant": false,
																"id": 1929,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:12",
																"nodeType": "VariableDeclaration",
																"scope": 1993,
																"src": "4736:15:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1928,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1936,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1931,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1879,
																			"src": "4759:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1933,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:12"
													},
													{
														"expression": {
															"id": 1943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1937,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1929,
																"src": "4992:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1939,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1879,
																		"src": "5007:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1940,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1929,
																		"src": "5021:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1944,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:12"
													},
													{
														"expression": {
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1945,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1929,
																"src": "5061:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1947,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1879,
																		"src": "5076:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1948,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1929,
																		"src": "5090:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1952,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:12"
													},
													{
														"expression": {
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1953,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1929,
																"src": "5131:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1955,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1879,
																		"src": "5146:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1956,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1929,
																		"src": "5160:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1960,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:12"
													},
													{
														"expression": {
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1961,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1929,
																"src": "5201:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1963,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1879,
																		"src": "5216:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1964,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1929,
																		"src": "5230:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1968,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:12"
													},
													{
														"expression": {
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1969,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1929,
																"src": "5271:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1971,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1879,
																		"src": "5286:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1972,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1929,
																		"src": "5300:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1976,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:12"
													},
													{
														"expression": {
															"id": 1983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1977,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1929,
																"src": "5342:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1979,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1879,
																		"src": "5357:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1980,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1929,
																		"src": "5371:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1984,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:12"
													},
													{
														"expression": {
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1985,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1882,
																"src": "5812:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1986,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1885,
																	"src": "5821:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1987,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1929,
																	"src": "5829:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1990,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:12"
													},
													{
														"expression": {
															"id": 1991,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "5857:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1883,
														"id": 1992,
														"nodeType": "Return",
														"src": "5850:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1873,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:12",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "1683:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "1694:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "1705:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:12"
									},
									"returnParameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "1749:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:12"
									},
									"scope": 2647,
									"src": "1667:4213:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2038,
										"nodeType": "Block",
										"src": "6122:189:12",
										"statements": [
											{
												"assignments": [
													2011
												],
												"declarations": [
													{
														"constant": false,
														"id": 2011,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2038,
														"src": "6132:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2010,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2017,
												"initialValue": {
													"arguments": [
														{
															"id": 2013,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1998,
															"src": "6156:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2014,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2000,
															"src": "6159:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2015,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2002,
															"src": "6162:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2012,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1995,
															2039
														],
														"referencedDeclaration": 1995,
														"src": "6149:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1788",
															"typeString": "enum Math.Rounding"
														},
														"id": 2021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2018,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2005,
															"src": "6188:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1788",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2019,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "6200:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1788_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:12",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1786,
															"src": "6200:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1788",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2028,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2023,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1998,
																	"src": "6222:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2024,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2000,
																	"src": "6225:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2025,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2002,
																	"src": "6228:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2022,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2035,
												"nodeType": "IfStatement",
												"src": "6184:98:12",
												"trueBody": {
													"id": 2034,
													"nodeType": "Block",
													"src": "6246:36:12",
													"statements": [
														{
															"expression": {
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2030,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2011,
																	"src": "6260:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2033,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2036,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2011,
													"src": "6298:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2009,
												"id": 2037,
												"nodeType": "Return",
												"src": "6291:13:12"
											}
										]
									},
									"documentation": {
										"id": 1996,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:12",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "6028:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "6039:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "6050:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "6071:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2004,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2003,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "6071:8:12"
													},
													"referencedDeclaration": 1788,
													"src": "6071:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:12"
									},
									"returnParameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "6113:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:12"
									},
									"scope": 2647,
									"src": "6012:299:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2150,
										"nodeType": "Block",
										"src": "6587:1585:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2047,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2042,
														"src": "6601:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2048,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2053,
												"nodeType": "IfStatement",
												"src": "6597:45:12",
												"trueBody": {
													"id": 2052,
													"nodeType": "Block",
													"src": "6609:33:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2046,
															"id": 2051,
															"nodeType": "Return",
															"src": "6623:8:12"
														}
													]
												}
											},
											{
												"assignments": [
													2055
												],
												"declarations": [
													{
														"constant": false,
														"id": 2055,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2150,
														"src": "7321:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2054,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2064,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2056,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2058,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2042,
																			"src": "7349:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2057,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2319,
																			2355
																		],
																		"referencedDeclaration": 2319,
																		"src": "7344:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2062,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:12"
											},
											{
												"id": 2149,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:12",
												"statements": [
													{
														"expression": {
															"id": 2074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2065,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2055,
																"src": "7782:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2066,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2055,
																				"src": "7792:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2067,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2042,
																					"src": "7801:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2068,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2055,
																					"src": "7805:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2071,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2075,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:12"
													},
													{
														"expression": {
															"id": 2085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2076,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2055,
																"src": "7831:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2081,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2077,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2055,
																				"src": "7841:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2080,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2078,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2042,
																					"src": "7850:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2079,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2055,
																					"src": "7854:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2082,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2086,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:12"
													},
													{
														"expression": {
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2087,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2055,
																"src": "7880:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2088,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2055,
																				"src": "7890:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2091,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2089,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2042,
																					"src": "7899:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2090,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2055,
																					"src": "7903:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2093,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2097,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:12"
													},
													{
														"expression": {
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2098,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2055,
																"src": "7929:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2099,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2055,
																				"src": "7939:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2102,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2100,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2042,
																					"src": "7948:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2101,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2055,
																					"src": "7952:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2104,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2108,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:12"
													},
													{
														"expression": {
															"id": 2118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2109,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2055,
																"src": "7978:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2110,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2055,
																				"src": "7988:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2113,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2111,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2042,
																					"src": "7997:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2112,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2055,
																					"src": "8001:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2115,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2119,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:12"
													},
													{
														"expression": {
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2120,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2055,
																"src": "8027:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2121,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2055,
																				"src": "8037:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2122,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2042,
																					"src": "8046:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2123,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2055,
																					"src": "8050:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2126,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2130,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:12"
													},
													{
														"expression": {
															"id": 2140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2131,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2055,
																"src": "8076:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2132,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2055,
																				"src": "8086:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2135,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2133,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2042,
																					"src": "8095:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2134,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2055,
																					"src": "8099:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2137,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2141,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:12"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2143,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2055,
																	"src": "8136:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2144,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2042,
																		"src": "8144:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2145,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2055,
																		"src": "8148:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2142,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1824,
																"src": "8132:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2046,
														"id": 2148,
														"nodeType": "Return",
														"src": "8125:30:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2040,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:12",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "6544:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:12"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "6578:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:12"
									},
									"scope": 2647,
									"src": "6530:1642:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2186,
										"nodeType": "Block",
										"src": "8348:161:12",
										"statements": [
											{
												"id": 2185,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:12",
												"statements": [
													{
														"assignments": [
															2163
														],
														"declarations": [
															{
																"constant": false,
																"id": 2163,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2185,
																"src": "8382:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2162,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2167,
														"initialValue": {
															"arguments": [
																{
																	"id": 2165,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2154,
																	"src": "8404:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2164,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2151,
																	2187
																],
																"referencedDeclaration": 2151,
																"src": "8399:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2168,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2163,
																"src": "8427:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1788",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2172,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2169,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2157,
																					"src": "8437:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1788",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2170,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1788,
																						"src": "8449:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1788_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2171,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1786,
																					"src": "8449:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1788",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2177,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2175,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2173,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2163,
																						"src": "8464:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2174,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2163,
																						"src": "8473:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2176,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2154,
																					"src": "8482:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2182,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2161,
														"id": 2184,
														"nodeType": "Return",
														"src": "8420:72:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2152,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:12",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "8286:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "8297:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2156,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2155,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "8297:8:12"
													},
													"referencedDeclaration": 1788,
													"src": "8297:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:12"
									},
									"returnParameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "8339:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:12"
									},
									"scope": 2647,
									"src": "8272:237:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2318,
										"nodeType": "Block",
										"src": "8694:922:12",
										"statements": [
											{
												"assignments": [
													2196
												],
												"declarations": [
													{
														"constant": false,
														"id": 2196,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2318,
														"src": "8704:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2195,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2198,
												"initialValue": {
													"hexValue": "30",
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:12"
											},
											{
												"id": 2315,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2199,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2190,
																	"src": "8760:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2213,
														"nodeType": "IfStatement",
														"src": "8756:99:12",
														"trueBody": {
															"id": 2212,
															"nodeType": "Block",
															"src": "8778:77:12",
															"statements": [
																{
																	"expression": {
																		"id": 2206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2204,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2190,
																			"src": "8796:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2207,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:12"
																},
																{
																	"expression": {
																		"id": 2210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2208,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2196,
																			"src": "8827:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2211,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2214,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2190,
																	"src": "8872:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2228,
														"nodeType": "IfStatement",
														"src": "8868:96:12",
														"trueBody": {
															"id": 2227,
															"nodeType": "Block",
															"src": "8889:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2219,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2190,
																			"src": "8907:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2222,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:12"
																},
																{
																	"expression": {
																		"id": 2225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2223,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2196,
																			"src": "8937:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2226,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2229,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2190,
																	"src": "8981:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2243,
														"nodeType": "IfStatement",
														"src": "8977:96:12",
														"trueBody": {
															"id": 2242,
															"nodeType": "Block",
															"src": "8998:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2234,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2190,
																			"src": "9016:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2237,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:12"
																},
																{
																	"expression": {
																		"id": 2240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2238,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2196,
																			"src": "9046:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2241,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2244,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2190,
																	"src": "9090:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2247,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2258,
														"nodeType": "IfStatement",
														"src": "9086:96:12",
														"trueBody": {
															"id": 2257,
															"nodeType": "Block",
															"src": "9107:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2249,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2190,
																			"src": "9125:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2252,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:12"
																},
																{
																	"expression": {
																		"id": 2255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2253,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2196,
																			"src": "9155:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2256,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2259,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2190,
																	"src": "9199:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2273,
														"nodeType": "IfStatement",
														"src": "9195:93:12",
														"trueBody": {
															"id": 2272,
															"nodeType": "Block",
															"src": "9215:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2264,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2190,
																			"src": "9233:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2267,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:12"
																},
																{
																	"expression": {
																		"id": 2270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2268,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2196,
																			"src": "9262:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2271,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2274,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2190,
																	"src": "9305:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2288,
														"nodeType": "IfStatement",
														"src": "9301:93:12",
														"trueBody": {
															"id": 2287,
															"nodeType": "Block",
															"src": "9321:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2279,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2190,
																			"src": "9339:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2282,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:12"
																},
																{
																	"expression": {
																		"id": 2285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2283,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2196,
																			"src": "9368:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2286,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2289,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2190,
																	"src": "9411:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2303,
														"nodeType": "IfStatement",
														"src": "9407:93:12",
														"trueBody": {
															"id": 2302,
															"nodeType": "Block",
															"src": "9427:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2294,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2190,
																			"src": "9445:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2297,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:12"
																},
																{
																	"expression": {
																		"id": 2300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2298,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2196,
																			"src": "9474:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2301,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2304,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2190,
																	"src": "9517:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2314,
														"nodeType": "IfStatement",
														"src": "9513:64:12",
														"trueBody": {
															"id": 2313,
															"nodeType": "Block",
															"src": "9533:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2309,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2196,
																			"src": "9551:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2312,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2316,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2196,
													"src": "9603:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2194,
												"id": 2317,
												"nodeType": "Return",
												"src": "9596:13:12"
											}
										]
									},
									"documentation": {
										"id": 2188,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:12",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "8647:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:12"
									},
									"returnParameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "8685:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:12"
									},
									"scope": 2647,
									"src": "8633:983:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2354,
										"nodeType": "Block",
										"src": "9849:165:12",
										"statements": [
											{
												"id": 2353,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:12",
												"statements": [
													{
														"assignments": [
															2331
														],
														"declarations": [
															{
																"constant": false,
																"id": 2331,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2353,
																"src": "9883:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2330,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2335,
														"initialValue": {
															"arguments": [
																{
																	"id": 2333,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2322,
																	"src": "9905:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2332,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2319,
																	2355
																],
																"referencedDeclaration": 2319,
																"src": "9900:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2336,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "9932:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1788",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2340,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2337,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2325,
																					"src": "9942:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1788",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2338,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1788,
																						"src": "9954:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1788_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2339,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1786,
																					"src": "9954:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1788",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2343,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2341,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2342,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2331,
																						"src": "9974:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2344,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2322,
																					"src": "9983:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2350,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2329,
														"id": 2352,
														"nodeType": "Return",
														"src": "9925:72:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2320,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:12",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "9783:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "9798:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2324,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2323,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "9798:8:12"
													},
													"referencedDeclaration": 1788,
													"src": "9798:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:12"
									},
									"returnParameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "9840:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:12"
									},
									"scope": 2647,
									"src": "9769:245:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2483,
										"nodeType": "Block",
										"src": "10201:854:12",
										"statements": [
											{
												"assignments": [
													2364
												],
												"declarations": [
													{
														"constant": false,
														"id": 2364,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2483,
														"src": "10211:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2363,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2366,
												"initialValue": {
													"hexValue": "30",
													"id": 2365,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:12"
											},
											{
												"id": 2480,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2367,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2358,
																"src": "10267:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2383,
														"nodeType": "IfStatement",
														"src": "10263:103:12",
														"trueBody": {
															"id": 2382,
															"nodeType": "Block",
															"src": "10286:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2372,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "10304:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2373,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2374,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2377,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:12"
																},
																{
																	"expression": {
																		"id": 2380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2378,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "10339:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2381,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2384,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2358,
																"src": "10383:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2400,
														"nodeType": "IfStatement",
														"src": "10379:103:12",
														"trueBody": {
															"id": 2399,
															"nodeType": "Block",
															"src": "10402:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2389,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "10420:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2390,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2394,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:12"
																},
																{
																	"expression": {
																		"id": 2397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2395,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "10455:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2398,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2401,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2358,
																"src": "10499:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2417,
														"nodeType": "IfStatement",
														"src": "10495:103:12",
														"trueBody": {
															"id": 2416,
															"nodeType": "Block",
															"src": "10518:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2406,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "10536:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2407,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2408,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2411,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:12"
																},
																{
																	"expression": {
																		"id": 2414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2412,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "10571:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2415,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2418,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2358,
																"src": "10615:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2434,
														"nodeType": "IfStatement",
														"src": "10611:100:12",
														"trueBody": {
															"id": 2433,
															"nodeType": "Block",
															"src": "10633:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2423,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "10651:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2425,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2428,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:12"
																},
																{
																	"expression": {
																		"id": 2431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2429,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "10685:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2432,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2435,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2358,
																"src": "10728:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2451,
														"nodeType": "IfStatement",
														"src": "10724:100:12",
														"trueBody": {
															"id": 2450,
															"nodeType": "Block",
															"src": "10746:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2440,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "10764:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2441,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2442,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2445,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:12"
																},
																{
																	"expression": {
																		"id": 2448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2446,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "10798:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2449,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2452,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2358,
																"src": "10841:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2468,
														"nodeType": "IfStatement",
														"src": "10837:100:12",
														"trueBody": {
															"id": 2467,
															"nodeType": "Block",
															"src": "10859:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2457,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "10877:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2458,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2462,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:12"
																},
																{
																	"expression": {
																		"id": 2465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2463,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "10911:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2466,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2469,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2358,
																"src": "10954:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2479,
														"nodeType": "IfStatement",
														"src": "10950:66:12",
														"trueBody": {
															"id": 2478,
															"nodeType": "Block",
															"src": "10972:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2474,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "10990:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2477,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2481,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2364,
													"src": "11042:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2362,
												"id": 2482,
												"nodeType": "Return",
												"src": "11035:13:12"
											}
										]
									},
									"documentation": {
										"id": 2356,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:12",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2484,
												"src": "10154:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:12"
									},
									"returnParameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2484,
												"src": "10192:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:12"
									},
									"scope": 2647,
									"src": "10139:916:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2519,
										"nodeType": "Block",
										"src": "11290:167:12",
										"statements": [
											{
												"id": 2518,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:12",
												"statements": [
													{
														"assignments": [
															2496
														],
														"declarations": [
															{
																"constant": false,
																"id": 2496,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2518,
																"src": "11324:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2495,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2500,
														"initialValue": {
															"arguments": [
																{
																	"id": 2498,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2487,
																	"src": "11347:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2497,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2484,
																	2520
																],
																"referencedDeclaration": 2484,
																"src": "11341:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2501,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2496,
																"src": "11374:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1788",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2502,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2490,
																					"src": "11384:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1788",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2503,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1788,
																						"src": "11396:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1788_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2504,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1786,
																					"src": "11396:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1788",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2510,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2508,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2506,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2507,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2496,
																						"src": "11417:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2509,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2487,
																					"src": "11426:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2515,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2494,
														"id": 2517,
														"nodeType": "Return",
														"src": "11367:73:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2485,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:12",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2520,
												"src": "11224:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2520,
												"src": "11239:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2489,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2488,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "11239:8:12"
													},
													"referencedDeclaration": 1788,
													"src": "11239:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:12"
									},
									"returnParameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2520,
												"src": "11281:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:12"
									},
									"scope": 2647,
									"src": "11209:248:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2606,
										"nodeType": "Block",
										"src": "11771:600:12",
										"statements": [
											{
												"assignments": [
													2529
												],
												"declarations": [
													{
														"constant": false,
														"id": 2529,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2606,
														"src": "11781:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2528,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2531,
												"initialValue": {
													"hexValue": "30",
													"id": 2530,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:12"
											},
											{
												"id": 2603,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2532,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2523,
																	"src": "11837:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2546,
														"nodeType": "IfStatement",
														"src": "11833:98:12",
														"trueBody": {
															"id": 2545,
															"nodeType": "Block",
															"src": "11855:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2537,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2523,
																			"src": "11873:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2540,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:12"
																},
																{
																	"expression": {
																		"id": 2543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2541,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2529,
																			"src": "11904:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2544,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2547,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2523,
																	"src": "11948:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2561,
														"nodeType": "IfStatement",
														"src": "11944:95:12",
														"trueBody": {
															"id": 2560,
															"nodeType": "Block",
															"src": "11965:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2552,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2523,
																			"src": "11983:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2555,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:12"
																},
																{
																	"expression": {
																		"id": 2558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2556,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2529,
																			"src": "12013:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2559,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2562,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2523,
																	"src": "12056:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2576,
														"nodeType": "IfStatement",
														"src": "12052:95:12",
														"trueBody": {
															"id": 2575,
															"nodeType": "Block",
															"src": "12073:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2567,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2523,
																			"src": "12091:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2570,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:12"
																},
																{
																	"expression": {
																		"id": 2573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2571,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2529,
																			"src": "12121:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2574,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2577,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2523,
																	"src": "12164:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2591,
														"nodeType": "IfStatement",
														"src": "12160:95:12",
														"trueBody": {
															"id": 2590,
															"nodeType": "Block",
															"src": "12181:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2582,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2523,
																			"src": "12199:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2585,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:12"
																},
																{
																	"expression": {
																		"id": 2588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2586,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2529,
																			"src": "12229:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2589,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2592,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2523,
																	"src": "12272:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2602,
														"nodeType": "IfStatement",
														"src": "12268:64:12",
														"trueBody": {
															"id": 2601,
															"nodeType": "Block",
															"src": "12288:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2597,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2529,
																			"src": "12306:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2600,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2604,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2529,
													"src": "12358:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2527,
												"id": 2605,
												"nodeType": "Return",
												"src": "12351:13:12"
											}
										]
									},
									"documentation": {
										"id": 2521,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:12",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "11724:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:12"
									},
									"returnParameters": {
										"id": 2527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "11762:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:12"
									},
									"scope": 2647,
									"src": "11708:663:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2645,
										"nodeType": "Block",
										"src": "12608:174:12",
										"statements": [
											{
												"id": 2644,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:12",
												"statements": [
													{
														"assignments": [
															2619
														],
														"declarations": [
															{
																"constant": false,
																"id": 2619,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2644,
																"src": "12642:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2618,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2623,
														"initialValue": {
															"arguments": [
																{
																	"id": 2621,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2610,
																	"src": "12666:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2620,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2607,
																	2646
																],
																"referencedDeclaration": 2607,
																"src": "12659:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2624,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2619,
																"src": "12693:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1788",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2625,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2613,
																					"src": "12703:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1788",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2626,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1788,
																						"src": "12715:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1788_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2627,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1786,
																					"src": "12715:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1788",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2636,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2634,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2629,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2632,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2630,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2619,
																									"src": "12736:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2631,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2633,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2635,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2610,
																					"src": "12751:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2641,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2617,
														"id": 2643,
														"nodeType": "Return",
														"src": "12686:79:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2608,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:12",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2610,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "12542:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "12557:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2612,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2611,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "12557:8:12"
													},
													"referencedDeclaration": 1788,
													"src": "12557:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:12"
									},
									"returnParameters": {
										"id": 2617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "12599:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:12"
									},
									"scope": 2647,
									"src": "12526:256:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2648,
							"src": "202:12582:12",
							"usedErrors": []
						}
					],
					"src": "103:12682:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2752
						]
					},
					"id": 2753,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2649,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2650,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:13",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2752,
							"linearizedBaseContracts": [
								2752
							],
							"name": "SignedMath",
							"nameLocation": "223:10:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2667,
										"nodeType": "Block",
										"src": "375:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2660,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2653,
															"src": "392:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2661,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2655,
															"src": "396:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2664,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2655,
														"src": "404:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:13",
													"trueExpression": {
														"id": 2663,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2653,
														"src": "400:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2659,
												"id": 2666,
												"nodeType": "Return",
												"src": "385:20:13"
											}
										]
									},
									"documentation": {
										"id": 2651,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:13",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2653,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2668,
												"src": "324:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2652,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2655,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2668,
												"src": "334:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2654,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:13"
									},
									"returnParameters": {
										"id": 2659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2668,
												"src": "367:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2657,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:13"
									},
									"scope": 2752,
									"src": "311:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2685,
										"nodeType": "Block",
										"src": "554:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2678,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2671,
															"src": "571:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2679,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2673,
															"src": "575:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2682,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2673,
														"src": "583:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:13",
													"trueExpression": {
														"id": 2681,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2671,
														"src": "579:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2677,
												"id": 2684,
												"nodeType": "Return",
												"src": "564:20:13"
											}
										]
									},
									"documentation": {
										"id": 2669,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:13",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2671,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "503:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2670,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2673,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "513:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2672,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:13"
									},
									"returnParameters": {
										"id": 2677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "546:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2675,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:13"
									},
									"scope": 2752,
									"src": "490:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2729,
										"nodeType": "Block",
										"src": "796:162:13",
										"statements": [
											{
												"assignments": [
													2697
												],
												"declarations": [
													{
														"constant": false,
														"id": 2697,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 2729,
														"src": "858:8:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2696,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2710,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2698,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "870:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2699,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2691,
																	"src": "874:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2701,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2702,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2689,
																				"src": "881:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2703,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2691,
																				"src": "885:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2705,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2708,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2711,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2697,
														"src": "910:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2716,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2697,
																						"src": "930:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2715,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2714,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2717,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2718,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2712,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2721,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2689,
																				"src": "944:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2722,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2691,
																				"src": "948:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2724,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2726,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2695,
												"id": 2728,
												"nodeType": "Return",
												"src": "903:48:13"
											}
										]
									},
									"documentation": {
										"id": 2687,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:13",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2730,
												"src": "745:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2688,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2730,
												"src": "755:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2690,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:13"
									},
									"returnParameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2730,
												"src": "788:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2693,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:13"
									},
									"scope": 2752,
									"src": "728:230:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2750,
										"nodeType": "Block",
										"src": "1102:158:13",
										"statements": [
											{
												"id": 2749,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2740,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2733,
																			"src": "1227:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:13",
																		"subExpression": {
																			"id": 2744,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2733,
																			"src": "1241:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:13",
																	"trueExpression": {
																		"id": 2743,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2733,
																		"src": "1236:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2738,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2737,
														"id": 2748,
														"nodeType": "Return",
														"src": "1212:31:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2731,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:13",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2733,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2751,
												"src": "1060:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2732,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:13"
									},
									"returnParameters": {
										"id": 2737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2751,
												"src": "1093:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:13"
									},
									"scope": 2752,
									"src": "1047:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2753,
							"src": "215:1047:13",
							"usedErrors": []
						}
					],
					"src": "109:1154:13"
				},
				"id": 13
			},
			"contracts/paymaster/KaijuVerifyingPaymaster.sol": {
				"ast": {
					"absolutePath": "contracts/paymaster/KaijuVerifyingPaymaster.sol",
					"exportedSymbols": {
						"BasePaymaster": [
							219
						],
						"Context": [
							1186
						],
						"ECDSA": [
							1781
						],
						"IAggregator": [
							491
						],
						"IEntryPoint": [
							695
						],
						"INonceManager": [
							714
						],
						"IPaymaster": [
							749
						],
						"IStakeManager": [
							854
						],
						"KaijuVerifyingPaymaster": [
							2970
						],
						"Math": [
							2647
						],
						"Ownable": [
							1164
						],
						"SignedMath": [
							2752
						],
						"Strings": [
							1415
						],
						"UserOperation": [
							881
						],
						"UserOperationLib": [
							1051
						],
						"ValidationData": [
							228
						],
						"_intersectTimeRange": [
							372
						],
						"_packValidationData": [
							409,
							447
						],
						"_parseValidationData": [
							287
						],
						"calldataKeccak": [
							457
						]
					},
					"id": 2971,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2754,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "62:24:14"
						},
						{
							"absolutePath": "@account-abstraction/contracts/core/BasePaymaster.sol",
							"file": "@account-abstraction/contracts/core/BasePaymaster.sol",
							"id": 2755,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2971,
							"sourceUnit": 220,
							"src": "89:63:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"id": 2756,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2971,
							"sourceUnit": 1782,
							"src": "153:62:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2758,
										"name": "BasePaymaster",
										"nameLocations": [
											"787:13:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 219,
										"src": "787:13:14"
									},
									"id": 2759,
									"nodeType": "InheritanceSpecifier",
									"src": "787:13:14"
								}
							],
							"canonicalName": "KaijuVerifyingPaymaster",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2757,
								"nodeType": "StructuredDocumentation",
								"src": "217:532:14",
								"text": " A paymaster that uses external service to decide whether to pay for the UserOp.\n The paymaster trusts an external signer to sign the transaction.\n The calling user must pass the UserOp to that external signer first, which performs\n whatever off-chain verification before signing the UserOp.\n Note that this signature is NOT a replacement for the account-specific signature:\n - the paymaster checks a signature to agree to PAY for GAS.\n - the account checks a signature to prove identity and account ownership."
							},
							"fullyImplemented": true,
							"id": 2970,
							"linearizedBaseContracts": [
								2970,
								219,
								1164,
								1186,
								749
							],
							"name": "KaijuVerifyingPaymaster",
							"nameLocation": "760:23:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2762,
									"libraryName": {
										"id": 2760,
										"name": "ECDSA",
										"nameLocations": [
											"814:5:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1781,
										"src": "814:5:14"
									},
									"nodeType": "UsingForDirective",
									"src": "808:24:14",
									"typeName": {
										"id": 2761,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "824:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"global": false,
									"id": 2766,
									"libraryName": {
										"id": 2763,
										"name": "UserOperationLib",
										"nameLocations": [
											"843:16:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1051,
										"src": "843:16:14"
									},
									"nodeType": "UsingForDirective",
									"src": "837:41:14",
									"typeName": {
										"id": 2765,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2764,
											"name": "UserOperation",
											"nameLocations": [
												"864:13:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 881,
											"src": "864:13:14"
										},
										"referencedDeclaration": 881,
										"src": "864:13:14",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserOperation_$881_storage_ptr",
											"typeString": "struct UserOperation"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "23d9ac9b",
									"id": 2768,
									"mutability": "immutable",
									"name": "verifyingSigner",
									"nameLocation": "909:15:14",
									"nodeType": "VariableDeclaration",
									"scope": 2970,
									"src": "884:40:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2767,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "884:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 2771,
									"mutability": "constant",
									"name": "VALID_TIMESTAMP_OFFSET",
									"nameLocation": "956:22:14",
									"nodeType": "VariableDeclaration",
									"scope": 2970,
									"src": "931:52:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2769,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "931:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 2770,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "981:2:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2774,
									"mutability": "constant",
									"name": "SIGNATURE_OFFSET",
									"nameLocation": "1015:16:14",
									"nodeType": "VariableDeclaration",
									"scope": 2970,
									"src": "990:46:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2772,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "990:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3834",
										"id": 2773,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1034:2:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_84_by_1",
											"typeString": "int_const 84"
										},
										"value": "84"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2789,
										"nodeType": "Block",
										"src": "1133:51:14",
										"statements": [
											{
												"expression": {
													"id": 2787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2785,
														"name": "verifyingSigner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2768,
														"src": "1143:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2786,
														"name": "_verifyingSigner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2779,
														"src": "1161:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1143:34:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2788,
												"nodeType": "ExpressionStatement",
												"src": "1143:34:14"
											}
										]
									},
									"id": 2790,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2782,
													"name": "_entryPoint",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2777,
													"src": "1120:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEntryPoint_$695",
														"typeString": "contract IEntryPoint"
													}
												}
											],
											"id": 2783,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2781,
												"name": "BasePaymaster",
												"nameLocations": [
													"1106:13:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 219,
												"src": "1106:13:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1106:26:14"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2777,
												"mutability": "mutable",
												"name": "_entryPoint",
												"nameLocation": "1067:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "1055:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IEntryPoint_$695",
													"typeString": "contract IEntryPoint"
												},
												"typeName": {
													"id": 2776,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2775,
														"name": "IEntryPoint",
														"nameLocations": [
															"1055:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 695,
														"src": "1055:11:14"
													},
													"referencedDeclaration": 695,
													"src": "1055:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEntryPoint_$695",
														"typeString": "contract IEntryPoint"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2779,
												"mutability": "mutable",
												"name": "_verifyingSigner",
												"nameLocation": "1088:16:14",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "1080:24:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1080:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1054:51:14"
									},
									"returnParameters": {
										"id": 2784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1133:0:14"
									},
									"scope": 2970,
									"src": "1043:141:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9c90b443",
									"id": 2794,
									"mutability": "mutable",
									"name": "senderNonce",
									"nameLocation": "1225:11:14",
									"nodeType": "VariableDeclaration",
									"scope": 2970,
									"src": "1190:46:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2793,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2791,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1198:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1190:27:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2792,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1209:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2809,
										"nodeType": "Block",
										"src": "1606:333:14",
										"statements": [
											{
												"assignments": [
													2804
												],
												"declarations": [
													{
														"constant": false,
														"id": 2804,
														"mutability": "mutable",
														"name": "pnd",
														"nameLocation": "1632:3:14",
														"nodeType": "VariableDeclaration",
														"scope": 2809,
														"src": "1617:18:14",
														"stateVariable": false,
														"storageLocation": "calldata",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2803,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1617:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2807,
												"initialValue": {
													"expression": {
														"id": 2805,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2798,
														"src": "1638:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
															"typeString": "struct UserOperation calldata"
														}
													},
													"id": 2806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1645:16:14",
													"memberName": "paymasterAndData",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 878,
													"src": "1638:23:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1617:44:14"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1681:252:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1695:17:14",
															"value": {
																"name": "userOp",
																"nodeType": "YulIdentifier",
																"src": "1706:6:14"
															},
															"variables": [
																{
																	"name": "ofs",
																	"nodeType": "YulTypedName",
																	"src": "1699:3:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1725:40:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pnd.offset",
																				"nodeType": "YulIdentifier",
																				"src": "1744:10:14"
																			},
																			{
																				"name": "ofs",
																				"nodeType": "YulIdentifier",
																				"src": "1756:3:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1740:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1740:20:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1762:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1736:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1736:29:14"
															},
															"variables": [
																{
																	"name": "len",
																	"nodeType": "YulTypedName",
																	"src": "1729:3:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1778:18:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1791:4:14",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1785:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1785:11:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1778:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1816:4:14",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "ret",
																				"nodeType": "YulIdentifier",
																				"src": "1826:3:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "len",
																						"nodeType": "YulIdentifier",
																						"src": "1835:3:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1840:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1831:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1831:12:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1822:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1822:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1809:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:36:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1809:36:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ret",
																		"nodeType": "YulIdentifier",
																		"src": "1865:3:14"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "1870:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1858:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1858:16:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1858:16:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ret",
																				"nodeType": "YulIdentifier",
																				"src": "1904:3:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1909:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1900:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1900:12:14"
																	},
																	{
																		"name": "ofs",
																		"nodeType": "YulIdentifier",
																		"src": "1914:3:14"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "1919:3:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1887:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1887:36:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1887:36:14"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2804,
														"isOffset": true,
														"isSlot": false,
														"src": "1744:10:14",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 2801,
														"isOffset": false,
														"isSlot": false,
														"src": "1778:3:14",
														"valueSize": 1
													},
													{
														"declaration": 2801,
														"isOffset": false,
														"isSlot": false,
														"src": "1826:3:14",
														"valueSize": 1
													},
													{
														"declaration": 2801,
														"isOffset": false,
														"isSlot": false,
														"src": "1865:3:14",
														"valueSize": 1
													},
													{
														"declaration": 2801,
														"isOffset": false,
														"isSlot": false,
														"src": "1904:3:14",
														"valueSize": 1
													},
													{
														"declaration": 2798,
														"isOffset": false,
														"isSlot": false,
														"src": "1706:6:14",
														"valueSize": 1
													}
												],
												"id": 2808,
												"nodeType": "InlineAssembly",
												"src": "1672:261:14"
											}
										]
									},
									"documentation": {
										"id": 2795,
										"nodeType": "StructuredDocumentation",
										"src": "1243:271:14",
										"text": " @dev Copy directly the userOp from calldata up to (but not including) the paymasterAndData. This encoding depends on the ABI encoding of calldata, but is much lighter to copy than referencing each field separately.\n @param userOp | User Operation"
									},
									"id": 2810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pack",
									"nameLocation": "1529:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2798,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "1557:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2810,
												"src": "1534:29:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 2797,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2796,
														"name": "UserOperation",
														"nameLocations": [
															"1534:13:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "1534:13:14"
													},
													"referencedDeclaration": 881,
													"src": "1534:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$881_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:31:14"
									},
									"returnParameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "1601:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 2810,
												"src": "1588:16:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2800,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:18:14"
									},
									"scope": 2970,
									"src": "1520:419:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2845,
										"nodeType": "Block",
										"src": "2618:257:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2827,
																			"name": "userOp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2814,
																			"src": "2679:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
																				"typeString": "struct UserOperation calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
																				"typeString": "struct UserOperation calldata"
																			}
																		],
																		"id": 2826,
																		"name": "pack",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2810,
																		"src": "2674:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_struct$_UserOperation_$881_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (struct UserOperation calldata) pure returns (bytes memory)"
																		}
																	},
																	"id": 2828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2674:12:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"expression": {
																		"id": 2829,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2704:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2710:7:14",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "2704:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2833,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2743:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_KaijuVerifyingPaymaster_$2970",
																				"typeString": "contract KaijuVerifyingPaymaster"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_KaijuVerifyingPaymaster_$2970",
																				"typeString": "contract KaijuVerifyingPaymaster"
																			}
																		],
																		"id": 2832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2735:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2831,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2735:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2735:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"baseExpression": {
																		"id": 2835,
																		"name": "senderNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2794,
																		"src": "2766:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2839,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 2836,
																				"name": "userOp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2814,
																				"src": "2778:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
																					"typeString": "struct UserOperation calldata"
																				}
																			},
																			"id": 2837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2785:9:14",
																			"memberName": "getSender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 903,
																			"src": "2778:16:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_struct$_UserOperation_$881_calldata_ptr_$returns$_t_address_$attached_to$_t_struct$_UserOperation_$881_calldata_ptr_$",
																				"typeString": "function (struct UserOperation calldata) pure returns (address)"
																			}
																		},
																		"id": 2838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2778:18:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2766:31:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2840,
																	"name": "validUntil",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2816,
																	"src": "2815:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																},
																{
																	"id": 2841,
																	"name": "validAfter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2818,
																	"src": "2843:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	},
																	{
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																],
																"expression": {
																	"id": 2824,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2646:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2650:6:14",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2646:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2646:221:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2823,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2636:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2636:232:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2822,
												"id": 2844,
												"nodeType": "Return",
												"src": "2629:239:14"
											}
										]
									},
									"documentation": {
										"id": 2811,
										"nodeType": "StructuredDocumentation",
										"src": "1945:547:14",
										"text": " @dev The hash we're going to sign off-chain (and validate on-chain). Method is called by \n      Off-chain Service - to sign the request.\n      On-chain Service - from the validatePaymasterUserOp, to validate the signature.\n @param userOp | User Operation\n @param validUntil | Validate Period\n @param validAfter | Validate Period\n \n Note:    that this signature covers all fields of the UserOperation, except the \"paymasterAndData\",\n          which will carry the signature itself."
									},
									"functionSelector": "94e1fc19",
									"id": 2846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getHash",
									"nameLocation": "2507:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2814,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "2538:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "2515:29:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 2813,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2812,
														"name": "UserOperation",
														"nameLocations": [
															"2515:13:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "2515:13:14"
													},
													"referencedDeclaration": 881,
													"src": "2515:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$881_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2816,
												"mutability": "mutable",
												"name": "validUntil",
												"nameLocation": "2553:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "2546:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 2815,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "2546:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "validAfter",
												"nameLocation": "2572:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "2565:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 2817,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2514:69:14"
									},
									"returnParameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "2609:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2820,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2609:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:9:14"
									},
									"scope": 2970,
									"src": "2498:377:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 2932,
										"nodeType": "Block",
										"src": "3851:650:14",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 2862,
															"name": "requiredPreFund",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2854,
															"src": "3862:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2863,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3861:17:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2864,
												"nodeType": "ExpressionStatement",
												"src": "3861:17:14"
											},
											{
												"assignments": [
													2866,
													2868,
													2870
												],
												"declarations": [
													{
														"constant": false,
														"id": 2866,
														"mutability": "mutable",
														"name": "validUntil",
														"nameLocation": "3897:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2932,
														"src": "3890:17:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														},
														"typeName": {
															"id": 2865,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "3890:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2868,
														"mutability": "mutable",
														"name": "validAfter",
														"nameLocation": "3916:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2932,
														"src": "3909:17:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														},
														"typeName": {
															"id": 2867,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "3909:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2870,
														"mutability": "mutable",
														"name": "signature",
														"nameLocation": "3943:9:14",
														"nodeType": "VariableDeclaration",
														"scope": 2932,
														"src": "3928:24:14",
														"stateVariable": false,
														"storageLocation": "calldata",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2869,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3928:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2875,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2872,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2850,
																"src": "3978:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
																	"typeString": "struct UserOperation calldata"
																}
															},
															"id": 2873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3985:16:14",
															"memberName": "paymasterAndData",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 878,
															"src": "3978:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 2871,
														"name": "parsePaymasterAndData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2969,
														"src": "3956:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_uint48_$_t_uint48_$_t_bytes_calldata_ptr_$",
															"typeString": "function (bytes calldata) pure returns (uint48,uint48,bytes calldata)"
														}
													},
													"id": 2874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3956:46:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint48_$_t_uint48_$_t_bytes_calldata_ptr_$",
														"typeString": "tuple(uint48,uint48,bytes calldata)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3889:113:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2877,
																		"name": "signature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2870,
																		"src": "4021:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	},
																	"id": 2878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4031:6:14",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "4021:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4041:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "4021:22:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2881,
																		"name": "signature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2870,
																		"src": "4047:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	},
																	"id": 2882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4057:6:14",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "4047:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "3635",
																	"id": 2883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4067:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_65_by_1",
																		"typeString": "int_const 65"
																	},
																	"value": "65"
																},
																"src": "4047:22:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4021:48:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566572696679696e675061796d61737465723a20696e76616c6964207369676e6174757265206c656e67746820696e207061796d6173746572416e6444617461",
															"id": 2886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4071:66:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7",
																"typeString": "literal_string \"VerifyingPaymaster: invalid signature length in paymasterAndData\""
															},
															"value": "VerifyingPaymaster: invalid signature length in paymasterAndData"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7",
																"typeString": "literal_string \"VerifyingPaymaster: invalid signature length in paymasterAndData\""
															}
														],
														"id": 2876,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4013:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4013:125:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2888,
												"nodeType": "ExpressionStatement",
												"src": "4013:125:14"
											},
											{
												"assignments": [
													2890
												],
												"declarations": [
													{
														"constant": false,
														"id": 2890,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "4156:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 2932,
														"src": "4148:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2889,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4148:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2899,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2894,
																	"name": "userOp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2850,
																	"src": "4200:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
																		"typeString": "struct UserOperation calldata"
																	}
																},
																{
																	"id": 2895,
																	"name": "validUntil",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2866,
																	"src": "4208:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																},
																{
																	"id": 2896,
																	"name": "validAfter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2868,
																	"src": "4220:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
																		"typeString": "struct UserOperation calldata"
																	},
																	{
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	},
																	{
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																],
																"id": 2893,
																"name": "getHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2846,
																"src": "4192:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_UserOperation_$881_calldata_ptr_$_t_uint48_$_t_uint48_$returns$_t_bytes32_$",
																	"typeString": "function (struct UserOperation calldata,uint48,uint48) view returns (bytes32)"
																}
															},
															"id": 2897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:39:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2891,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "4163:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$1781_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 2892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4169:22:14",
														"memberName": "toEthSignedMessageHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1726,
														"src": "4163:28:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (bytes32)"
														}
													},
													"id": 2898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4163:69:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4148:84:14"
											},
											{
												"expression": {
													"id": 2905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "4242:33:14",
													"subExpression": {
														"baseExpression": {
															"id": 2900,
															"name": "senderNonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2794,
															"src": "4242:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2904,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 2901,
																	"name": "userOp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2850,
																	"src": "4254:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
																		"typeString": "struct UserOperation calldata"
																	}
																},
																"id": 2902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4261:9:14",
																"memberName": "getSender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 903,
																"src": "4254:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_struct$_UserOperation_$881_calldata_ptr_$returns$_t_address_$attached_to$_t_struct$_UserOperation_$881_calldata_ptr_$",
																	"typeString": "function (struct UserOperation calldata) pure returns (address)"
																}
															},
															"id": 2903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4254:18:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4242:31:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2906,
												"nodeType": "ExpressionStatement",
												"src": "4242:33:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2907,
														"name": "verifyingSigner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2768,
														"src": "4290:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"id": 2910,
																"name": "hash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2890,
																"src": "4323:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 2911,
																"name": "signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2870,
																"src": "4329:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															],
															"expression": {
																"id": 2908,
																"name": "ECDSA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1781,
																"src": "4309:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ECDSA_$1781_$",
																	"typeString": "type(library ECDSA)"
																}
															},
															"id": 2909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4315:7:14",
															"memberName": "recover",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1542,
															"src": "4309:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
																"typeString": "function (bytes32,bytes memory) pure returns (address)"
															}
														},
														"id": 2912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4309:30:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4290:49:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2923,
												"nodeType": "IfStatement",
												"src": "4286:139:14",
												"trueBody": {
													"id": 2922,
													"nodeType": "Block",
													"src": "4341:84:14",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "",
																		"id": 2914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4363:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "74727565",
																				"id": 2916,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4386:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			{
																				"id": 2917,
																				"name": "validUntil",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2866,
																				"src": "4391:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint48",
																					"typeString": "uint48"
																				}
																			},
																			{
																				"id": 2918,
																				"name": "validAfter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2868,
																				"src": "4402:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint48",
																					"typeString": "uint48"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				{
																					"typeIdentifier": "t_uint48",
																					"typeString": "uint48"
																				},
																				{
																					"typeIdentifier": "t_uint48",
																					"typeString": "uint48"
																				}
																			],
																			"id": 2915,
																			"name": "_packValidationData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				409,
																				447
																			],
																			"referencedDeclaration": 447,
																			"src": "4366:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint48_$_t_uint48_$returns$_t_uint256_$",
																				"typeString": "function (bool,uint48,uint48) pure returns (uint256)"
																			}
																		},
																		"id": 2919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4366:47:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2920,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4362:52:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_uint256_$",
																	"typeString": "tuple(literal_string \"\",uint256)"
																}
															},
															"functionReturnParameters": 2861,
															"id": 2921,
															"nodeType": "Return",
															"src": "4355:59:14"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "",
															"id": 2924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4442:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"arguments": [
																{
																	"hexValue": "66616c7365",
																	"id": 2926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4465:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																{
																	"id": 2927,
																	"name": "validUntil",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2866,
																	"src": "4471:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																},
																{
																	"id": 2928,
																	"name": "validAfter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2868,
																	"src": "4482:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	},
																	{
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																],
																"id": 2925,
																"name": "_packValidationData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	409,
																	447
																],
																"referencedDeclaration": 447,
																"src": "4445:19:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint48_$_t_uint48_$returns$_t_uint256_$",
																	"typeString": "function (bool,uint48,uint48) pure returns (uint256)"
																}
															},
															"id": 2929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4445:48:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2930,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4441:53:14",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_uint256_$",
														"typeString": "tuple(literal_string \"\",uint256)"
													}
												},
												"functionReturnParameters": 2861,
												"id": 2931,
												"nodeType": "Return",
												"src": "4434:60:14"
											}
										]
									},
									"documentation": {
										"id": 2847,
										"nodeType": "StructuredDocumentation",
										"src": "2881:773:14",
										"text": " @dev verify our external signer signed this request. The \"paymasterAndData\" is expected to be the paymaster and a signature over the entire request params\n @param userOp | User Operation\n @param requiredPreFund | To be Developed\n @return context | \n @return validationData | Validated Data for the Paymaster\n \n Note :   ECDSA library supports both 64 and 65-byte long signatures. Only \"require\" it here so that the revert reason on invalid signature will be of \"VerifyingPaymaster\", and not \"ECDSA\".\n          Don't revert on signature failure: return SIG_VALIDATION_FAILED\n          No need for other on-chain validation: entire UserOp should have been checked by the external service prior to signing it."
									},
									"id": 2933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validatePaymasterUserOp",
									"nameLocation": "3669:24:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2856,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3787:8:14"
									},
									"parameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2850,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "3717:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2933,
												"src": "3694:29:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 2849,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2848,
														"name": "UserOperation",
														"nameLocations": [
															"3694:13:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "3694:13:14"
													},
													"referencedDeclaration": 881,
													"src": "3694:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$881_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2933,
												"src": "3725:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2851,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3725:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2854,
												"mutability": "mutable",
												"name": "requiredPreFund",
												"nameLocation": "3757:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 2933,
												"src": "3749:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3749:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3693:80:14"
									},
									"returnParameters": {
										"id": 2861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2858,
												"mutability": "mutable",
												"name": "context",
												"nameLocation": "3818:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2933,
												"src": "3805:20:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2857,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3805:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2860,
												"mutability": "mutable",
												"name": "validationData",
												"nameLocation": "3835:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 2933,
												"src": "3827:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3827:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:46:14"
									},
									"scope": 2970,
									"src": "3660:841:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2968,
										"nodeType": "Block",
										"src": "4761:187:14",
										"statements": [
											{
												"expression": {
													"id": 2960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 2945,
																"name": "validUntil",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2939,
																"src": "4772:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															},
															{
																"id": 2946,
																"name": "validAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2941,
																"src": "4784:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															}
														],
														"id": 2947,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4771:24:14",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint48_$_t_uint48_$",
															"typeString": "tuple(uint48,uint48)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 2950,
																	"name": "paymasterAndData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2936,
																	"src": "4809:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"endExpression": {
																	"id": 2952,
																	"name": "SIGNATURE_OFFSET",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2774,
																	"src": "4849:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexRangeAccess",
																"src": "4809:57:14",
																"startExpression": {
																	"id": 2951,
																	"name": "VALID_TIMESTAMP_OFFSET",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2771,
																	"src": "4826:22:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr_slice",
																	"typeString": "bytes calldata slice"
																}
															},
															{
																"components": [
																	{
																		"id": 2955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4868:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint48_$",
																			"typeString": "type(uint48)"
																		},
																		"typeName": {
																			"id": 2954,
																			"name": "uint48",
																			"nodeType": "ElementaryTypeName",
																			"src": "4868:6:14",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 2957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4876:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint48_$",
																			"typeString": "type(uint48)"
																		},
																		"typeName": {
																			"id": 2956,
																			"name": "uint48",
																			"nodeType": "ElementaryTypeName",
																			"src": "4876:6:14",
																			"typeDescriptions": {}
																		}
																	}
																],
																"id": 2958,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4867:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_type$_t_uint48_$_$_t_type$_t_uint48_$_$",
																	"typeString": "tuple(type(uint48),type(uint48))"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_calldata_ptr_slice",
																	"typeString": "bytes calldata slice"
																},
																{
																	"typeIdentifier": "t_tuple$_t_type$_t_uint48_$_$_t_type$_t_uint48_$_$",
																	"typeString": "tuple(type(uint48),type(uint48))"
																}
															],
															"expression": {
																"id": 2948,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "4798:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 2949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4802:6:14",
															"memberName": "decode",
															"nodeType": "MemberAccess",
															"src": "4798:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4798:86:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint48_$_t_uint48_$",
															"typeString": "tuple(uint48,uint48)"
														}
													},
													"src": "4771:113:14",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2961,
												"nodeType": "ExpressionStatement",
												"src": "4771:113:14"
											},
											{
												"expression": {
													"id": 2966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2962,
														"name": "signature",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2943,
														"src": "4894:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes calldata"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 2963,
															"name": "paymasterAndData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2936,
															"src": "4906:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														"id": 2965,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexRangeAccess",
														"src": "4906:35:14",
														"startExpression": {
															"id": 2964,
															"name": "SIGNATURE_OFFSET",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2774,
															"src": "4923:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr_slice",
															"typeString": "bytes calldata slice"
														}
													},
													"src": "4894:47:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"id": 2967,
												"nodeType": "ExpressionStatement",
												"src": "4894:47:14"
											}
										]
									},
									"documentation": {
										"id": 2934,
										"nodeType": "StructuredDocumentation",
										"src": "4507:100:14",
										"text": " @dev parse paymaster and data\n @param paymasterAndData | paymaster and data"
									},
									"functionSelector": "94d4ad60",
									"id": 2969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "parsePaymasterAndData",
									"nameLocation": "4622:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2936,
												"mutability": "mutable",
												"name": "paymasterAndData",
												"nameLocation": "4659:16:14",
												"nodeType": "VariableDeclaration",
												"scope": 2969,
												"src": "4644:31:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2935,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4644:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4643:33:14"
									},
									"returnParameters": {
										"id": 2944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2939,
												"mutability": "mutable",
												"name": "validUntil",
												"nameLocation": "4704:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2969,
												"src": "4697:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 2938,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "4697:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2941,
												"mutability": "mutable",
												"name": "validAfter",
												"nameLocation": "4723:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2969,
												"src": "4716:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 2940,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "4716:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2943,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "4750:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2969,
												"src": "4735:24:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2942,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4696:64:14"
									},
									"scope": 2970,
									"src": "4613:335:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2971,
							"src": "751:4199:14",
							"usedErrors": []
						}
					],
					"src": "62:4888:14"
				},
				"id": 14
			}
		}
	}
}